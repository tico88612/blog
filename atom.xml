<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jerry Yang&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.yangjerry.tw/"/>
  <updated>2019-02-15T09:01:48.033Z</updated>
  <id>http://blog.yangjerry.tw/</id>
  
  <author>
    <name>Jerry Yang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>O(1)的費氏數列？公式解就一定是O(1)？</title>
    <link href="http://blog.yangjerry.tw/2019/01/31/fibonacci-is-bigO1/"/>
    <id>http://blog.yangjerry.tw/2019/01/31/fibonacci-is-bigO1/</id>
    <published>2019-01-31T05:15:00.000Z</published>
    <updated>2019-02-15T09:01:48.033Z</updated>
    
    <content type="html"><![CDATA[<p>我在撰寫此貼文時，原留言者已經刪留言了，反正就是說「費氏數列有公式解，複雜度就是$O(1)$」<br><a id="more"></a></p><p>於是一堆國手紛紛出籠，然後就……你看就知道了<br><a href="https://www.facebook.com/groups/pythontw/permalink/10158445814613438/" target="_blank" rel="noopener">原文連結：https://www.facebook.com/groups/pythontw/permalink/10158445814613438/</a></p><p>甚至出現 「$\pi$ 跟 $e$ 都存在月球上，這樣就存取最快了，$O(1)$！」</p><p><del>（果然用爛留言去釣高手是最快的辦法，$O(1)$！）</del></p><hr><h2 id="版上的大神在反串什麼？"><a href="#版上的大神在反串什麼？" class="headerlink" title="版上的大神在反串什麼？"></a>版上的大神在反串什麼？</h2><p>首先，先來簡單介紹時間複雜度（這只是大眾版的）<br>要計算最壞的時間複雜度我們會用 big-O</p><p>假設$n$是資料個數 或 計算大小<br>$O(1)$是常數複雜度<br>意思是說：計算量不會與 $n$ 的大小有任何關係，Ex.$1+2+…+N$的公式解</p><p>$O(\log{n})$是對數複雜度<br>意思是說：計算量會與 $n$ 的大小呈現對數關係，Ex.二分搜尋法</p><p>$O(n)$是線性複雜度<br>意思是說：計算量會與 $n$ 的大小呈現線性（直線）關係</p><h2 id="公式解就一定是O-1-？"><a href="#公式解就一定是O-1-？" class="headerlink" title="公式解就一定是O(1)？"></a>公式解就一定是O(1)？</h2><p>從1加到N的算式可以寫成這樣<br>$1+2+…+N=\dfrac{n(n+1)}{2}$</p><p>算式就要做一次乘法跟一次除法</p><p>不論$N$開多大，開到$10^{100}$，算式都只要做一次乘法跟一次除法就好</p><p><strong>可是費氏數列有公式解</strong></p><p>$Fibonacci(n)=\dfrac{\sqrt{5}}{5} \cdot \left[\left(\dfrac{1 + \sqrt{5}}{2}\right)^{n} - \left(\dfrac{1 - \sqrt{5}}{2}\right)^{n}\right]$</p><p>對，費氏數列有公式解，但是它不是$O(1)$</p><p>關鍵就是這個$\left(\dfrac{1 + \sqrt{5}}{2}\right)^{n}$ 跟 $\left(\dfrac{1 - \sqrt{5}}{2}\right)^{n}$</p><p>要算第$100$項，這東西就要乘$100$次<br>要算第$10000$項，這東西就要乘$10000$次<br>要算第$10^9$項，這東西就要乘$10^9$次</p><p>所以這是線性複雜度$O(n)$<br>（高手就知道這是$O(\log{n})$，這可以矩陣快速冪）</p><p><strong>$O(1)$的意義不是在快，而是資料量大小不論多少，他都是固定的計算次數。</strong></p><p>如果今天我設計了一個函數：<br>$n=1$，要計算次數是$10^8$，<br>$n=10^6$，要計算次數是$10^8$，<br>$n=10^{100}$，要計算次數是$10^8$，<br>不論$n$的大小，計算次數都是$10^8$。</p><p>時間複雜度：$O(1)$，因為計算次數跟$n$沒有任何關係</p><h2 id="總結"><a href="#總結" class="headerlink" title="總結"></a>總結</h2><p>要下什麼總結呢？我只知道原Po在原文被歪樓後就被邊緣了QQ</p><p>然後原留言者也刪留言、關臉書了。</p><p><strong>如果討論是一直在堅持自己的意見，那就不叫討論了</strong></p><p>結果變成競程選手們茶餘飯後的話題</p><p>整體過程大概就是這樣啦！如果有錯誤，歡迎在底下留言討論！</p><h3 id="2018-02-15-更新"><a href="#2018-02-15-更新" class="headerlink" title="2018/02/15 更新"></a>2018/02/15 更新</h3><p><a href="https://www.facebook.com/groups/pythontw/permalink/10158487765003438/" target="_blank" rel="noopener">新文朝聖 <_ _="">：https://www.facebook.com/groups/pythontw/permalink/10158487765003438/</_></a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我在撰寫此貼文時，原留言者已經刪留言了，反正就是說「費氏數列有公式解，複雜度就是$O(1)$」&lt;br&gt;
    
    </summary>
    
      <category term="生活" scheme="http://blog.yangjerry.tw/categories/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="程式日常" scheme="http://blog.yangjerry.tw/categories/%E7%94%9F%E6%B4%BB/%E7%A8%8B%E5%BC%8F%E6%97%A5%E5%B8%B8/"/>
    
    
      <category term="費氏數列" scheme="http://blog.yangjerry.tw/tags/%E8%B2%BB%E6%B0%8F%E6%95%B8%E5%88%97/"/>
    
      <category term="公式解" scheme="http://blog.yangjerry.tw/tags/%E5%85%AC%E5%BC%8F%E8%A7%A3/"/>
    
      <category term="時間複雜度" scheme="http://blog.yangjerry.tw/tags/%E6%99%82%E9%96%93%E8%A4%87%E9%9B%9C%E5%BA%A6/"/>
    
  </entry>
  
  <entry>
    <title>洛谷OJ P1031 均分纸牌</title>
    <link href="http://blog.yangjerry.tw/2019/01/19/lg-1031/"/>
    <id>http://blog.yangjerry.tw/2019/01/19/lg-1031/</id>
    <published>2019-01-19T06:06:21.000Z</published>
    <updated>2019-01-19T06:36:08.937Z</updated>
    
    <content type="html"><![CDATA[<h2 id="題目-Problem"><a href="#題目-Problem" class="headerlink" title="題目 Problem"></a>題目 Problem</h2><p><a href="https://www.luogu.org/problemnew/show/P1031" target="_blank" rel="noopener">題目連結：https://www.luogu.org/problemnew/show/P1031</a><br><a id="more"></a></p><h3 id="敘述-Description"><a href="#敘述-Description" class="headerlink" title="敘述 Description"></a>敘述 Description</h3><p>有$N$堆纸牌，编号分别为 $1,2,…,N$。每堆上有若干张，但纸牌总数必为$N$的倍数。可以在任一堆上取若干张纸牌，然后移动。</p><p>移牌规则为：在编号为$1$堆上取的纸牌，只能移到编号为$2$的堆上；在编号为$N$的堆上取的纸牌，只能移到编号为$N−1$的堆上；其他堆上取的纸牌，可以移到相邻左边或右边的堆上。</p><p>现在要求找出一种移动方法，用最少的移动次数使每堆上纸牌数都一样多。</p><p>例如$N=4$，$4$堆纸牌数分别为：</p><p>①$9$②$8$③$17$④$6$</p><p>移动$3$次可达到目的：</p><p>从 ③ 取$4$张牌放到 ④ $（9,8,13,10）$-&gt; 从 ③ 取333张牌放到 ②$（9,11,10,10）$-&gt; 从 ② 取111张牌放到①$（10,10,10,10）$。</p><h3 id="輸入-Input"><a href="#輸入-Input" class="headerlink" title="輸入 Input"></a>輸入 Input</h3><p>两行</p><p>第一行为：$N$（$N$ 堆纸牌，$1 \leq N \leq 100$）</p><p>第二行为：$A_1,A_2, … ,A_n$（$N$堆纸牌，每堆纸牌初始数，$1 \leq A_i \leq 10000$）</p><h3 id="輸出-Output"><a href="#輸出-Output" class="headerlink" title="輸出 Output"></a>輸出 Output</h3><p>一行：即所有堆均达到相等时的最少移动次数。</p><h3 id="範例輸入-Sample-Input"><a href="#範例輸入-Sample-Input" class="headerlink" title="範例輸入 Sample Input"></a>範例輸入 Sample Input</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">9 8 17 6</span><br></pre></td></tr></table></figure><h3 id="範例輸出-Sample-Output"><a href="#範例輸出-Sample-Output" class="headerlink" title="範例輸出 Sample Output"></a>範例輸出 Sample Output</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><h2 id="題解-Solution"><a href="#題解-Solution" class="headerlink" title="題解 Solution"></a>題解 Solution</h2><p>Re:<a href="https://www.luogu.org/discuss/show/75812" target="_blank" rel="noopener">我没看懂我自己的想法，居然过了</a><br>因為沒有中國門號，無法在上面回，就留在這裡了</p><p>作法就是把差距移到下一個位置<br>也就是說這堆的牌把下一堆的牌拿過來平衡<br>反正下一堆不平衡從下下一堆再拿牌也沒關係</p><p>大概就是這樣</p><h3 id="程式碼-Accepted-Code"><a href="#程式碼-Accepted-Code" class="headerlink" title="程式碼 Accepted Code"></a>程式碼 Accepted Code</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _ ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="comment">// 參考來源：https://www.luogu.org/discuss/show/75812</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> N,sum=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;N;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; enter(N);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++)&#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;enter[i];</span><br><span class="line">        sum+=enter[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> avg=sum/N,timee=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N<span class="number">-1</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(enter[i]!=avg)&#123;</span><br><span class="line">            enter[i+<span class="number">1</span>]+=enter[i]-avg;</span><br><span class="line">            timee++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;timee&lt;&lt;<span class="string">'\n'</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="後記-Afterword"><a href="#後記-Afterword" class="headerlink" title="後記 Afterword"></a>後記 Afterword</h2><p>稍微看一下討論區，這題思路也蠻多的，可以好好嘗試其他的過程</p><p>本人試寫<a href="https://www.luogu.org" target="_blank" rel="noopener">洛谷OJ</a>，把「新手村」都刷光光了<br>難度排序還不錯，認識一下 NOI 或 NOIP 的題目<br>之後也會開始寫<a href="https://www.luogu.org" target="_blank" rel="noopener">洛谷OJ</a>的相關題解</p><p>（為何不用洛谷裡面的 Blog 呢？）</p><p>因為我沒有中國門號 QAQ</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;題目-Problem&quot;&gt;&lt;a href=&quot;#題目-Problem&quot; class=&quot;headerlink&quot; title=&quot;題目 Problem&quot;&gt;&lt;/a&gt;題目 Problem&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://www.luogu.org/problemnew/show/P1031&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;題目連結：https://www.luogu.org/problemnew/show/P1031&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="解題區" scheme="http://blog.yangjerry.tw/categories/%E8%A7%A3%E9%A1%8C%E5%8D%80/"/>
    
      <category term="解題報告書 - 洛谷OJ" scheme="http://blog.yangjerry.tw/categories/%E8%A7%A3%E9%A1%8C%E5%8D%80/%E8%A7%A3%E9%A1%8C%E5%A0%B1%E5%91%8A%E6%9B%B8-%E6%B4%9B%E8%B0%B7OJ/"/>
    
    
  </entry>
  
  <entry>
    <title>c878. 107北二5.議會質詢紀錄</title>
    <link href="http://blog.yangjerry.tw/2018/11/22/zj-c878/"/>
    <id>http://blog.yangjerry.tw/2018/11/22/zj-c878/</id>
    <published>2018-11-22T02:28:47.000Z</published>
    <updated>2018-11-22T05:08:05.660Z</updated>
    
    <content type="html"><![CDATA[<h2 id="題目-Problem"><a href="#題目-Problem" class="headerlink" title="題目 Problem"></a>題目 Problem</h2><p><a href="https://zerojudge.tw/ShowProblem?problemid=c878" target="_blank" rel="noopener">題目連結：https://zerojudge.tw/ShowProblem?problemid=c878</a><br><a id="more"></a></p><h3 id="敘述-Description"><a href="#敘述-Description" class="headerlink" title="敘述 Description"></a>敘述 Description</h3><p>根據民主政治的精神，政府單位有責任到民意代表所組成的會議中接受質詢與監督。某議會的議長在會期開始前就和政府單位進行下面的溝通：「我們議會希望被質詢的官員每一次都要出席。如果有<strong>兩次以上的請假紀錄</strong>，或是<strong>連續三次以上請代理</strong>的同仁來接受質詢的話，恐怕會造成雙方溝通上的緊張。」<br>請你寫一隻程式來統計一下，當官員需要被質詢 N 次的情況下，有多少種官員出席紀錄可以保持府會的和諧關係。另外，由於答案可能會非常大，請回傳除以 100000007 之後的餘數。</p><h3 id="輸入-Input"><a href="#輸入-Input" class="headerlink" title="輸入 Input"></a>輸入 Input</h3><p>測試資料只有一行，只有一個正整數 N，代表某一官員所要接受質詢的次數。N 的範圍從 2 到 120000。</p><h3 id="輸出-Output"><a href="#輸出-Output" class="headerlink" title="輸出 Output"></a>輸出 Output</h3><p>輸出資料為一個數值，為能夠保持府會和諧的出席紀錄組合數量。</p><h3 id="範例輸入-Sample-Input"><a href="#範例輸入-Sample-Input" class="headerlink" title="範例輸入 Sample Input"></a>範例輸入 Sample Input</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">範例輸入一：</span><br><span class="line">2</span><br><span class="line"></span><br><span class="line">範例輸入二：</span><br><span class="line">3</span><br></pre></td></tr></table></figure><h3 id="範例輸出-Sample-Output"><a href="#範例輸出-Sample-Output" class="headerlink" title="範例輸出 Sample Output"></a>範例輸出 Sample Output</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">範例輸出一：</span><br><span class="line">8</span><br><span class="line"></span><br><span class="line">範例輸出二：</span><br><span class="line">19</span><br></pre></td></tr></table></figure><h3 id="提示-Hint"><a href="#提示-Hint" class="headerlink" title="提示 Hint"></a>提示 Hint</h3><p>範例輸入一：<br>八種組合列在下面：<br>[出席，出席][出席，代理][代理，出席]<br>[請假，出席][請假，代理][出席，請假]<br>[代理，請假][代理，代理]</p><p>範例輸入二：<br>會破壞行政單位和議會關係的紀錄組合：<br>[假假出][假出假][出假假][假假代][假代假]<br>[代假假][假假假][代代代]</p><h2 id="題解-Solution"><a href="#題解-Solution" class="headerlink" title="題解 Solution"></a>題解 Solution</h2><p>根據英國(?)研究顯示，看到 $Mod$ 題目，有 $87\%$ 都是DP題<br>想了半天還是沒有想到DP轉移式<br>後來跟FB社團裡的大神求助後<br>才知道<strong>兩次以上的請假紀錄</strong>或是<strong>連續三次以上請代理</strong>需要分開寫</p><p>定義一下$dp[i][j][k]$<br>$i$是天數<br>$j$是請假天數<br>$k$是連續代理次數</p><p>所以可以這樣寫<br>$dp[120001][2][3]$</p><p>轉移式就可以這樣寫：<br>0次請假 且 0次連續代理 = 前一天的（0次請假 且 0次連續代理 + 0次請假 且 1次連續代理 + 0次請假 且 2次連續代理）</p><script type="math/tex; mode=display">dp[i][0][0]=dp[i-1][0][0]+dp[i-1][0][1]+dp[i-1][0][2]</script><p>0次請假 且 1次連續代理 = 前一天的（0次請假 且 0次連續代理）</p><script type="math/tex; mode=display">dp[i][0][1]=dp[i-1][0][0]</script><p>0次請假 且 2次連續代理 = 前一天的（0次請假 且 1次連續代理）</p><script type="math/tex; mode=display">dp[i][0][2]=dp[i-1][0][1]</script><p>1次請假 且 0次連續代理 = 前一天的（0次請假 且 0次連續代理 + 0次請假 且 1次連續代理 + 0次請假 且 2次連續代理 + 1次請假 且 0次連續代理 + 1次請假 且 1次連續代理 + 1次請假 且 2次連續代理）</p><p>這裡的會有0次請假，因為之前沒有請假，代表他今天可以請假<br>這裡的會有1次請假，代表他今天出席</p><script type="math/tex; mode=display">dp[i][1][0]=dp[i-1][0][0]+dp[i-1][0][1]+dp[i-1][0][2]+dp[i-1][1][0]+dp[i-1][1][1]+dp[i-1][1][2]</script><p>1次請假 且 1次連續代理 = 前一天的（1次請假 且 0次連續代理）</p><script type="math/tex; mode=display">dp[i][1][1]=dp[i-1][1][0]</script><p>1次請假 且 2次連續代理 = 前一天的（1次請假 且 1次連續代理）</p><script type="math/tex; mode=display">dp[i][1][2]=dp[i-1][1][1]</script><h3 id="程式碼-Accepted-Code"><a href="#程式碼-Accepted-Code" class="headerlink" title="程式碼 Accepted Code"></a>程式碼 Accepted Code</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _ ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> dp[<span class="number">120002</span>][<span class="number">2</span>][<span class="number">3</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">dp[<span class="number">1</span>][<span class="number">0</span>][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">dp[<span class="number">1</span>][<span class="number">0</span>][<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">dp[<span class="number">1</span>][<span class="number">1</span>][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt; <span class="number">120002</span>; ++i)&#123;</span><br><span class="line">dp[i][<span class="number">0</span>][<span class="number">0</span>]=(dp[i<span class="number">-1</span>][<span class="number">0</span>][<span class="number">0</span>]+dp[i<span class="number">-1</span>][<span class="number">0</span>][<span class="number">1</span>]+dp[i<span class="number">-1</span>][<span class="number">0</span>][<span class="number">2</span>])%<span class="number">100000007</span>;</span><br><span class="line">dp[i][<span class="number">0</span>][<span class="number">1</span>]=dp[i<span class="number">-1</span>][<span class="number">0</span>][<span class="number">0</span>]%<span class="number">100000007</span>;</span><br><span class="line">dp[i][<span class="number">0</span>][<span class="number">2</span>]=dp[i<span class="number">-1</span>][<span class="number">0</span>][<span class="number">1</span>]%<span class="number">100000007</span>;</span><br><span class="line">dp[i][<span class="number">1</span>][<span class="number">0</span>]=(dp[i<span class="number">-1</span>][<span class="number">0</span>][<span class="number">0</span>]+dp[i<span class="number">-1</span>][<span class="number">0</span>][<span class="number">1</span>]+dp[i<span class="number">-1</span>][<span class="number">0</span>][<span class="number">2</span>]+dp[i<span class="number">-1</span>][<span class="number">1</span>][<span class="number">0</span>]+dp[i<span class="number">-1</span>][<span class="number">1</span>][<span class="number">1</span>]+dp[i<span class="number">-1</span>][<span class="number">1</span>][<span class="number">2</span>])%<span class="number">100000007</span>;</span><br><span class="line">dp[i][<span class="number">1</span>][<span class="number">1</span>]=(dp[i<span class="number">-1</span>][<span class="number">1</span>][<span class="number">0</span>])%<span class="number">100000007</span>;</span><br><span class="line">dp[i][<span class="number">1</span>][<span class="number">2</span>]=(dp[i<span class="number">-1</span>][<span class="number">1</span>][<span class="number">1</span>])%<span class="number">100000007</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> N;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;N;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;(dp[N][<span class="number">0</span>][<span class="number">0</span>]+dp[N][<span class="number">0</span>][<span class="number">1</span>]+dp[N][<span class="number">0</span>][<span class="number">2</span>]+dp[N][<span class="number">1</span>][<span class="number">0</span>]+dp[N][<span class="number">1</span>][<span class="number">1</span>]+dp[N][<span class="number">1</span>][<span class="number">2</span>])%<span class="number">100000007</span>&lt;&lt;<span class="string">'\n'</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="後記-Afterword"><a href="#後記-Afterword" class="headerlink" title="後記 Afterword"></a>後記 Afterword</h2><p>這題 Sine Wu 也分享了他的解法<br>之後來研究，研究完會貼出來分享<br>台南一中OJ有個類題 <a href="https://toj.tfcis.org/oj/pro/416/" target="_blank" rel="noopener">https://toj.tfcis.org/oj/pro/416/</a><br>測試資料高達 $N=10^9$<br>這種就只能寫矩陣快速冪<br>可以把$O(N)$變成$O(\log N)$</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;題目-Problem&quot;&gt;&lt;a href=&quot;#題目-Problem&quot; class=&quot;headerlink&quot; title=&quot;題目 Problem&quot;&gt;&lt;/a&gt;題目 Problem&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://zerojudge.tw/ShowProblem?problemid=c878&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;題目連結：https://zerojudge.tw/ShowProblem?problemid=c878&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="解題區" scheme="http://blog.yangjerry.tw/categories/%E8%A7%A3%E9%A1%8C%E5%8D%80/"/>
    
      <category term="解題報告書 - ZeroJudge" scheme="http://blog.yangjerry.tw/categories/%E8%A7%A3%E9%A1%8C%E5%8D%80/%E8%A7%A3%E9%A1%8C%E5%A0%B1%E5%91%8A%E6%9B%B8-ZeroJudge/"/>
    
    
      <category term="DP" scheme="http://blog.yangjerry.tw/tags/DP/"/>
    
  </entry>
  
  <entry>
    <title>b981. YoJudge 預練(時間之章)</title>
    <link href="http://blog.yangjerry.tw/2018/10/26/zj-b981/"/>
    <id>http://blog.yangjerry.tw/2018/10/26/zj-b981/</id>
    <published>2018-10-26T03:30:17.000Z</published>
    <updated>2018-10-26T03:44:50.027Z</updated>
    
    <content type="html"><![CDATA[<h2 id="題目-Problem"><a href="#題目-Problem" class="headerlink" title="題目 Problem"></a>題目 Problem</h2><p><a href="https://zerojudge.tw/ShowProblem?problemid=b981" target="_blank" rel="noopener">題目連結：https://zerojudge.tw/ShowProblem?problemid=b981</a><br><a id="more"></a></p><h3 id="敘述-Description"><a href="#敘述-Description" class="headerlink" title="敘述 Description"></a>敘述 Description</h3><p>　前幾天看到一隻 b961 YoJudge怪獸，感覺太強大了，所以先打Lo練功，期盼來日再戰YoJudge怪獸。<br>　這次任務較簡單，將以下各種格式的時間單位統一轉換為毫秒。 以下 x,y,z,a,b皆為非負整數<br>可能出現的時間單位格式如下：<br>xhour :代表 x 小時, 0&lt;=x&lt;24<br>xhym :代表 x 小時又 y 分鐘, 0&lt;=x&lt;24, 0&lt;=y&lt;60<br>xhymzs :代表 x 小時又 y 分鐘又 z 秒, 0&lt;=x&lt;24, 0&lt;=y&lt;60, 0&lt;=z&lt;60<br>ymin :代表 y 分鐘, 0&lt;=y&lt;60<br>ymzs :代表 y 分鐘又 z 秒, 0&lt;=y&lt;60, 0&lt;=z&lt;60<br>zs :代表 z 秒, 0&lt;=y&lt;60, 0&lt;=z&lt;60<br>z.as :代表 z 秒又 a*100毫秒, 0&lt;=z&lt;60, 0&lt;=a&lt;10<br>bms :代表 b 毫秒, 0&lt;=b&lt;1000</p><h3 id="輸入-Input"><a href="#輸入-Input" class="headerlink" title="輸入 Input"></a>輸入 Input</h3><p>多行直到 EOF，每行只有如上題目所說的時間格式，沒有空格</p><h3 id="輸出-Output"><a href="#輸出-Output" class="headerlink" title="輸出 Output"></a>輸出 Output</h3><p>將輸入的每一行換算為毫秒，輸出一行整數</p><h3 id="範例輸入-Sample-Input"><a href="#範例輸入-Sample-Input" class="headerlink" title="範例輸入 Sample Input"></a>範例輸入 Sample Input</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">13hour</span><br><span class="line">9h20m</span><br><span class="line">23h17m57s</span><br><span class="line">6min</span><br><span class="line">34m50s</span><br><span class="line">8s</span><br><span class="line">19.7s</span><br><span class="line">567ms</span><br></pre></td></tr></table></figure><h3 id="範例輸出-Sample-Output"><a href="#範例輸出-Sample-Output" class="headerlink" title="範例輸出 Sample Output"></a>範例輸出 Sample Output</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">46800000</span><br><span class="line">33600000</span><br><span class="line">83877000</span><br><span class="line">360000</span><br><span class="line">2090000</span><br><span class="line">8000</span><br><span class="line">19700</span><br><span class="line">567</span><br></pre></td></tr></table></figure><h3 id="提示-Hint"><a href="#提示-Hint" class="headerlink" title="提示 Hint"></a>提示 Hint</h3><h2 id="題解-Solution"><a href="#題解-Solution" class="headerlink" title="題解 Solution"></a>題解 Solution</h2><p>數字會先讀取，所以先存數字到 $tmp$ 裡面<br>讀到 $h$ 可能是 $h$ 或 $hour$，要自己判斷<br>讀到 $m$ 可能是 $m$ 或 $min$ 或 $ms$，$ms$ 是毫秒，要另外區隔<br>要注意小數點，反正小數點也只會在 $s$ 出現<br>出現小數點，就直接把數字放在 $s$ 就好<br>小數點後的數字另外判斷</p><h3 id="程式碼-Accepted-Code"><a href="#程式碼-Accepted-Code" class="headerlink" title="程式碼 Accepted Code"></a>程式碼 Accepted Code</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _ ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">_</span><br><span class="line"><span class="built_in">string</span> enter;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;enter)&#123;</span><br><span class="line"><span class="keyword">int</span> h=<span class="number">0</span>,m=<span class="number">0</span>,s=<span class="number">0</span>,dot=<span class="number">0</span>,ms=<span class="number">0</span>,tmp=<span class="number">0</span>,dotyes=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">unsigned</span> <span class="keyword">int</span> i=<span class="number">0</span>;i&lt;enter.length();i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(enter[i]==<span class="string">'.'</span>)&#123;</span><br><span class="line">s=tmp;</span><br><span class="line">dotyes=<span class="number">1</span>;</span><br><span class="line">tmp=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(<span class="string">'0'</span>&lt;=enter[i]&amp;&amp;enter[i]&lt;=<span class="string">'9'</span>)&#123;</span><br><span class="line">tmp*=<span class="number">10</span>;</span><br><span class="line">tmp+=enter[i]-<span class="string">'0'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(enter[i]==<span class="string">'h'</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(i+<span class="number">1</span>&lt;enter.length())&#123;</span><br><span class="line"><span class="keyword">if</span>(enter[i+<span class="number">1</span>]==<span class="string">'o'</span>)&#123;</span><br><span class="line">h=tmp;</span><br><span class="line">i+=<span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">h=tmp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">h=tmp;</span><br><span class="line">&#125;</span><br><span class="line">tmp=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(enter[i]==<span class="string">'m'</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(i+<span class="number">1</span>&lt;enter.length())&#123;</span><br><span class="line"><span class="keyword">if</span>(enter[i+<span class="number">1</span>]==<span class="string">'s'</span>)&#123;</span><br><span class="line">ms=tmp;</span><br><span class="line">i+=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(enter[i+<span class="number">1</span>]==<span class="string">'i'</span>)&#123;</span><br><span class="line">m=tmp;</span><br><span class="line">i+=<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">m=tmp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">m=tmp;</span><br><span class="line">&#125;</span><br><span class="line">tmp=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(enter[i]==<span class="string">'s'</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(dotyes)&#123;</span><br><span class="line">dot=tmp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">s=tmp;</span><br><span class="line">&#125;</span><br><span class="line">tmp=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">m+=h*<span class="number">60</span>;</span><br><span class="line">s+=m*<span class="number">60</span>;</span><br><span class="line">dot+=s*<span class="number">10</span>;</span><br><span class="line">ms+=dot*<span class="number">100</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;ms&lt;&lt;<span class="string">'\n'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="後記-Afterword"><a href="#後記-Afterword" class="headerlink" title="後記 Afterword"></a>後記 Afterword</h2><p>很久沒出解題報告書了<br>還有另一個 YoJudge 預練(空間之章)<br>晚點再寫吧！寫完「空間之章」，就可以來寫真正的「YouJudge」(X)了</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;題目-Problem&quot;&gt;&lt;a href=&quot;#題目-Problem&quot; class=&quot;headerlink&quot; title=&quot;題目 Problem&quot;&gt;&lt;/a&gt;題目 Problem&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://zerojudge.tw/ShowProblem?problemid=b981&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;題目連結：https://zerojudge.tw/ShowProblem?problemid=b981&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="解題區" scheme="http://blog.yangjerry.tw/categories/%E8%A7%A3%E9%A1%8C%E5%8D%80/"/>
    
      <category term="解題報告書 - ZeroJudge" scheme="http://blog.yangjerry.tw/categories/%E8%A7%A3%E9%A1%8C%E5%8D%80/%E8%A7%A3%E9%A1%8C%E5%A0%B1%E5%91%8A%E6%9B%B8-ZeroJudge/"/>
    
    
      <category term="字串處理" scheme="http://blog.yangjerry.tw/tags/%E5%AD%97%E4%B8%B2%E8%99%95%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>理型論？為何凡是不能只看表面？</title>
    <link href="http://blog.yangjerry.tw/2018/10/24/theory-of-forms/"/>
    <id>http://blog.yangjerry.tw/2018/10/24/theory-of-forms/</id>
    <published>2018-10-24T01:25:49.000Z</published>
    <updated>2018-10-24T03:56:28.296Z</updated>
    
    <content type="html"><![CDATA[<p>Tag 是不是多了兩個感覺不相關的？((((；ﾟДﾟ)))))))<br><a id="more"></a><br>前幾天上了教育哲學，感覺跟現在的事件有點相關，所以我把它拉進裡面了<br>（這只是我的個人上課筆記而已）<br>（如果你是要專業研究的，請回去上一頁或是看其他人寫的文章，<a href="https://phiphicake.blogspot.com/2008/05/blog-post_4164.html" target="_blank" rel="noopener">哲學哲學雞蛋糕的理型論</a>）</p><h2 id="理型論-Theory-of-Form"><a href="#理型論-Theory-of-Form" class="headerlink" title="理型論 Theory of Form"></a>理型論 Theory of Form</h2><p>提出人：柏拉圖（Plato），古希臘三哲人之一</p><p>他認為觀念界</p><h3 id="表象界-vs-觀念界"><a href="#表象界-vs-觀念界" class="headerlink" title="表象界 vs 觀念界"></a>表象界 vs 觀念界</h3><h4 id="表象界-Appenrance"><a href="#表象界-Appenrance" class="headerlink" title="表象界 Appenrance"></a>表象界 Appenrance</h4><p>它靠著感官，眼、耳、口、鼻、觸，來去説他是什麼樣子的<br>例如：水壺，我用眼睛感覺，他是圓柱體的</p><p>但是，表象是可以被偽造的<br>例如：筷子插入水中，用眼睛感覺，筷子被折斷了((((；ﾟДﾟ)))))))</p><p>表象界它是：短暫的、虛假的、易變的</p><p>日本的《世界奇妙物語》之前還演過類似的<br>有個人犯了重大的罪，被判了30天<br>30天？重大的罪只有30天？眾人很疑惑</p><p>這30天以內，犯人受盡各種折磨<br>然而，孰不知，夢裡的30天 = 現實的5分鐘<br>現實是被判30天，也就是夢裡大約720年</p><h4 id="觀念界-Idea"><a href="#觀念界-Idea" class="headerlink" title="觀念界 Idea"></a>觀念界 Idea</h4><p>剛剛談到，表象是可以被偽造的<br>例如：筷子插入水中，用眼睛感覺，筷子被折斷了((((；ﾟДﾟ)))))))</p><p>觀念界，就是知道筷子沒有被折斷，只是水的折射看起來被折斷了<br>你知道了水的折射，才知道筷子並沒有斷</p><p>觀念界它是：永恆的、真實的、不變的</p><h3 id="洞穴寓言-Allegory-of-the-Cave"><a href="#洞穴寓言-Allegory-of-the-Cave" class="headerlink" title="洞穴寓言 Allegory of the Cave"></a>洞穴寓言 Allegory of the Cave</h3><p>內容其實 <a href="https://lmgtfy.com/?q=地穴寓言" target="_blank" rel="noopener">Google</a>、<a href="https://zh.wikipedia.org/wiki/地穴寓言" target="_blank" rel="noopener">Wikipedia</a> 都看得到</p><p>如果給一名囚犯鬆綁，出去看見這些以往所見的影子的原型，你覺得會怎麼樣？<br>這個人可能會在強光刺激下痛苦不堪，產生錯亂。<br>他可能會認為外面所看到的東西不是現實的。<br>因為他相信只有在洞壁上能看見真相。</p><h2 id="普悠瑪事件-Train-derailment"><a href="#普悠瑪事件-Train-derailment" class="headerlink" title="普悠瑪事件 Train derailment"></a>普悠瑪事件 Train derailment</h2><p>很多人知道普悠瑪出軌事件，看著新聞直播救援</p><p>剛好拍到慈濟在助念，當天有人身為前救難隊員就出來罵慈濟説干擾救援<br>（也就是說，前救難隊員並沒有在現場）</p><p>週日：Po文到「爆料公社」<br>週一：大家一起狂鞭「慈濟」，說「作秀」「詛咒別人」「詐騙集團」「干擾救援」之類的<br>週二：大愛電視FB專頁表示「如果志工助念，影響到搜救工作，警消人員一定會來制止的，但現場並沒有人有任何表示。」<br>「慈濟志工跟媒體被安排在同一區，很接近攝影機收音位置，可能因此導致媒體直播時，志工的聲音很明顯，引發觀眾的關切與誤會。」</p><p>（詳情也可以去看<a href="https://www.facebook.com/DaAiTV/" target="_blank" rel="noopener">大愛電視FB專頁</a>，多吸收一點資訊，多方面查證）<br>（也不要只是聽信「媒體」、「爆料公社」怎麼説就怎麼罵，不然你也是跟那些洞穴囚犯一樣）</p><p>真相怎麼樣，我也不多做評論了，畢竟我沒有在現場<br>至於真的是不是「作秀」「干擾救援」？<br><img src="nosay.gif" alt="我很乖 我不酸 我坐等看留言 —— 圖源：www.71714.com"><span class="image-caption">我很乖 我不酸 我坐等看留言 —— 圖源：www.71714.com</span><br>不要只是憑著一張照片、一段錄音、一部影片<br>就輕易的斷定事實</p><h2 id="後記-Afterword"><a href="#後記-Afterword" class="headerlink" title="後記 Afterword"></a>後記 Afterword</h2><p>學習哲學，並不是思考哲學，而是更有哲學的思考<br>保持著理性，才能更接近真相</p><p>為何凡是不能只看表面？<br>因為表象是可以被偽造的</p><p><strong>多思考、多查證，不要只是人云亦云</strong><br><strong>否則，你也跟洞穴囚犯沒什麼差異</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Tag 是不是多了兩個感覺不相關的？((((；ﾟДﾟ)))))))&lt;br&gt;
    
    </summary>
    
      <category term="師培筆記" scheme="http://blog.yangjerry.tw/categories/%E5%B8%AB%E5%9F%B9%E7%AD%86%E8%A8%98/"/>
    
      <category term="師培筆記 - 教育哲學" scheme="http://blog.yangjerry.tw/categories/%E5%B8%AB%E5%9F%B9%E7%AD%86%E8%A8%98/%E5%B8%AB%E5%9F%B9%E7%AD%86%E8%A8%98-%E6%95%99%E8%82%B2%E5%93%B2%E5%AD%B8/"/>
    
    
      <category term="理型論" scheme="http://blog.yangjerry.tw/tags/%E7%90%86%E5%9E%8B%E8%AB%96/"/>
    
      <category term="洞穴寓言" scheme="http://blog.yangjerry.tw/tags/%E6%B4%9E%E7%A9%B4%E5%AF%93%E8%A8%80/"/>
    
      <category term="慈濟" scheme="http://blog.yangjerry.tw/tags/%E6%85%88%E6%BF%9F/"/>
    
      <category term="普悠瑪出軌事件" scheme="http://blog.yangjerry.tw/tags/%E6%99%AE%E6%82%A0%E7%91%AA%E5%87%BA%E8%BB%8C%E4%BA%8B%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>演講筆記：醫人文 —— 我的故事</title>
    <link href="http://blog.yangjerry.tw/2018/10/17/kp-tcu-note/"/>
    <id>http://blog.yangjerry.tw/2018/10/17/kp-tcu-note/</id>
    <published>2018-10-17T02:26:31.000Z</published>
    <updated>2018-10-17T07:05:08.899Z</updated>
    
    <content type="html"><![CDATA[<p>校長週會，老實說，講者聽一聽，隔幾天就忘記了<br><a id="more"></a></p><h3 id="演講前數天-Before"><a href="#演講前數天-Before" class="headerlink" title="演講前數天 Before"></a>演講前數天 Before</h3><p>「什麼？大一校長週會是<strong>柯P</strong>？」我瞪大著眼說<br>「對啊…這是真的」室友<br>「傻眼…那我們之前到底請誰來啊？」<br>這也是蠻奇葩的事<strong>之一</strong><br>新生的國文檢定門檻都直接被刪除了<br>反正意想不到真的很多</p><h3 id="演講前一天-Yesterday"><a href="#演講前一天-Yesterday" class="headerlink" title="演講前一天 Yesterday"></a>演講前一天 Yesterday</h3><p>晚上跟女友分享我明天想要去聽<strong>柯P</strong>的演講<br>打算明天吃完早午餐，就直接過去大愛樓</p><p>我女友大概跟我說類似的經驗，以前也有請<strong>沈玉琳</strong>來<br>演藝廳也是爆棚的，一樓坐滿就到二樓坐，二樓坐滿就站著聽</p><h2 id="演講當天"><a href="#演講當天" class="headerlink" title="演講當天"></a>演講當天</h2><p>中午12點我就在簽到處等待了<br>等到差不多1點才能進場<br>還好人還沒有很多，坐到第二排</p><h2 id="演講者-Lecturer"><a href="#演講者-Lecturer" class="headerlink" title="演講者 Lecturer"></a>演講者 Lecturer</h2><h3 id="臺北市第6任市長-柯文哲"><a href="#臺北市第6任市長-柯文哲" class="headerlink" title="臺北市第6任市長 柯文哲"></a>臺北市第6任市長 柯文哲</h3><p><img src="kp.jpg" alt="柯文哲 —— 圖源：WIKIPEDIA"><span class="image-caption">柯文哲 —— 圖源：WIKIPEDIA</span><br>圖片4不4太大了？</p><h2 id="演講內容"><a href="#演講內容" class="headerlink" title="演講內容"></a>演講內容</h2><h3 id="台大醫院"><a href="#台大醫院" class="headerlink" title="台大醫院"></a>台大醫院</h3><p>當他來到台大醫院的第一天，體驗到人生無常</p><h3 id="人生哲學"><a href="#人生哲學" class="headerlink" title="人生哲學"></a>人生哲學</h3><p>人生都是意外（也包括當上市長吧）<br>台大醫院的磨練，也包括被彈劾的事件（那時候陳佩琪直接衝出來跟台大槓上，<a href="https://www.youtube.com/watch?v=j9Dz8dKreg4" target="_blank" rel="noopener">台灣啟示錄</a>還有做專訪）</p><p>「最困難並不是面對挫折打擊，最困難的是面對挫折打擊，卻沒有失去對人世之熱情」<br>我真的覺得這句話最後面的那一句是最難的，沒有失去對人世之熱情，經歷過挫折打擊後，真的，好難。</p><p>把別人當作自己 博愛<br>把自己當作別人 淡然<br>把別人當作別人 智慧<br>把自己當作自己 自在</p><h3 id="心路歷程"><a href="#心路歷程" class="headerlink" title="心路歷程"></a>心路歷程</h3><p>他曾經這樣過：「見山是山 -&gt; 見山不是山 -&gt; 見山是山」<br>套用在醫生怎麼說：「看病人 -&gt; 看數據 -&gt; 看病人」<br>曾經有一段時間他都看不到病人，專心看著機器上的數字</p><h3 id="Dr-ECMO"><a href="#Dr-ECMO" class="headerlink" title="Dr.ECMO"></a>Dr.ECMO</h3><p>邵曉玲 事件<br>體驗到「十年寒窗無人問，一舉成名天下知」</p><h3 id="高科技叢林"><a href="#高科技叢林" class="headerlink" title="高科技叢林"></a>高科技叢林</h3><p>看到了16天沒心臟，用兩台ECMO維生</p><p>柯P直接反問我們：「什麼是活著？」<br>「病人旁邊放了一堆維生機器的後面，你看到什麼？」<br>「不會死，也不會活，你是否願意讓他走？」</p><p>「如果有錢不會死，王永慶會還在」</p><h3 id="世大運"><a href="#世大運" class="headerlink" title="世大運"></a>世大運</h3><p>「如果誠心要做一件事，全世界都會來幫你。」<br>一日幕僚還跟邰哥講說：「聽障奧運要5.4億，我辦世大運3.6億，你覺得為什麼？」<br><img src="kp-no-friend.png" alt="柯P：因為我沒有朋友 —— 圖源：YouTube 一日市長幕僚"><span class="image-caption">柯P：因為我沒有朋友 —— 圖源：YouTube 一日市長幕僚</span></p><p>「如果你成功 朋友認識你<br>如果你失敗 你認識朋友<br>如果你成功失敗成功失敗…. 你認識人生」</p><h3 id="給台灣年輕人"><a href="#給台灣年輕人" class="headerlink" title="給台灣年輕人"></a>給台灣年輕人</h3><p>最大的啟示 Just Do It<br>做！不一定會成功<br>不做！一定會失敗</p><h2 id="後記-Afterword"><a href="#後記-Afterword" class="headerlink" title="後記 Afterword"></a>後記 Afterword</h2><p>我後來發現，我之前在柯P的IG上，他發過的名言我都會截圖<br>今天演講聽完整理筆記時，才知道這些話他幾乎都說過</p><p>這筆記整理得有點亂，可能之後再修吧！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;校長週會，老實說，講者聽一聽，隔幾天就忘記了&lt;br&gt;
    
    </summary>
    
      <category term="演講筆記" scheme="http://blog.yangjerry.tw/categories/%E6%BC%94%E8%AC%9B%E7%AD%86%E8%A8%98/"/>
    
    
      <category term="演講筆記" scheme="http://blog.yangjerry.tw/tags/%E6%BC%94%E8%AC%9B%E7%AD%86%E8%A8%98/"/>
    
      <category term="柯P" scheme="http://blog.yangjerry.tw/tags/%E6%9F%AFP/"/>
    
  </entry>
  
  <entry>
    <title>c731. 走路時要算數學</title>
    <link href="http://blog.yangjerry.tw/2018/09/26/zj-c731/"/>
    <id>http://blog.yangjerry.tw/2018/09/26/zj-c731/</id>
    <published>2018-09-26T04:52:11.000Z</published>
    <updated>2019-01-19T05:59:39.130Z</updated>
    
    <content type="html"><![CDATA[<h2 id="題目-Problem"><a href="#題目-Problem" class="headerlink" title="題目 Problem"></a>題目 Problem</h2><p><a href="https://zerojudge.tw/ShowProblem?problemid=c731" target="_blank" rel="noopener">題目連結：https://zerojudge.tw/ShowProblem?problemid=c731</a><br><a id="more"></a></p><h3 id="敘述-Description"><a href="#敘述-Description" class="headerlink" title="敘述 Description"></a>敘述 Description</h3><p>在一個二維平面上，從原點出發，每一步等於一單位長，每一次只能向右走、向上走或向左走。請問恰好走 n 步且不經過已走的點共有多少種走法？</p><h3 id="輸入-Input"><a href="#輸入-Input" class="headerlink" title="輸入 Input"></a>輸入 Input</h3><p>輸入僅一行，為正整數 n （ 0 &lt; n &lt;= 10000 ）。</p><h3 id="輸出-Output"><a href="#輸出-Output" class="headerlink" title="輸出 Output"></a>輸出 Output</h3><p>一個整數, 表示方案數。由於答案可能很大，你只需要輸出這個答案 mod 12345的值 ( 換句話說，輸出這個答案除以12345的餘數 )。</p><h3 id="範例輸入-Sample-Input"><a href="#範例輸入-Sample-Input" class="headerlink" title="範例輸入 Sample Input"></a>範例輸入 Sample Input</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">【範例輸入一】</span><br><span class="line">2</span><br><span class="line"></span><br><span class="line">【範例輸入二】</span><br><span class="line">1</span><br></pre></td></tr></table></figure><h3 id="範例輸出-Sample-Output"><a href="#範例輸出-Sample-Output" class="headerlink" title="範例輸出 Sample Output"></a>範例輸出 Sample Output</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">【範例輸出一】</span><br><span class="line">7</span><br><span class="line"></span><br><span class="line">【範例輸出二】</span><br><span class="line">3</span><br></pre></td></tr></table></figure><h3 id="提示-Hint"><a href="#提示-Hint" class="headerlink" title="提示 Hint"></a>提示 Hint</h3><p>【分數】</p><p>20% n &lt;= 5   </p><p>40% n &lt;= 10</p><p>60% n &lt;= 100</p><p>80% n &lt;= 1000</p><p>100% n &lt;= 10000</p><h2 id="題解-Solution"><a href="#題解-Solution" class="headerlink" title="題解 Solution"></a>題解 Solution</h2><p>經典DP問題，如果不要走到重複的點，就不要往回走<br>如果要往上走，不用考慮會不會重複的點，全部加起來就對了<br>如果要往左走，前一步就不能往右走。<br>如果要往右走，前一步就不能往左走。<br>然後記得每次算完 $Mod\ 12345$ 就好</p><h3 id="程式碼-Accepted-Code"><a href="#程式碼-Accepted-Code" class="headerlink" title="程式碼 Accepted Code"></a>程式碼 Accepted Code</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _ ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> up[<span class="number">10001</span>]=&#123;<span class="number">1</span>&#125;,left[<span class="number">10001</span>]=&#123;<span class="number">1</span>&#125;,right[<span class="number">10001</span>]=&#123;<span class="number">1</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> N;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;N;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;N;i++)&#123;</span><br><span class="line">up[i]=up[i<span class="number">-1</span>]+left[i<span class="number">-1</span>]+right[i<span class="number">-1</span>];</span><br><span class="line">left[i]=up[i<span class="number">-1</span>]+left[i<span class="number">-1</span>];</span><br><span class="line">right[i]=up[i<span class="number">-1</span>]+right[i<span class="number">-1</span>];</span><br><span class="line">up[i]%=<span class="number">12345</span>;</span><br><span class="line">left[i]%=<span class="number">12345</span>;</span><br><span class="line">right[i]%=<span class="number">12345</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;(up[N<span class="number">-1</span>]+left[N<span class="number">-1</span>]+right[N<span class="number">-1</span>])%<span class="number">12345</span>&lt;&lt;<span class="string">'\n'</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="後記-Afterword"><a href="#後記-Afterword" class="headerlink" title="後記 Afterword"></a>後記 Afterword</h2><p>數字應該能再開大一點啊，還以為這題有什麼陷阱 = =<br>如果沒有意外，下一篇應該是寫演講筆記<br>以前演講聽一聽就算了，不過這次我想寫出來<br>講者是誰？敬請期待</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;題目-Problem&quot;&gt;&lt;a href=&quot;#題目-Problem&quot; class=&quot;headerlink&quot; title=&quot;題目 Problem&quot;&gt;&lt;/a&gt;題目 Problem&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://zerojudge.tw/ShowProblem?problemid=c731&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;題目連結：https://zerojudge.tw/ShowProblem?problemid=c731&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="解題區" scheme="http://blog.yangjerry.tw/categories/%E8%A7%A3%E9%A1%8C%E5%8D%80/"/>
    
      <category term="解題報告書 - ZeroJudge" scheme="http://blog.yangjerry.tw/categories/%E8%A7%A3%E9%A1%8C%E5%8D%80/%E8%A7%A3%E9%A1%8C%E5%A0%B1%E5%91%8A%E6%9B%B8-ZeroJudge/"/>
    
    
      <category term="DP" scheme="http://blog.yangjerry.tw/tags/DP/"/>
    
  </entry>
  
  <entry>
    <title>d635. 幸運777？luck</title>
    <link href="http://blog.yangjerry.tw/2018/09/14/zj-d635/"/>
    <id>http://blog.yangjerry.tw/2018/09/14/zj-d635/</id>
    <published>2018-09-14T02:43:16.000Z</published>
    <updated>2018-09-14T05:04:31.517Z</updated>
    
    <content type="html"><![CDATA[<h2 id="題目-Problem"><a href="#題目-Problem" class="headerlink" title="題目 Problem"></a>題目 Problem</h2><p><a href="https://zerojudge.tw/ShowProblem?problemid=d635" target="_blank" rel="noopener">題目連結：https://zerojudge.tw/ShowProblem?problemid=d635</a><br><a id="more"></a></p><h3 id="敘述-Description"><a href="#敘述-Description" class="headerlink" title="敘述 Description"></a>敘述 Description</h3><p>你說什麼？777=511？怎麼可能…？</p><p>因為這裡是八進位的777轉換成10進位的511了～(好爛ˇ)</p><p>給你十進位的數字，請你把他們轉成八進位好嗎？</p><h3 id="輸入-Input"><a href="#輸入-Input" class="headerlink" title="輸入 Input"></a>輸入 Input</h3><p>每個測資點有多筆測資，請以EOF作為結束。<br>每組測資一行，有整數n(0&lt;=n&lt;=511)，表示要轉換成八進位的數字<br>最後出現小於0的整數表示測資結束。</p><p>&lt;所有出現的整數皆可以signed 32-bits int儲存&gt;</p><h3 id="輸出-Output"><a href="#輸出-Output" class="headerlink" title="輸出 Output"></a>輸出 Output</h3><p>對於每一行測資請輸出整數n的八進位表示。<br>對於最後一個小於0的整數，請輸出-1。</p><h3 id="範例輸入-Sample-Input"><a href="#範例輸入-Sample-Input" class="headerlink" title="範例輸入 Sample Input"></a>範例輸入 Sample Input</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">277</span><br><span class="line">511</span><br><span class="line">123</span><br><span class="line">456</span><br><span class="line">-1</span><br></pre></td></tr></table></figure><h3 id="範例輸出-Sample-Output"><a href="#範例輸出-Sample-Output" class="headerlink" title="範例輸出 Sample Output"></a>範例輸出 Sample Output</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">425</span><br><span class="line">777</span><br><span class="line">173</span><br><span class="line">710</span><br><span class="line">-1</span><br></pre></td></tr></table></figure><h3 id="提示-Hint"><a href="#提示-Hint" class="headerlink" title="提示 Hint"></a>提示 Hint</h3><p>1.進位制轉換<br>2.共三個測資點30%、35%、35%，<br>第一個測資點即範例測資。</p><h2 id="題解-Solution"><a href="#題解-Solution" class="headerlink" title="題解 Solution"></a>題解 Solution</h2><p>以EOF作為結束？最後出現小於0的整數表示測資結束？<br><img src="https://media.giphy.com/media/l3q2K5jinAlChoCLS/giphy.gif" alt="所以？ —— 圖源：GIPHY"><span class="image-caption">所以？ —— 圖源：GIPHY</span><br>到底是我國文爛還是題目敘述爛？（好歹我大學國文門檻過了）<br>有些人會用C++內建轉$8$進位的，但還是要知道概念</p><p>$10$進位的<script type="math/tex">511_{(10)}</script>會是</p><script type="math/tex; mode=display">511_{(10)} = 5 * 10^2 + 1 * 10^1 + 1 * 10^0</script><p>$8$進位的<script type="math/tex">777_{(8)}</script>會是</p><script type="math/tex; mode=display">777_{(8)} = 7 * 8^2 + 7 * 8^1 + 7 * 8^0 = 511_{(10)}</script><p>$8$進位的<script type="math/tex">173_{(8)}</script>會是</p><script type="math/tex; mode=display">173_{(8)} = 1 * 8^2 + 7 * 8^1 + 3 * 8^0 = 123_{(10)}</script><p>大致上不論是轉成$N$進位都差不多</p><p>$10$進位轉成$8$進位</p><p>先把數字 $MOD\ 8$ 就可以求出$8$進位中的個位數<br>$123\%8=3$<br>再把數字 $/\ 8$ 後再 $MOD\ 8$ 就可以求出$8$進位中的下個位數<br>$123/8=15$<br>$15\%8=7$<br>再把數字 $/\ 8$ 後再 $MOD\ 8$ 就可以求出$8$進位中的下個位數<br>$15/8=1$<br>$1\%8=1$</p><p>然後把數字倒敘輸出就可以拿到$1,7,3$</p><p>如果可以EOF結尾，我就把負數自動設定為$-1$</p><p>輸入$0$出來會是空白，所以還加了特判</p><h3 id="程式碼-Accepted-Code"><a href="#程式碼-Accepted-Code" class="headerlink" title="程式碼 Accepted Code"></a>程式碼 Accepted Code</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _ ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">_</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> enter;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;enter)&#123;</span><br><span class="line"><span class="keyword">if</span>(enter&lt;<span class="number">0</span>)&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"-1"</span>&lt;&lt;<span class="string">'\n'</span>;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(enter==<span class="number">0</span>)&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"0"</span>&lt;&lt;<span class="string">'\n'</span>;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> ans[<span class="number">10</span>]=&#123;<span class="number">0</span>&#125;,len=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(enter)&#123;</span><br><span class="line">ans[len++]+=enter%<span class="number">8</span>;</span><br><span class="line">enter/=<span class="number">8</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=len<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;ans[i];</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">'\n'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="後記-Afterword"><a href="#後記-Afterword" class="headerlink" title="後記 Afterword"></a>後記 Afterword</h2><p>這題題目敘述真的是爛到吃了好幾個 WA<br>寫 UVa 題目也有碰過一次，題目沒有寫清楚<br>最後還是看了一下 AC Code 才知道在寫什麼</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;題目-Problem&quot;&gt;&lt;a href=&quot;#題目-Problem&quot; class=&quot;headerlink&quot; title=&quot;題目 Problem&quot;&gt;&lt;/a&gt;題目 Problem&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://zerojudge.tw/ShowProblem?problemid=d635&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;題目連結：https://zerojudge.tw/ShowProblem?problemid=d635&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="解題區" scheme="http://blog.yangjerry.tw/categories/%E8%A7%A3%E9%A1%8C%E5%8D%80/"/>
    
      <category term="解題報告書 - ZeroJudge" scheme="http://blog.yangjerry.tw/categories/%E8%A7%A3%E9%A1%8C%E5%8D%80/%E8%A7%A3%E9%A1%8C%E5%A0%B1%E5%91%8A%E6%9B%B8-ZeroJudge/"/>
    
    
      <category term="進位制" scheme="http://blog.yangjerry.tw/tags/%E9%80%B2%E4%BD%8D%E5%88%B6/"/>
    
  </entry>
  
  <entry>
    <title>超修？扛下去？演算法直接跳上去？</title>
    <link href="http://blog.yangjerry.tw/2018/09/12/1071credit/"/>
    <id>http://blog.yangjerry.tw/2018/09/12/1071credit/</id>
    <published>2018-09-12T05:51:00.000Z</published>
    <updated>2018-09-12T16:07:36.589Z</updated>
    
    <content type="html"><![CDATA[<p>自從升到大學以來，說輕鬆嗎？好像也不是<br>至少不需要對本科放太多心力，畢竟都是學過的</p><p>相比我同學，他們還是很強的，我學了程式也很久了，他們並沒有程式背景<br>也就是說，我花了兩年理解的東西，我同學花了半年學完<br><a id="more"></a></p><h2 id="大一簡略"><a href="#大一簡略" class="headerlink" title="大一簡略"></a>大一簡略</h2><p>由於大一學期末我也加入了「師資培訓生」<br>原本的128畢業學分，瞬間飆到158學分<br>再加上學校又一堆看起來很<del>（狗屎爛蛋）</del><strong>有用</strong>的畢業門檻</p><p>為了趕那些畢業門檻，大一就先把通識基本門檻達到（Ex.環境2學分以上、邏輯2學分以上，這種容易忽略的小門檻）<br>再去修<del>（躺分課）</del>或<strong>興趣課</strong></p><p>大一上加加減減就變成28學分（其實只有25學分，因為有暑假先修課3學分）<br>大一下為了加入師培更容易，變成26學分</p><p>大一下修課時，我一直想要當助教，當助教前當然要先修過<br>當然我也問了其他學長們、系主任的意見<br>有些學長覺得可以、有些覺得要先去修資料結構（但我光打競賽就學了 <del>一堆奇怪的</del> 資料結構）<br>但我問主任時，他就直接說「可以啊」<br>連猶豫一下都沒有<br>然後大一下學期末，我就選了……ㄏㄏㄏㄏㄏ<br><img src="courage.gif" alt="還是張惠妹的《勇敢》？"><span class="image-caption">還是張惠妹的《勇敢》？</span></p><h2 id="暑假助教"><a href="#暑假助教" class="headerlink" title="暑假助教"></a>暑假助教</h2><p>暑假是有先修課，也剛好在徵助教、講師<br>差不多就是練習教學、跟學弟妹互動</p><p>話說，我還忘記繳學費，差點不能註冊……</p><h2 id="大二開學"><a href="#大二開學" class="headerlink" title="大二開學"></a>大二開學</h2><p>大二把一些沒有選上的通識課換掉，選一選就變成26學分了<br>演算法剛進去上課時，教授還問我怎麼選進來的（原本以前有擋修，但現在都拿掉了）</p><p>我覺得比較擔心的事，分組，畢竟在這裡只有學長姐，沒有同學<br>不過有學長願意收留我，超好der（而且都是學霸等級）</p><p>第一次上機題目是河內塔問題<br>當然，要學會怎麼分析問題、推出規律<br>大致上就是這樣</p><p>至於迎新總召嗎？再說吧！又要再寫一篇……</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;自從升到大學以來，說輕鬆嗎？好像也不是&lt;br&gt;至少不需要對本科放太多心力，畢竟都是學過的&lt;/p&gt;
&lt;p&gt;相比我同學，他們還是很強的，我學了程式也很久了，他們並沒有程式背景&lt;br&gt;也就是說，我花了兩年理解的東西，我同學花了半年學完&lt;br&gt;
    
    </summary>
    
      <category term="生活" scheme="http://blog.yangjerry.tw/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="生活" scheme="http://blog.yangjerry.tw/tags/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="學分" scheme="http://blog.yangjerry.tw/tags/%E5%AD%B8%E5%88%86/"/>
    
      <category term="超修" scheme="http://blog.yangjerry.tw/tags/%E8%B6%85%E4%BF%AE/"/>
    
      <category term="助教" scheme="http://blog.yangjerry.tw/tags/%E5%8A%A9%E6%95%99/"/>
    
  </entry>
  
  <entry>
    <title>c311. PC:分組之塔</title>
    <link href="http://blog.yangjerry.tw/2018/09/02/zj-c311/"/>
    <id>http://blog.yangjerry.tw/2018/09/02/zj-c311/</id>
    <published>2018-09-02T15:15:04.000Z</published>
    <updated>2018-09-02T16:41:16.660Z</updated>
    
    <content type="html"><![CDATA[<h2 id="題目-Problem"><a href="#題目-Problem" class="headerlink" title="題目 Problem"></a>題目 Problem</h2><p><a href="https://zerojudge.tw/ShowProblem?problemid=c311" target="_blank" rel="noopener">題目連結：https://zerojudge.tw/ShowProblem?problemid=c311</a><br><a id="more"></a></p><h3 id="敘述-Description"><a href="#敘述-Description" class="headerlink" title="敘述 Description"></a>敘述 Description</h3><p>進到了這個房間，小風終於遇到第一個塔主，這個塔主精神有點疾病，他有超級多的部下，而他想要將這些人以91個人為單位分為一組，而多出來的人就要把他殺掉。<br>然而他實在是太懶惰了，不想要自己算要殺掉多少人，於是他命令小風幫他算出人數，否則第一個先死的就是小風了。<br>無奈小風的除法沒有學好，所以他算不出來。於是小風再次需要各位的幫忙，請算出塔主需要殺掉的人數。</p><h3 id="輸入-Input"><a href="#輸入-Input" class="headerlink" title="輸入 Input"></a>輸入 Input</h3><p>輸入有多筆測資，並以EOF作為結尾。<br>每一筆測資包含一個正整數n，代表塔主的部下人數。</p><p>10%的測資滿足n&lt;=10^9<br>40%的測資滿足n&lt;=10^18<br>100%的測資滿足n&lt;=10^100000</p><h3 id="輸出-Output"><a href="#輸出-Output" class="headerlink" title="輸出 Output"></a>輸出 Output</h3><p>對於每一筆輸入 請輸出塔主需要殺掉的人數</p><h3 id="範例輸入-Sample-Input"><a href="#範例輸入-Sample-Input" class="headerlink" title="範例輸入 Sample Input"></a>範例輸入 Sample Input</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">92</span><br><span class="line">93</span><br><span class="line">91</span><br></pre></td></tr></table></figure><h3 id="範例輸出-Sample-Output"><a href="#範例輸出-Sample-Output" class="headerlink" title="範例輸出 Sample Output"></a>範例輸出 Sample Output</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">0</span><br></pre></td></tr></table></figure><h3 id="提示-Hint"><a href="#提示-Hint" class="headerlink" title="提示 Hint"></a>提示 Hint</h3><h2 id="題解-Solution"><a href="#題解-Solution" class="headerlink" title="題解 Solution"></a>題解 Solution</h2><p>如何判斷數字是不是$7$的倍數跟$13$的倍數<br>當然是打開 Google 查啊（Ｘ）</p><p>7的倍數：由個位數起每三位數字一節，各奇數節的和與偶數節的和相減，其差是7的倍數。<br>13的倍數：由個位數起每三位數字一節，各奇數節的和與偶數節的和相減，其差是13的倍數。<br>（<a href="https://leestar2018.blogspot.com/2016/09/113.html" target="_blank" rel="noopener">文字來源：https://leestar2018.blogspot.com/2016/09/113.html</a>）</p><p>把數字長度補到$3$的倍數就可以算了</p><p>反正數字都一樣，就直接 $mod\ 91$<br>（繳交後3秒，回傳結果：WA）<br><img src="wtf.png" alt="不好意思齁這三洨 —— 圖源：好色龍"><span class="image-caption">不好意思齁這三洨 —— 圖源：好色龍</span><br>後來想想，我忘了重要關鍵點，因為只是判斷7的倍數或13的倍數，可以不用管正負<br>但！如果是 $mod$ 就要區分正負關係了</p><p>正數正常 $mod\ 91$ 就好<br>負數要先 $mod\ 91$ 再加 $91$ 再 $mod\ 91$<br>不知道為什麼的人請去 Google 負數取模</p><h3 id="程式碼-Accepted-Code"><a href="#程式碼-Accepted-Code" class="headerlink" title="程式碼 Accepted Code"></a>程式碼 Accepted Code</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _ ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">_</span><br><span class="line"><span class="built_in">string</span> enter;<span class="comment">//192936162 55</span></span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;enter)&#123;</span><br><span class="line"><span class="keyword">int</span> total=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> s=enter.length()%<span class="number">3</span>;</span><br><span class="line"><span class="keyword">if</span>(s==<span class="number">1</span>)</span><br><span class="line">enter=<span class="string">"00"</span>+enter;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(s==<span class="number">2</span>)</span><br><span class="line">enter=<span class="string">"0"</span>+enter;</span><br><span class="line"><span class="keyword">int</span> p=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=enter.length()<span class="number">-3</span>;i&gt;=<span class="number">0</span>;i-=<span class="number">3</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(p%<span class="number">2</span>)&#123;</span><br><span class="line">total-=((enter[i]-<span class="string">'0'</span>)*<span class="number">100</span>+(enter[i+<span class="number">1</span>]-<span class="string">'0'</span>)*<span class="number">10</span>+(enter[i+<span class="number">2</span>]-<span class="string">'0'</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">total+=((enter[i]-<span class="string">'0'</span>)*<span class="number">100</span>+(enter[i+<span class="number">1</span>]-<span class="string">'0'</span>)*<span class="number">10</span>+(enter[i+<span class="number">2</span>]-<span class="string">'0'</span>));</span><br><span class="line">&#125;</span><br><span class="line">p++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> mo=total%<span class="number">91</span>;</span><br><span class="line"><span class="keyword">if</span>(total&lt;<span class="number">0</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,(<span class="number">91</span>+mo)%<span class="number">91</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,mo);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="後記-Afterword"><a href="#後記-Afterword" class="headerlink" title="後記 Afterword"></a>後記 Afterword</h2><p>異想不到的事，這題我是第一個 $0ms$ 完成<br><img src="0ms.png" alt="2018/09/03 截圖紀念"><span class="image-caption">2018/09/03 截圖紀念</span><br>畢竟 ZeroJudge 有改版過<br>效能應該有提升<br>但，套用憲哥說的一句話<br><img src="who_cares.png" alt="Who Cares？ —— 影像版權：《綜藝大熱門》"><span class="image-caption">Who Cares？ —— 影像版權：《綜藝大熱門》</span></p><p>不過我倒是好奇，畢竟這題曾經是比賽題<br>如果是在比賽期間，你要怎麼讓這題拿到AC呢？</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;題目-Problem&quot;&gt;&lt;a href=&quot;#題目-Problem&quot; class=&quot;headerlink&quot; title=&quot;題目 Problem&quot;&gt;&lt;/a&gt;題目 Problem&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://zerojudge.tw/ShowProblem?problemid=c311&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;題目連結：https://zerojudge.tw/ShowProblem?problemid=c311&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="解題區" scheme="http://blog.yangjerry.tw/categories/%E8%A7%A3%E9%A1%8C%E5%8D%80/"/>
    
      <category term="解題報告書 - ZeroJudge" scheme="http://blog.yangjerry.tw/categories/%E8%A7%A3%E9%A1%8C%E5%8D%80/%E8%A7%A3%E9%A1%8C%E5%A0%B1%E5%91%8A%E6%9B%B8-ZeroJudge/"/>
    
    
      <category term="負數取Mod" scheme="http://blog.yangjerry.tw/tags/%E8%B2%A0%E6%95%B8%E5%8F%96Mod/"/>
    
      <category term="倍數判斷法" scheme="http://blog.yangjerry.tw/tags/%E5%80%8D%E6%95%B8%E5%88%A4%E6%96%B7%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>d708. 小王的积木</title>
    <link href="http://blog.yangjerry.tw/2018/09/02/zj-d708/"/>
    <id>http://blog.yangjerry.tw/2018/09/02/zj-d708/</id>
    <published>2018-09-02T07:35:37.000Z</published>
    <updated>2018-10-19T16:49:22.115Z</updated>
    
    <content type="html"><![CDATA[<h2 id="題目-Problem"><a href="#題目-Problem" class="headerlink" title="題目 Problem"></a>題目 Problem</h2><p><a href="https://zerojudge.tw/ShowProblem?problemid=d708" target="_blank" rel="noopener">題目連結：https://zerojudge.tw/ShowProblem?problemid=d708</a><br><a id="more"></a></p><h3 id="敘述-Description"><a href="#敘述-Description" class="headerlink" title="敘述 Description"></a>敘述 Description</h3><p>自从小涵去商店买了那么多的积木，小王也去买了一大堆。<br>不过小王比较喜欢数学，所以他买的积木上写的只有数字；因为他认为偶数比较吉利，于是他买的积木是全是偶数快的。<br>听说小涵少了一个积木，他便整理了一下他的，可是他发现他也少了一块积木…（很无语吧…）<br>上次他见你已经帮小涵找到了积木，于是就请你来帮他找找，而且他还告诉你：“我的积木比小涵的好找很多。”<br>半信半疑的你决定帮帮他。</p><h3 id="輸入-Input"><a href="#輸入-Input" class="headerlink" title="輸入 Input"></a>輸入 Input</h3><p>只有一笔测资。 测资末尾会有多余信息，忽略就好。//感谢asas提醒。2015/8/6</p><p>输入数据的第一行，是小王告诉你他的积木个数N（N一定是一个正偶数，而且2&lt;=N&lt;=1000000，你看他的积木可没有小涵的多）。<br>接下来每行有（N-1）个数字，表示小王每个积木上的数字（可以用longint存储）。</p><h3 id="輸出-Output"><a href="#輸出-Output" class="headerlink" title="輸出 Output"></a>輸出 Output</h3><p>对于每组测资，输出小王缺少的那块积木的数字。</p><h3 id="範例輸入-Sample-Input"><a href="#範例輸入-Sample-Input" class="headerlink" title="範例輸入 Sample Input"></a>範例輸入 Sample Input</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">8</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">4</span><br></pre></td></tr></table></figure><h3 id="範例輸出-Sample-Output"><a href="#範例輸出-Sample-Output" class="headerlink" title="範例輸出 Sample Output"></a>範例輸出 Sample Output</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure><h3 id="提示-Hint"><a href="#提示-Hint" class="headerlink" title="提示 Hint"></a>提示 Hint</h3><p>提示 ：<br>小涵的积木的AC代码可以直接AC本题。<br>但我希望您可以想想另一种解答方式，想想数字有什么特殊性，参考时间复杂度$O(n)$，空间复杂度$O(1)$。</p><p>还有一种算法时间复杂度$O(n\log{n})$，空间复杂度$O(n)$的…</p><p>如果哪种语言直接输入都超时的话，请与我联系，我将调整时间限制。</p><p>//感谢ck99126指出题目存在的一些问题！</p><h2 id="題解-Solution"><a href="#題解-Solution" class="headerlink" title="題解 Solution"></a>題解 Solution</h2><h3 id="1-直接暴力做"><a href="#1-直接暴力做" class="headerlink" title="1.直接暴力做"></a>1.直接暴力做</h3><p>無庸置疑，跟 C++ Map 一起使用</p><h4 id="程式碼-I-Accepted-Code-I"><a href="#程式碼-I-Accepted-Code-I" class="headerlink" title="程式碼 I Accepted Code I"></a>程式碼 I Accepted Code I</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _ ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">_</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> N;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;N;</span><br><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; m;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> A;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N<span class="number">-1</span>;i++)&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;A;</span><br><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt;::iterator it=m.find(A);</span><br><span class="line"><span class="keyword">if</span>(it==m.end())</span><br><span class="line">m[A]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">m[A]++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> it=m.begin();it!=m.end();it++)</span><br><span class="line"><span class="keyword">if</span>(it-&gt;second%<span class="number">2</span>)&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;it-&gt;first&lt;&lt;<span class="string">'\n'</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-XOR"><a href="#2-XOR" class="headerlink" title="2.XOR"></a>2.XOR</h3><a href="/2018/09/02/zj-c651/" title="c651. 三、區間xor(RXQ)">c651. 三、區間xor(RXQ)</a> 這篇文章有寫過有關 XOR 的性質用**歸零律**跟**自反性**就可以完成了<h4 id="程式碼-II-Accepted-Code-II"><a href="#程式碼-II-Accepted-Code-II" class="headerlink" title="程式碼 II Accepted Code II"></a>程式碼 II Accepted Code II</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> N,ans=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;N);</span><br><span class="line">N--;</span><br><span class="line"><span class="keyword">while</span>(N--)&#123;</span><br><span class="line"><span class="keyword">int</span> S;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;S);</span><br><span class="line">ans^=S;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="後記-Afterword"><a href="#後記-Afterword" class="headerlink" title="後記 Afterword"></a>後記 Afterword</h2><p>很神奇吧，這樣複雜度都壓下去了<br>但<br>後面有些東西是用HTML補上去的<br>不曉得是不是 Hexo 出 BUG 了<br>有些正常的 Markdown 無法解析成功<br>就這樣吧</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;題目-Problem&quot;&gt;&lt;a href=&quot;#題目-Problem&quot; class=&quot;headerlink&quot; title=&quot;題目 Problem&quot;&gt;&lt;/a&gt;題目 Problem&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://zerojudge.tw/ShowProblem?problemid=d708&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;題目連結：https://zerojudge.tw/ShowProblem?problemid=d708&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="解題區" scheme="http://blog.yangjerry.tw/categories/%E8%A7%A3%E9%A1%8C%E5%8D%80/"/>
    
      <category term="解題報告書 - ZeroJudge" scheme="http://blog.yangjerry.tw/categories/%E8%A7%A3%E9%A1%8C%E5%8D%80/%E8%A7%A3%E9%A1%8C%E5%A0%B1%E5%91%8A%E6%9B%B8-ZeroJudge/"/>
    
    
      <category term="XOR" scheme="http://blog.yangjerry.tw/tags/XOR/"/>
    
  </entry>
  
  <entry>
    <title>c651. 三、區間xor(RXQ)</title>
    <link href="http://blog.yangjerry.tw/2018/09/02/zj-c651/"/>
    <id>http://blog.yangjerry.tw/2018/09/02/zj-c651/</id>
    <published>2018-09-01T16:41:17.000Z</published>
    <updated>2018-09-02T09:39:57.626Z</updated>
    
    <content type="html"><![CDATA[<h2 id="題目-Problem"><a href="#題目-Problem" class="headerlink" title="題目 Problem"></a>題目 Problem</h2><p><a href="https://zerojudge.tw/ShowProblem?problemid=c651" target="_blank" rel="noopener">題目連結：https://zerojudge.tw/ShowProblem?problemid=c651</a><br><a id="more"></a></p><h3 id="敘述-Description"><a href="#敘述-Description" class="headerlink" title="敘述 Description"></a>敘述 Description</h3><p>給你一段 $N$ 個正整數的序列 $a_1∼a_N$ ，請你執行 $Q$ 筆操作。</p><h3 id="輸入-Input"><a href="#輸入-Input" class="headerlink" title="輸入 Input"></a>輸入 Input</h3><p>第一行有兩個正整數 $N,Q$ 。</p><p>第二行有 $N$ 個非負整數 $a_i$ 。</p><p>接下來有 $Q$ 行，每行代表一個操作。</p><p>如果是 $0\ l\ r$ ，代表詢問 $[l,r]$ 區間的每個數字做 $xor$ 運算之後的值。</p><p>如果是 $1\ x\ v$ ，代表將 $a_x$ 置換成 $v$ 。</p><p>※  $xor$ 即代表C++中的位元運算「^」。</p><h3 id="輸出-Output"><a href="#輸出-Output" class="headerlink" title="輸出 Output"></a>輸出 Output</h3><p>對於每個詢問，輸出詢問區間的每個數字做 $xor$ 運算之後的值。</p><h3 id="範例輸入-Sample-Input"><a href="#範例輸入-Sample-Input" class="headerlink" title="範例輸入 Sample Input"></a>範例輸入 Sample Input</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">5 3</span><br><span class="line">16 9 1 5 3</span><br><span class="line">0 1 5</span><br><span class="line">1 1 5</span><br><span class="line">0 1 5</span><br></pre></td></tr></table></figure><h3 id="範例輸出-Sample-Output"><a href="#範例輸出-Sample-Output" class="headerlink" title="範例輸出 Sample Output"></a>範例輸出 Sample Output</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">30</span><br><span class="line">11</span><br></pre></td></tr></table></figure><h3 id="提示-Hint"><a href="#提示-Hint" class="headerlink" title="提示 Hint"></a>提示 Hint</h3><p>本題共有四組測試題組，條件限制如下所示。每一組可有一或多筆測試資料，該組所有測試資料皆需答對才會獲得該組分數。<br><img src="image.png" alt=""><br>cout &lt;&lt; (16^9^1^5^3) &lt;&lt; “\n”; 輸出即為30。</p><p>觀察一下 xor 的性質，不然這題拿不滿XD。輸入卡很緊，記得加優化。</p><h2 id="題解-Solution"><a href="#題解-Solution" class="headerlink" title="題解 Solution"></a>題解 Solution</h2><p>遇到一般的RMQ+單點修改問題，通常有幾種解題方式</p><ol><li>線段樹 Segment Tree</li><li>二元索引樹（樹狀樹组） Binary Index Tree (Fenwick tree)<br>不過這題時限只有$0.5$秒<br>如果用前綴 $XOR$ 單點修改變成$O(N)$<br>如果用線段樹遞迴查詢可能會有點慢（有實做過，只有$72\%$，其他的被TLE）</li></ol><p>這題可以使用BIT，也就是二元索引樹，但要如何使用呢？<br>（以下把二元索引樹 簡稱 BIT）</p><h3 id="XOR-真值表＆性質"><a href="#XOR-真值表＆性質" class="headerlink" title="XOR 真值表＆性質"></a>XOR 真值表＆性質</h3><div class="table-container"><table><thead><tr><th style="text-align:center">$A$</th><th style="text-align:center">$B$</th><th style="text-align:center">$A⊕B$</th></tr></thead><tbody><tr><td style="text-align:center">$0$</td><td style="text-align:center">$0$</td><td style="text-align:center">$0$</td></tr><tr><td style="text-align:center">$1$</td><td style="text-align:center">$0$</td><td style="text-align:center">$1$</td></tr><tr><td style="text-align:center">$0$</td><td style="text-align:center">$1$</td><td style="text-align:center">$1$</td></tr><tr><td style="text-align:center">$1$</td><td style="text-align:center">$1$</td><td style="text-align:center">$0$</td></tr></tbody></table></div><p>恆等律：$X⊕0=X$<br>歸零律：$X⊕X=0$<br>自反性：$A⊕B⊕B=A⊕(B⊕B)=A⊕0=A$</p><p>其中的<strong>歸零律</strong>跟<strong>自反性</strong>就是我們要使用的</p><p>拿到BIT的模板應該都是求區間和</p><p>假設我們要求$[L,R]$的區間和<br>是不是只要$sum(R)-sum(L-1)$？</p><p>這題改成區間 XOR<br>BIT 初始化就改成 XOR（程式碼 Line 15）<br>然後把求前綴和的 $+$ 改成 XOR（程式碼 Line 9）<br>就變成 前綴 XOR 了</p><p>查詢只要輸出 $xxor(R)⊕xxor(L-1)$（程式碼 Line 37）</p><p>單點修改呢？<br>先把原本的數字跟要變成的數字做 XOR 變成 $val$（程式碼 Line 40）<br>利用<strong>歸零律</strong>跟<strong>自反性</strong><br>後面需要更新的數字，統一跟 $val$ 做 XOR<br>單點修改就完成了</p><h3 id="程式碼-Accepted-Code"><a href="#程式碼-Accepted-Code" class="headerlink" title="程式碼 Accepted Code"></a>程式碼 Accepted Code</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _ ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-x))</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN = <span class="number">1000000</span>+<span class="number">2</span>;</span><br><span class="line"><span class="keyword">int</span> Origin[MAXN+<span class="number">1</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> BITS[MAXN+<span class="number">1</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> N,Q;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">xxor</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(;x;x-=lowbit(x))</span><br><span class="line">ans^=BITS[x];</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> x = <span class="number">1</span>; x &lt;= n; ++x) &#123;</span><br><span class="line">BITS[x] = Origin[x];</span><br><span class="line"><span class="keyword">int</span> y = x - lowbit(x);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = x<span class="number">-1</span>; i &gt; y; i -= lowbit(i))</span><br><span class="line">BITS[x] ^= BITS[i];</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> val)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=x;i&lt;=N;i+=lowbit(i))</span><br><span class="line">BITS[i]^=val;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">_</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;N&gt;&gt;Q;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=N;i++)</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;Origin[i];</span><br><span class="line">init(N);</span><br><span class="line"><span class="keyword">while</span>(Q--)&#123;</span><br><span class="line"><span class="keyword">int</span> choice,x,y;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;choice&gt;&gt;x&gt;&gt;y;</span><br><span class="line"><span class="keyword">if</span>(choice==<span class="number">0</span>)&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;(xxor(y)^xxor(x<span class="number">-1</span>))&lt;&lt;<span class="string">'\n'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">int</span> OO=Origin[x]^y;</span><br><span class="line">Origin[x]=y;</span><br><span class="line">update(x,OO);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="後記-Afterword"><a href="#後記-Afterword" class="headerlink" title="後記 Afterword"></a>後記 Afterword</h2><p>每次做到有關 XOR 的題型<br>都讓我想到有一題原本 時間 $O(N\log{N})$ 空間 $O(N)$<br>最後複雜度可以壓在 時間 $O(N)$ 空間 $O(1)$<br>下一篇就來寫這題的報告書</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;題目-Problem&quot;&gt;&lt;a href=&quot;#題目-Problem&quot; class=&quot;headerlink&quot; title=&quot;題目 Problem&quot;&gt;&lt;/a&gt;題目 Problem&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://zerojudge.tw/ShowProblem?problemid=c651&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;題目連結：https://zerojudge.tw/ShowProblem?problemid=c651&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="解題區" scheme="http://blog.yangjerry.tw/categories/%E8%A7%A3%E9%A1%8C%E5%8D%80/"/>
    
      <category term="解題報告書 - ZeroJudge" scheme="http://blog.yangjerry.tw/categories/%E8%A7%A3%E9%A1%8C%E5%8D%80/%E8%A7%A3%E9%A1%8C%E5%A0%B1%E5%91%8A%E6%9B%B8-ZeroJudge/"/>
    
    
      <category term="Fenwick Tree" scheme="http://blog.yangjerry.tw/tags/Fenwick-Tree/"/>
    
      <category term="Binary Index Tree" scheme="http://blog.yangjerry.tw/tags/Binary-Index-Tree/"/>
    
      <category term="XOR" scheme="http://blog.yangjerry.tw/tags/XOR/"/>
    
  </entry>
  
  <entry>
    <title>c453. TOI2003 第二題：疊羅漢</title>
    <link href="http://blog.yangjerry.tw/2018/08/31/zj-c453/"/>
    <id>http://blog.yangjerry.tw/2018/08/31/zj-c453/</id>
    <published>2018-08-31T07:29:57.000Z</published>
    <updated>2018-09-02T04:42:34.820Z</updated>
    
    <content type="html"><![CDATA[<h2 id="題目-Problem"><a href="#題目-Problem" class="headerlink" title="題目 Problem"></a>題目 Problem</h2><p><a href="https://zerojudge.tw/ShowProblem?problemid=c453" target="_blank" rel="noopener">題目連結：https://zerojudge.tw/ShowProblem?problemid=c453</a><br><a id="more"></a></p><h3 id="敘述-Description"><a href="#敘述-Description" class="headerlink" title="敘述 Description"></a>敘述 Description</h3><p>　　某特技團經常表演疊羅漢的節目。表演時通常在最底層會先站好一排連續的 n 個人，然後在任意連續兩人的肩膀上面便可支撐另一個人站在這兩個人的上一層。在第二層如果有連續兩人的話，當然可繼續往第三層疊上一個人，以此類推。為了增加趣味性，有時會組合出不同的型態展現在觀眾的眼前。舉例來說，如果 n=3，也就是說底層共有 3 個人，那麼就有下列 5 種不同的組合。<br><img src="image.png" alt=""><br>　　如果 n=4，也就是說底層共有 4 個人，那麼你也可以列舉一下，便可知道共有下列 14 種不同的組合。現在針對不同的 n 值，請你撰寫一個程式來計算共有幾種不同的組合？</p><h3 id="輸入-Input"><a href="#輸入-Input" class="headerlink" title="輸入 Input"></a>輸入 Input</h3><p>第一行有一個正整數 n，1 ≤ n ≤ 20。</p><h3 id="輸出-Output"><a href="#輸出-Output" class="headerlink" title="輸出 Output"></a>輸出 Output</h3><p>請輸出共有幾種不同的組合。</p><h3 id="範例輸入-Sample-Input"><a href="#範例輸入-Sample-Input" class="headerlink" title="範例輸入 Sample Input"></a>範例輸入 Sample Input</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//範例輸入一</span><br><span class="line">3</span><br><span class="line"></span><br><span class="line">//範例輸入二</span><br><span class="line">4</span><br></pre></td></tr></table></figure><h3 id="範例輸出-Sample-Output"><a href="#範例輸出-Sample-Output" class="headerlink" title="範例輸出 Sample Output"></a>範例輸出 Sample Output</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//範例輸出一</span><br><span class="line">5</span><br><span class="line"></span><br><span class="line">//範例輸出二</span><br><span class="line">14</span><br></pre></td></tr></table></figure><h3 id="提示-Hint"><a href="#提示-Hint" class="headerlink" title="提示 Hint"></a>提示 Hint</h3><h2 id="題解-Solution"><a href="#題解-Solution" class="headerlink" title="題解 Solution"></a>題解 Solution</h2><h3 id="動態規劃-Dynamic-Programming"><a href="#動態規劃-Dynamic-Programming" class="headerlink" title="動態規劃 Dynamic Programming"></a>動態規劃 Dynamic Programming</h3><p>感覺這題很DP，不過 oToToT 大大真的寫出了 DP 算式：</p><p>令$dp[i][j]$代表第$i$斜排他的長度要是$j$時的方法數<br>$dp[i][j]=\sum_{k=j-1}^{i-1}dp[i-1][k]$<br>因為會發現若是這裡要擺長度為$j$那前面最少要擺長度$j-1$，所以可以枚舉前一斜條擺放的數量來計算這個狀態的方法數。<br>而對於n個斜條的總方法數，只要再枚舉最後一斜條有幾個人就好了。</p><p>我果然很低端，回我的當下我真的看不懂QQ</p><h3 id="卡特蘭數-Catalan-Number"><a href="#卡特蘭數-Catalan-Number" class="headerlink" title="卡特蘭數 Catalan Number"></a>卡特蘭數 Catalan Number</h3><p>（至於為何會想到卡特蘭數，請滑到後記）<br>這是我理解的版本，<a href="https://johnmayhk.wordpress.com/2014/02/03/cn/" target="_blank" rel="noopener">連結</a></p><p>$C(0,0)=1$<br>$C(1,1)=C(0,0)$<br>$C(2,2)=C(1,0)+C(1,1)$<br>$C(3,3)=C(2,0)+C(2,1)+C(2,2)$<br>$C(4,4)=C(3,0)+C(3,1)+C(3,2)+C(3,3)$<br>…<br>$C(N,N)=C(N-1,0)+C(N-1,1)+…+C(N-1,N-1)$</p><p>可以把這些想像成</p><p>$N$層上面$N-1-0$層有幾種組合<br>$N$層上面$N-1-1$層有幾種組合<br>…<br>$N$層上面$N-1-i$層有幾種組合<br>…<br>$N$層上面$1$層有幾種組合<br>$N$層上面$0$層有幾種組合<br>再加上 涂家銘 大大提供給我參考的圖：<br><img src="sol_1.jpg" alt=""><br><img src="sol_2.jpg" alt=""><br>稍微轉一轉是不是就變成高中熟悉的最短路徑組合呢？</p><h3 id="程式碼-Accepted-Code"><a href="#程式碼-Accepted-Code" class="headerlink" title="程式碼 Accepted Code"></a>程式碼 Accepted Code</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _ ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> <span class="title">catalan</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> N)</span></span>&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> n2=<span class="number">2</span>*N;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> ans=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> i=N+<span class="number">1</span>;i&lt;=n2;i++)&#123;</span><br><span class="line">ans*=i;</span><br><span class="line">ans/=(i-N);</span><br><span class="line">&#125;</span><br><span class="line">ans/=(N+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">_</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> query[<span class="number">21</span>]=&#123;<span class="number">0</span>,<span class="number">1</span>&#125;;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> i=<span class="number">1</span>;i&lt;<span class="number">21</span>;i++)&#123;</span><br><span class="line">query[i]=catalan(i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> N;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;N;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;query[N]&lt;&lt;<span class="string">'\n'</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="後記-Afterword"><a href="#後記-Afterword" class="headerlink" title="後記 Afterword"></a>後記 Afterword</h2><p>這題我一開始打開 Google 搜尋「0 1 2 5 14 OEIS」（我認為0位是0種，所以一開始打0）作弊開好開滿<br>但沒想到一打開就是傳說中的<a href="https://oeis.org/A000108" target="_blank" rel="noopener">卡特蘭數列</a><br>只有聽到「清大程式解題營」的 <a href="https://lfswang.github.io/" target="_blank" rel="noopener">旺陽學長</a> 提到過<br>但沒有寫過這種題目</p><p>不過 涂家銘 大大表示：</p><p>幫社團出練習賽題目其中一題用 DP 做會 TLE<br>（練習賽也太狠了吧QQ）</p><p>的確，畢竟這題的最大值$N=20$，如果$N$更大，有機會爆 TLE 了</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;題目-Problem&quot;&gt;&lt;a href=&quot;#題目-Problem&quot; class=&quot;headerlink&quot; title=&quot;題目 Problem&quot;&gt;&lt;/a&gt;題目 Problem&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://zerojudge.tw/ShowProblem?problemid=c453&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;題目連結：https://zerojudge.tw/ShowProblem?problemid=c453&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="解題區" scheme="http://blog.yangjerry.tw/categories/%E8%A7%A3%E9%A1%8C%E5%8D%80/"/>
    
      <category term="解題報告書 - ZeroJudge" scheme="http://blog.yangjerry.tw/categories/%E8%A7%A3%E9%A1%8C%E5%8D%80/%E8%A7%A3%E9%A1%8C%E5%A0%B1%E5%91%8A%E6%9B%B8-ZeroJudge/"/>
    
    
      <category term="建表" scheme="http://blog.yangjerry.tw/tags/%E5%BB%BA%E8%A1%A8/"/>
    
      <category term="卡特蘭數" scheme="http://blog.yangjerry.tw/tags/%E5%8D%A1%E7%89%B9%E8%98%AD%E6%95%B8/"/>
    
  </entry>
  
  <entry>
    <title>a625. 5. Overhanging Cards</title>
    <link href="http://blog.yangjerry.tw/2018/08/30/zj-a625/"/>
    <id>http://blog.yangjerry.tw/2018/08/30/zj-a625/</id>
    <published>2018-08-30T12:04:05.000Z</published>
    <updated>2018-08-30T14:42:38.454Z</updated>
    
    <content type="html"><![CDATA[<h2 id="題目-Problem"><a href="#題目-Problem" class="headerlink" title="題目 Problem"></a>題目 Problem</h2><p><a href="https://zerojudge.tw/ShowProblem?problemid=a625" target="_blank" rel="noopener">題目連結：https://zerojudge.tw/ShowProblem?problemid=a625</a><br><a id="more"></a></p><h3 id="敘述-Description"><a href="#敘述-Description" class="headerlink" title="敘述 Description"></a>敘述 Description</h3><p>你可以把一疊的卡片凸出桌子的邊緣多遠呢？如果你有一張卡，你最大可以凸出卡片長度的一半。有兩張卡時，你可以把上面那張的一半凸出下面的那張，而下面的那張則有三分之一凸出桌子的邊緣，總凸出長度則為$ 1/2 + 1/3 = 5/6 $張卡片長度。總之，你可以把$ n $張卡片凸出$ 1/2 + 1/3 + 1/4 + … + 1/(n+1) $張卡片的長度，其中最上面那張凸出$ 1/2 $於第二張的外面，第二張凸出$ 1/3 $於第三張的外面，第三張凸出$ 1/4$，以此類推，最底下那張則凸出$ 1/(n+1)$。如下圖所示。<br><img src="image.jpg" alt=""></p><h3 id="輸入-Input"><a href="#輸入-Input" class="headerlink" title="輸入 Input"></a>輸入 Input</h3><p>每筆測資一行，含有一個正浮點數 c (代表所要凸出的總長度)，其值最小為 0.01，最大為 5.20；這個數含有三位數字。</p><h3 id="輸出-Output"><a href="#輸出-Output" class="headerlink" title="輸出 Output"></a>輸出 Output</h3><p>輸出要達成所需的凸出長度最少需要幾張卡片。請參照範例輸出的格式。</p><h3 id="範例輸入-Sample-Input"><a href="#範例輸入-Sample-Input" class="headerlink" title="範例輸入 Sample Input"></a>範例輸入 Sample Input</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1.00</span><br><span class="line">3.71</span><br><span class="line">0.04</span><br><span class="line">5.19</span><br></pre></td></tr></table></figure><h3 id="範例輸出-Sample-Output"><a href="#範例輸出-Sample-Output" class="headerlink" title="範例輸出 Sample Output"></a>範例輸出 Sample Output</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">3 card(s)</span><br><span class="line">61 card(s)</span><br><span class="line">1 card(s)</span><br><span class="line">273 card(s)</span><br></pre></td></tr></table></figure><h3 id="提示-Hint"><a href="#提示-Hint" class="headerlink" title="提示 Hint"></a>提示 Hint</h3><h2 id="題解-Solution"><a href="#題解-Solution" class="headerlink" title="題解 Solution"></a>題解 Solution</h2><p>$1$張卡片長度為$1/2$<br>$2$張卡片長度為$1/2+1/3$<br>$3$張卡片長度為$1/2+1/3+1/4$<br>$…$以此類推$…$<br>$n$張卡片長度為$1/2+1/3+1/4+…+1/(n+1)$<br>先建表，最大卡片數頂多$276$張<br>最後再用二分搜尋找卡片數就好</p><h3 id="程式碼-Accepted-Code"><a href="#程式碼-Accepted-Code" class="headerlink" title="程式碼 Accepted Code"></a>程式碼 Accepted Code</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _ ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">_</span><br><span class="line"><span class="keyword">double</span> query[<span class="number">277</span>]=&#123;<span class="number">0</span>&#125;,a=<span class="number">0.0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;a&lt;=<span class="number">5.20</span>;i++)&#123;</span><br><span class="line">a+=(<span class="number">1.0</span>/(i+<span class="number">1</span>));</span><br><span class="line">query[i]=a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">double</span> enter;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;enter)&#123;</span><br><span class="line"><span class="keyword">int</span> l=<span class="number">0</span>,r=<span class="number">277</span>;</span><br><span class="line"><span class="keyword">while</span>(l+<span class="number">1</span>&lt;r)&#123;</span><br><span class="line"><span class="keyword">int</span> mid=(l+r)/<span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span>(enter&gt;query[mid])&#123;</span><br><span class="line">l=mid;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">r=mid;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;l+<span class="number">1</span>&lt;&lt;<span class="string">" card(s)"</span>&lt;&lt;<span class="string">'\n'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="後記-Afterword"><a href="#後記-Afterword" class="headerlink" title="後記 Afterword"></a>後記 Afterword</h2><p>這一題在 ICPC Live Archive 跟 POJ 找得到<br>ICPC Live Archive 題目代碼：<a href="https://icpcarchive.ecs.baylor.edu/index.php?option=com_onlinejudge&amp;Itemid=8&amp;page=show_problem&amp;problem=295" target="_blank" rel="noopener">2294 - Hangover</a><br>POJ 題目代碼：<a href="http://poj.org/problem?id=1003" target="_blank" rel="noopener">1003 - Hangover</a><br>ZeroJudge 拿到 AC 之後<br>就到 ICPC Live Archive 繳交，但直接被 WA 掉<br>我還以為是我二分搜寫錯<br>但仔細看了它們的 Input 後<br>才知道程式輸入$0.00$才會結束<br>改完這題就 AC 了</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;題目-Problem&quot;&gt;&lt;a href=&quot;#題目-Problem&quot; class=&quot;headerlink&quot; title=&quot;題目 Problem&quot;&gt;&lt;/a&gt;題目 Problem&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://zerojudge.tw/ShowProblem?problemid=a625&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;題目連結：https://zerojudge.tw/ShowProblem?problemid=a625&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="解題區" scheme="http://blog.yangjerry.tw/categories/%E8%A7%A3%E9%A1%8C%E5%8D%80/"/>
    
      <category term="解題報告書 - ZeroJudge" scheme="http://blog.yangjerry.tw/categories/%E8%A7%A3%E9%A1%8C%E5%8D%80/%E8%A7%A3%E9%A1%8C%E5%A0%B1%E5%91%8A%E6%9B%B8-ZeroJudge/"/>
    
    
      <category term="建表" scheme="http://blog.yangjerry.tw/tags/%E5%BB%BA%E8%A1%A8/"/>
    
      <category term="二分搜" scheme="http://blog.yangjerry.tw/tags/%E4%BA%8C%E5%88%86%E6%90%9C/"/>
    
  </entry>
  
  <entry>
    <title>c700. 壞掉的隊列(queue)</title>
    <link href="http://blog.yangjerry.tw/2018/08/29/zj-c700/"/>
    <id>http://blog.yangjerry.tw/2018/08/29/zj-c700/</id>
    <published>2018-08-29T13:34:05.000Z</published>
    <updated>2019-01-19T05:59:46.774Z</updated>
    
    <content type="html"><![CDATA[<h2 id="題目-Problem"><a href="#題目-Problem" class="headerlink" title="題目 Problem"></a>題目 Problem</h2><p><a href="https://zerojudge.tw/ShowProblem?problemid=c700" target="_blank" rel="noopener">題目連結：https://zerojudge.tw/ShowProblem?problemid=c700</a><br><a id="more"></a></p><h3 id="敘述-Description"><a href="#敘述-Description" class="headerlink" title="敘述 Description"></a>敘述 Description</h3><p>「測資中有若干行輸入，請你實作 queue 的幾種操作：</p><p>push $X(0≤X&lt;2^{32})$: 將 $X$ 加入隊列</p><p>pop: 輸出隊列最前方的數字並刪除，你可以假設此時隊列不是空的」 </p><p>小W本來想隨便寫寫交差了事，卻發現 STL 的 queue 壞了！</p><p>再看看題目，原來底下附註一行小字：請用兩個 stack 完成這題。</p><p>於是小W希望你能用以下代號寫一張紙條告訴他該怎麼做。</p><p>1: 讀入 push X 並將 X 放到堆疊一</p><p>2: 讀入 push X 並將 X 放到堆疊二</p><p>3: 讀入 pop ，將堆疊一頂端的元素輸出並刪除</p><p>4: 讀入 pop ，將堆疊二頂端的元素輸出並刪除</p><p>5: 將堆疊一頂端的元素取出並放至堆疊二</p><p>6: 將堆疊二頂端的元素取出並放至堆疊一</p><p>如果取出元素時堆疊為空或者讀入 push/pop 的順序與輸入測資不符，你會害小W拿到一個WA。</p><h3 id="輸入-Input"><a href="#輸入-Input" class="headerlink" title="輸入 Input"></a>輸入 Input</h3><p>見題目和範例。</p><h3 id="輸出-Output"><a href="#輸出-Output" class="headerlink" title="輸出 Output"></a>輸出 Output</h3><p>輸出一行你要傳給小W的內容。</p><h3 id="範例輸入-Sample-Input"><a href="#範例輸入-Sample-Input" class="headerlink" title="範例輸入 Sample Input"></a>範例輸入 Sample Input</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">push 111</span><br><span class="line">push 222</span><br><span class="line">pop</span><br><span class="line">pop</span><br></pre></td></tr></table></figure><h3 id="範例輸出-Sample-Output"><a href="#範例輸出-Sample-Output" class="headerlink" title="範例輸出 Sample Output"></a>範例輸出 Sample Output</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">範例輸出一:</span><br><span class="line">1234</span><br><span class="line"></span><br><span class="line">範例輸出二:</span><br><span class="line">12544</span><br><span class="line"></span><br><span class="line">範例輸出三:</span><br><span class="line">1143</span><br><span class="line"></span><br><span class="line">範例輸出四:</span><br><span class="line">1313</span><br><span class="line"></span><br><span class="line">範例輸出五:</span><br><span class="line">1133</span><br></pre></td></tr></table></figure><h3 id="提示-Hint"><a href="#提示-Hint" class="headerlink" title="提示 Hint"></a>提示 Hint</h3><p>輸入至多 100000 行。</p><p>以範例輸入而言，範例輸出一、二會拿到AC。</p><p>範例輸出三會拿到WA，因為操作4時堆疊二是空的。</p><p>範例輸出四也會拿到WA，因為輸入順序是push-&gt;push-&gt;pop-&gt;pop，但是1313的操作分別為push-&gt;pop-&gt;push-&gt;pop。</p><p>範例輸出五的操作過程完全合法，但依據先進先出的原則，111應該比222早離開queue，若以1133的方式操作，222將比111早輸出，所以會拿到WA。</p><h2 id="題解-Solution"><a href="#題解-Solution" class="headerlink" title="題解 Solution"></a>題解 Solution</h2><p>第一篇解題報告書就給這題啦！</p><p><a href="https://www.hackerrank.com/challenges/queue-using-two-stacks/problem" target="_blank" rel="noopener">Hackerrank</a> 可以找到這個問題（這題就是要強制你使用 Stack）<br>實作 Queue 需要用到兩個 Stack<br>分別命名為$S1$跟$S2$</p><p>$S1$用來記錄輸入的東西<br>$S2$就是把$S1$的內容顛倒過來</p><p>$push$的時候先放入$S1$裡面<br>$pop$的時候先檢查$S2$有沒有東西</p><p>如果有，$S2$的頂端$pop$掉<br>如果沒有，先$S1$<strong>所有內容</strong>$pop$到$S2$，再讓$S2$的頂端$pop$掉</p><p>了解怎麼用 Stack 實作 Queue 就可以回到這題</p><hr><p>依照上面的做法，可以使用代號$1,4,5$的組合或$2,3,6$的組合來完成這題<br>並且用$2$個整數紀錄$2$個 Stack 的內容數量<br>分別命名為$x_1$跟$x_2$</p><p>如果要$push$，就輸出$1$，把$x_1+1$<br>如果要$pop$，就先檢查$x_2$是否大於$0$</p><p>如果有，就輸出$4$，把$x_2-1$<br>如果沒有，先輸出$x_1$個$5$，讓$x_2$加上$x_1$，並且把$x_1$歸零，再輸出$4$，把$x_2-1$</p><p>這樣就可以來寫 Code 啦！</p><h3 id="程式碼-Accepted-Code"><a href="#程式碼-Accepted-Code" class="headerlink" title="程式碼 Accepted Code"></a>程式碼 Accepted Code</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _ ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">_</span><br><span class="line"><span class="built_in">string</span> enter;</span><br><span class="line"><span class="keyword">int</span> total1=<span class="number">0</span>,total2=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;enter)&#123;</span><br><span class="line"><span class="keyword">if</span>(enter==<span class="string">"push"</span>)&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> a;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;a;</span><br><span class="line">total1++;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(total2)&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="number">4</span>;</span><br><span class="line">total2--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;total1;i++)&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="number">5</span>;</span><br><span class="line">&#125;</span><br><span class="line">total2+=total1;</span><br><span class="line"><span class="keyword">if</span>(total2)&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="number">4</span>;</span><br><span class="line">total2--;</span><br><span class="line">&#125;</span><br><span class="line">total1=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="後記-Afterword"><a href="#後記-Afterword" class="headerlink" title="後記 Afterword"></a>後記 Afterword</h2><p>這題有沒有其他解法？<br>這題是 Special Judge，應該是有吧，但……我沒有想到<br>上面這個解法是算簡單啦<br>如果有更好的解法，我還會再寫上去啦！</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;題目-Problem&quot;&gt;&lt;a href=&quot;#題目-Problem&quot; class=&quot;headerlink&quot; title=&quot;題目 Problem&quot;&gt;&lt;/a&gt;題目 Problem&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://zerojudge.tw/ShowProblem?problemid=c700&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;題目連結：https://zerojudge.tw/ShowProblem?problemid=c700&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="解題區" scheme="http://blog.yangjerry.tw/categories/%E8%A7%A3%E9%A1%8C%E5%8D%80/"/>
    
      <category term="解題報告書 - ZeroJudge" scheme="http://blog.yangjerry.tw/categories/%E8%A7%A3%E9%A1%8C%E5%8D%80/%E8%A7%A3%E9%A1%8C%E5%A0%B1%E5%91%8A%E6%9B%B8-ZeroJudge/"/>
    
    
      <category term="Stack" scheme="http://blog.yangjerry.tw/tags/Stack/"/>
    
      <category term="Queue" scheme="http://blog.yangjerry.tw/tags/Queue/"/>
    
      <category term="Special Judge" scheme="http://blog.yangjerry.tw/tags/Special-Judge/"/>
    
  </entry>
  
  <entry>
    <title>Hello Hexo! Test By Jerry Yang</title>
    <link href="http://blog.yangjerry.tw/2018/08/26/hello-world/"/>
    <id>http://blog.yangjerry.tw/2018/08/26/hello-world/</id>
    <published>2018-08-26T06:30:49.123Z</published>
    <updated>2018-08-30T14:43:25.866Z</updated>
    
    <content type="html"><![CDATA[<p>先恭喜亞運台灣 🇹🇼 奪得金牌<br><a href="https://www.net-chinese.com.tw/nc/" target="_blank" rel="noopener">網路中文</a> 也很大方的免費讓人註冊.tw<br><a id="more"></a><br>於是，這個 <a href="https://blog.yangjerry.tw">Blog</a> 就誕生了<br>第一次用 <a href="https://hexo.io/zh-tw/" target="_blank" rel="noopener">Hexo</a> 架設<br>用 Markdown 來寫寫看瑣碎事</p><p>首頁嘛……晚點再把坑補上<br>寫到這裡就這樣吧！之後再補</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;先恭喜亞運台灣 🇹🇼 奪得金牌&lt;br&gt;&lt;a href=&quot;https://www.net-chinese.com.tw/nc/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;網路中文&lt;/a&gt; 也很大方的免費讓人註冊.tw&lt;br&gt;
    
    </summary>
    
      <category term="Hello World" scheme="http://blog.yangjerry.tw/categories/Hello-World/"/>
    
    
  </entry>
  
</feed>
