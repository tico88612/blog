{"meta":{"title":"Jerry Yang's Blog","subtitle":null,"description":null,"author":"Jerry Yang","url":"http://blog.yangjerry.tw"},"pages":[],"posts":[{"title":"理型論？為何凡是不能只看表面？","slug":"theory-of-forms","date":"2018-10-24T01:25:49.000Z","updated":"2018-10-24T03:56:28.296Z","comments":true,"path":"2018/10/24/theory-of-forms/","link":"","permalink":"http://blog.yangjerry.tw/2018/10/24/theory-of-forms/","excerpt":"Tag 是不是多了兩個感覺不相關的？((((；ﾟДﾟ)))))))","text":"Tag 是不是多了兩個感覺不相關的？((((；ﾟДﾟ)))))))前幾天上了教育哲學，感覺跟現在的事件有點相關，所以我把它拉進裡面了（這只是我的個人上課筆記而已）（如果你是要專業研究的，請回去上一頁或是看其他人寫的文章，哲學哲學雞蛋糕的理型論） 理型論 Theory of Form提出人：柏拉圖（Plato），古希臘三哲人之一 他認為觀念界 表象界 vs 觀念界表象界 Appenrance它靠著感官，眼、耳、口、鼻、觸，來去説他是什麼樣子的例如：水壺，我用眼睛感覺，他是圓柱體的 但是，表象是可以被偽造的例如：筷子插入水中，用眼睛感覺，筷子被折斷了((((；ﾟДﾟ))))))) 表象界它是：短暫的、虛假的、易變的 日本的《世界奇妙物語》之前還演過類似的有個人犯了重大的罪，被判了30天30天？重大的罪只有30天？眾人很疑惑 這30天以內，犯人受盡各種折磨然而，孰不知，夢裡的30天 = 現實的5分鐘現實是被判30天，也就是夢裡大約720年 觀念界 Idea剛剛談到，表象是可以被偽造的例如：筷子插入水中，用眼睛感覺，筷子被折斷了((((；ﾟДﾟ))))))) 觀念界，就是知道筷子沒有被折斷，只是水的折射看起來被折斷了你知道了水的折射，才知道筷子並沒有斷 觀念界它是\b：永恆的、真實的、不變的 洞穴寓言 Allegory of the Cave內容其實 Google、Wikipedia 都看得到 如果給一名囚犯鬆綁，出去看見這些以往所見的影子的原型，你覺得會怎麼樣？這個人可能會在強光刺激下痛苦不堪，產生錯亂。他可能會認為外面所看到的東西不是現實的。因為他相信只有在洞壁上能看見真相。 普悠瑪事件 Train derailment很多人知道普悠瑪出軌事件，看著新聞直播救援 剛好拍到慈濟在助念，當天有人身為前救難隊員就出來罵慈濟説干擾救援（也就是說，前救難隊員並沒有在現場） 週日：Po文到「爆料公社」週一：大家一起狂鞭「慈濟」，說「作秀」「詛咒別人」「詐騙集團」「干擾救援」之類的週二：大愛電視FB專頁表示「如果志工助念，影響到搜救工作，警消人員一定會來制止的，但現場並沒有人有任何表示。」「慈濟志工跟媒體被安排在同一區，很接近攝影機收音位置，可能因此導致媒體直播時，志工的聲音很明顯，引發觀眾的關切與誤會。」 （詳情也可以去看大愛電視FB專頁，多吸收一點資訊，多方面查證）（也不要只是聽信「媒體」、「爆料公社」怎麼説就怎麼罵，不然你也是跟那些洞穴囚犯一樣） 真相怎麼樣，我也不多做評論了，畢竟我沒有在現場至於真的是不是「作秀」「干擾救援」？我很乖 我不酸 我坐等看留言 —— 圖源：www.71714.com不要只是憑著一張照片、一段錄音、一部影片就輕易的斷定事實 後記 Afterword學習哲學，並不是思考哲學，而是更有哲學的思考保持著理性，才能更接近真相 為何凡是不能只看表面？因為表象是可以被偽造的 多思考、多查證，不要只是人云亦云否則，你也跟洞穴囚犯沒什麼差異","categories":[{"name":"師培筆記","slug":"師培筆記","permalink":"http://blog.yangjerry.tw/categories/師培筆記/"},{"name":"師培筆記 - 教育哲學","slug":"師培筆記/師培筆記-教育哲學","permalink":"http://blog.yangjerry.tw/categories/師培筆記/師培筆記-教育哲學/"}],"tags":[{"name":"理型論","slug":"理型論","permalink":"http://blog.yangjerry.tw/tags/理型論/"},{"name":"洞穴寓言","slug":"洞穴寓言","permalink":"http://blog.yangjerry.tw/tags/洞穴寓言/"},{"name":"慈濟","slug":"慈濟","permalink":"http://blog.yangjerry.tw/tags/慈濟/"},{"name":"普悠瑪出軌事件","slug":"普悠瑪出軌事件","permalink":"http://blog.yangjerry.tw/tags/普悠瑪出軌事件/"}]},{"title":"演講筆記：醫人文 —— 我的故事","slug":"kp-tcu-note","date":"2018-10-17T02:26:31.000Z","updated":"2018-10-17T07:05:08.899Z","comments":true,"path":"2018/10/17/kp-tcu-note/","link":"","permalink":"http://blog.yangjerry.tw/2018/10/17/kp-tcu-note/","excerpt":"校長週會，老實說，講者聽一聽，隔幾天就忘記了","text":"校長週會，老實說，講者聽一聽，隔幾天就忘記了 演講前數天 Before「什麼？大一校長週會是柯P？」我瞪大著眼說「對啊…這是真的」室友「傻眼…那我們之前到底請誰來啊？」這也是蠻奇葩的事之一新生的國文檢定門檻都直接被刪除了反正意想不到真的很多 演講前一天 Yesterday晚上跟女友分享我明天想要去聽柯P的演講打算明天吃完早午餐，就直接過去大愛樓 我女友大概跟我說類似的經驗，以前也有請沈玉琳來演藝廳也是爆棚的，一樓坐滿就到二樓坐，二樓坐滿就站著聽 演講當天中午12點我就在簽到處等待了等到差不多1點才能進場還好人還沒有很多，坐到第二排 演講者 Lecturer臺北市第6任市長 柯文哲柯文哲 —— 圖源：WIKIPEDIA圖片4不4太大了？ 演講內容台大醫院當他來到台大醫院的第一天，體驗到人生無常 人生哲學人生都是意外（也包括當上市長吧）台大醫院的磨練，也包括被彈劾的事件（那時候陳佩琪直接衝出來跟台大槓上，台灣啟示錄還有做專訪） 「最困難並不是面對挫折打擊，最困難的是面對挫折打擊，卻沒有失去對人世之熱情」我真的覺得這句話最後面的那一句是最難的，沒有失去對人世之熱情，經歷過挫折打擊後，真的，好難。 把別人當作自己 博愛把自己當作別人 淡然把別人當作別人 智慧把自己當作自己 自在 心路歷程他曾經這樣過：「見山是山 -&gt; 見山不是山 -&gt; 見山是山」套用在醫生怎麼說：「看病人 -&gt; 看數據 -&gt; 看病人」曾經有一段時間他都看不到病人，專心看著機器上的數字 Dr.ECMO邵曉玲 事件體驗到「十年寒窗無人問，一舉成名天下知」 高科技叢林看到了16天沒心臟，用兩台ECMO維生 柯P直接反問我們：「什麼是活著？」「病人旁邊放了一堆維生機器的後面，你看到什麼？」「不會死，也不會活，你是否願意讓他走？」 「如果有錢不會死，王永慶會還在」 世大運「如果誠心要做一件事，全世界都會來幫你。」一日幕僚還跟邰哥講說：「聽障奧運要5.4億，我辦世大運3.6億，你覺得為什麼？」柯P：因為我沒有朋友 —— 圖源：YouTube 一日市長幕僚 「如果你成功 朋友認識你如果你失敗 你認識朋友如果你成功失敗成功失敗…. 你認識人生」 給台灣年輕人最大的啟示 Just Do It做！不一定會成功不做！一定會失敗 後記 Afterword我後來發現，我之前在柯P的IG上，他發過的名言我都會截圖今天演講聽完整理筆記時，才知道這些話他幾乎都說過 這筆記整理得有點亂，可能之後再修吧！","categories":[{"name":"演講筆記","slug":"演講筆記","permalink":"http://blog.yangjerry.tw/categories/演講筆記/"}],"tags":[{"name":"演講筆記","slug":"演講筆記","permalink":"http://blog.yangjerry.tw/tags/演講筆記/"},{"name":"柯P","slug":"柯P","permalink":"http://blog.yangjerry.tw/tags/柯P/"}]},{"title":"c731. 走路時要算數學","slug":"zj-c731","date":"2018-09-26T04:52:11.000Z","updated":"2018-09-26T05:14:05.637Z","comments":true,"path":"2018/09/26/zj-c731/","link":"","permalink":"http://blog.yangjerry.tw/2018/09/26/zj-c731/","excerpt":"題目 Problem題目連結：https://www.zerojudge.tw/ShowProblem?problemid=c731","text":"題目 Problem題目連結：https://www.zerojudge.tw/ShowProblem?problemid=c731 敘述 Description在一個二維平面上，從原點出發，每一步等於一單位長，每一次只能向右走、向上走或向左走。請問恰好走 n 步且不經過已走的點共有多少種走法？ 輸入 Input輸入僅一行，為正整數 n （ 0 &lt; n &lt;= 10000 ）。 輸出 Output一個整數, 表示方案數。由於答案可能很大，你只需要輸出這個答案 mod 12345的值 ( 換句話說，輸出這個答案除以12345的餘數 )。 範例輸入 Sample Input12345【範例輸入一】2【範例輸入二】1 範例輸出 Sample Output12345【範例輸出一】7【範例輸出二】3 提示 Hint【分數】 20% n &lt;= 5 40% n &lt;= 10 60% n &lt;= 100 80% n &lt;= 1000 100% n &lt;= 10000 題解 Solution經典DP問題，如果不要走到重複的點，就不要往回走如果要往上走，不用考慮會不會重複的點，全部加起來就對了如果要往左走，前一步就不能往右走。如果要往右走，前一步就不能往左走。然後記得每次算完 $Mod\\ 12345$ 就好 程式碼 Accepted Code123456789101112131415161718#include &lt;bits/stdc++.h&gt;#define _ ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);using namespace std;int main()&#123; int up[10001]=&#123;1&#125;,left[10001]=&#123;1&#125;,right[10001]=&#123;1&#125;; int N; cin&gt;&gt;N; for(int i=1;i&lt;N;i++)&#123; up[i]=up[i-1]+left[i-1]+right[i-1]; left[i]=up[i-1]+left[i-1]; right[i]=up[i-1]+right[i-1]; up[i]%=12345; left[i]%=12345; right[i]%=12345; &#125; cout&lt;&lt;(up[N-1]+left[N-1]+right[N-1])%12345&lt;&lt;'\\n'; return 0;&#125; 後記 Afterword數字應該能再開大一點啊，還以為這題有什麼陷阱 = =如果沒有意外，下一篇應該是寫演講筆記以前演講聽一聽就算了，不過這次我想寫出來講者是誰？敬請期待","categories":[{"name":"解題區","slug":"解題區","permalink":"http://blog.yangjerry.tw/categories/解題區/"},{"name":"解題報告書 - ZeroJudge","slug":"解題區/解題報告書-ZeroJudge","permalink":"http://blog.yangjerry.tw/categories/解題區/解題報告書-ZeroJudge/"}],"tags":[{"name":"DP","slug":"DP","permalink":"http://blog.yangjerry.tw/tags/DP/"}]},{"title":"d635. 幸運777？luck","slug":"zj-d635","date":"2018-09-14T02:43:16.000Z","updated":"2018-09-14T05:04:31.517Z","comments":true,"path":"2018/09/14/zj-d635/","link":"","permalink":"http://blog.yangjerry.tw/2018/09/14/zj-d635/","excerpt":"題目 Problem題目連結：https://zerojudge.tw/ShowProblem?problemid=d635","text":"題目 Problem題目連結：https://zerojudge.tw/ShowProblem?problemid=d635 敘述 Description你說什麼？777=511？怎麼可能…？ 因為這裡是八進位的777轉換成10進位的511了～(好爛ˇ) 給你十進位的數字，請你把他們轉成八進位好嗎？ 輸入 Input每個測資點有多筆測資，請以EOF作為結束。每組測資一行，有整數n(0&lt;=n&lt;=511)，表示要轉換成八進位的數字最後出現小於0的整數表示測資結束。 &lt;所有出現的整數皆可以signed 32-bits int儲存&gt; 輸出 Output對於每一行測資請輸出整數n的八進位表示。對於最後一個小於0的整數，請輸出-1。 範例輸入 Sample Input12345277511123456-1 範例輸出 Sample Output12345425777173710-1 提示 Hint1.進位制轉換2.共三個測資點30%、35%、35%，第一個測資點即範例測資。 題解 Solution以EOF作為結束？最後出現小於0的整數表示測資結束？所以？ —— 圖源：GIPHY到底是我國文爛還是題目敘述爛？（好歹我大學國文門檻過了）有些人會用C++內建轉$8$進位的，但還是要知道概念 $10$進位的511_{(10)}會是 511_{(10)} = 5 * 10^2 + 1 * 10^1 + 1 * 10^0$8$進位的777_{(8)}會是 777_{(8)} = 7 * 8^2 + 7 * 8^1 + 7 * 8^0 = 511_{(10)}$8$進位的173_{(8)}會是 173_{(8)} = 1 * 8^2 + 7 * 8^1 + 3 * 8^0 = 123_{(10)}大致上不論是轉成$N$進位都差不多 $10$進位轉成$8$進位 先把數字 $MOD\\ 8$ 就可以求出$8$進位中的個位數$123\\%8=3$再把數字 $/\\ 8$ 後再 $MOD\\ 8$ 就可以求出$8$進位中的下個位數$123/8=15$$15\\%8=7$再把數字 $/\\ 8$ 後再 $MOD\\ 8$ 就可以求出$8$進位中的下個位數$15/8=1$$1\\%8=1$ 然後把數字倒敘輸出就可以拿到$1,7,3$ 如果可以EOF結尾，我就把負數自動設定為$-1$ 輸入$0$出來會是空白，所以還加了特判 程式碼 Accepted Code1234567891011121314151617181920212223242526#include &lt;bits/stdc++.h&gt;#define _ ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);using namespace std;int main()&#123; _ long long int enter; while(cin&gt;&gt;enter)&#123; if(enter&lt;0)&#123; cout&lt;&lt;\"-1\"&lt;&lt;'\\n'; continue; &#125; if(enter==0)&#123; cout&lt;&lt;\"0\"&lt;&lt;'\\n'; continue; &#125; int ans[10]=&#123;0&#125;,len=0; while(enter)&#123; ans[len++]+=enter%8; enter/=8; &#125; for(int i=len-1;i&gt;=0;i--) cout&lt;&lt;ans[i]; cout&lt;&lt;'\\n'; &#125; return 0;&#125; 後記 Afterword這題題目敘述真的是爛到吃了好幾個 WA寫 UVa 題目也有碰過一次，題目沒有寫清楚最後還是看了一下 AC Code 才知道在寫什麼","categories":[{"name":"解題區","slug":"解題區","permalink":"http://blog.yangjerry.tw/categories/解題區/"},{"name":"解題報告書 - ZeroJudge","slug":"解題區/解題報告書-ZeroJudge","permalink":"http://blog.yangjerry.tw/categories/解題區/解題報告書-ZeroJudge/"}],"tags":[{"name":"進位制","slug":"進位制","permalink":"http://blog.yangjerry.tw/tags/進位制/"}]},{"title":"超修？扛下去？演算法直接跳上去？","slug":"1071credit","date":"2018-09-12T05:51:00.000Z","updated":"2018-09-12T16:07:36.589Z","comments":true,"path":"2018/09/12/1071credit/","link":"","permalink":"http://blog.yangjerry.tw/2018/09/12/1071credit/","excerpt":"自從升到大學以來，說輕鬆嗎？好像也不是至少不需要對本科放太多心力，畢竟都是學過的 相比我同學，他們還是很強的，我學了程式也很久了，他們並沒有程式背景也就是說，我花了兩年理解的東西，我同學花了半年學完","text":"自從升到大學以來，說輕鬆嗎？好像也不是至少不需要對本科放太多心力，畢竟都是學過的 相比我同學，他們還是很強的，我學了程式也很久了，他們並沒有程式背景也就是說，我花了兩年理解的東西，我同學花了半年學完 大一簡略由於大一學期末我也加入了「師資培訓生」原本的128畢業學分，瞬間飆到158學分再加上學校又一堆看起來很（狗屎爛蛋）有用的畢業門檻 為了趕那些畢業門檻，大一就先把通識基本門檻達到（Ex.環境2學分以上、邏輯2學分以上，這種容易忽略的小門檻）再去修（躺分課）或興趣課 大一上加加減減就變成28學分（其實只有25學分，因為有暑假先修課3學分）大一下為了加入師培更容易，變成26學分 大一下修課時，我一直想要當助教，當助教前當然要先修過當然我也問了其他學長們、系主任的意見有些學長覺得可以、有些覺得要先去修資料結構（但我光打競賽就學了 一堆奇怪的 資料結構）但我問主任時，他就直接說「可以啊」連猶豫一下都沒有然後大一下學期末，我就選了……ㄏㄏㄏㄏㄏ還是張惠妹的《勇敢》？ 暑假助教暑假是有先修課，也剛好在徵助教、講師差不多就是練習教學、跟學弟妹互動 話說，我還忘記繳學費，差點不能註冊…… 大二開學大二把一些沒有選上的通識課換掉，選一選就變成26學分了演算法剛進去上課時，教授還問我怎麼選進來的（原本以前有擋修，但現在都拿掉了） 我覺得比較擔心的事，分組，畢竟在這裡只有學長姐，沒有同學不過有學長願意收留我，超好der（而且都是學霸等級） 第一次上機題目是河內塔問題當然，要學會怎麼分析問題、推出規律大致上就是這樣 至於迎新總召嗎？再說吧！又要再寫一篇……","categories":[{"name":"生活","slug":"生活","permalink":"http://blog.yangjerry.tw/categories/生活/"}],"tags":[{"name":"生活","slug":"生活","permalink":"http://blog.yangjerry.tw/tags/生活/"},{"name":"學分","slug":"學分","permalink":"http://blog.yangjerry.tw/tags/學分/"},{"name":"超修","slug":"超修","permalink":"http://blog.yangjerry.tw/tags/超修/"},{"name":"助教","slug":"助教","permalink":"http://blog.yangjerry.tw/tags/助教/"}]},{"title":"c311. PC:分組之塔","slug":"zj-c311","date":"2018-09-02T15:15:04.000Z","updated":"2018-09-02T16:41:16.660Z","comments":true,"path":"2018/09/02/zj-c311/","link":"","permalink":"http://blog.yangjerry.tw/2018/09/02/zj-c311/","excerpt":"題目 Problem題目連結：https://zerojudge.tw/ShowProblem?problemid=c311","text":"題目 Problem題目連結：https://zerojudge.tw/ShowProblem?problemid=c311 敘述 Description進到了這個房間，小風終於遇到第一個塔主，這個塔主精神有點疾病，他有超級多的部下，而他想要將這些人以91個人為單位分為一組，而多出來的人就要把他殺掉。然而他實在是太懶惰了，不想要自己算要殺掉多少人，於是他命令小風幫他算出人數，否則第一個先死的就是小風了。無奈小風的除法沒有學好，所以他算不出來。於是小風再次需要各位的幫忙，請算出塔主需要殺掉的人數。 輸入 Input輸入有多筆測資，並以EOF作為結尾。每一筆測資包含一個正整數n，代表塔主的部下人數。 10%的測資滿足n&lt;=10^940%的測資滿足n&lt;=10^18100%的測資滿足n&lt;=10^100000 輸出 Output對於每一筆輸入 請輸出塔主需要殺掉的人數 範例輸入 Sample Input123929391 範例輸出 Sample Output123120 提示 Hint題解 Solution如何判斷數字是不是$7$的倍數跟$13$的倍數當然是打開 Google 查啊（Ｘ） 7的倍數：由個位數起每三位數字一節，各奇數節的和與偶數節的和相減，其差是7的倍數。13的倍數：由個位數起每三位數字一節，各奇數節的和與偶數節的和相減，其差是13的倍數。（文字來源：https://leestar2018.blogspot.com/2016/09/113.html） 把數字長度補到$3$的倍數就可以算了 反正數字都一樣，就直接 $mod\\ 91$（繳交後3秒，回傳結果：WA）不好意思齁這三洨 —— 圖源：好色龍後來想想，我忘了重要關鍵點，因為只是判斷7的倍數或13的倍數，可以不用管正負但！如果是 $mod$ 就要區分正負關係了 正數正常 $mod\\ 91$ 就好負數要先 $mod\\ 91$ 再加 $91$ 再 $mod\\ 91$不知道為什麼的人請去 Google 負數取模 程式碼 Accepted Code1234567891011121314151617181920212223242526272829303132#include &lt;bits/stdc++.h&gt;#define _ ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);using namespace std;int main()&#123; _ string enter;//192936162 55 while(cin&gt;&gt;enter)&#123; int total=0; int s=enter.length()%3; if(s==1) enter=\"00\"+enter; else if(s==2) enter=\"0\"+enter; int p=0; for(int i=enter.length()-3;i&gt;=0;i-=3)&#123; if(p%2)&#123; total-=((enter[i]-'0')*100+(enter[i+1]-'0')*10+(enter[i+2]-'0')); &#125; else&#123; total+=((enter[i]-'0')*100+(enter[i+1]-'0')*10+(enter[i+2]-'0')); &#125; p++; &#125; int mo=total%91; if(total&lt;0) printf(\"%d\\n\",(91+mo)%91); else printf(\"%d\\n\",mo); &#125; return 0;&#125; 後記 Afterword異想不到的事，這題我是第一個 $0ms$ 完成2018/09/03 截圖紀念畢竟 ZeroJudge 有改版過效能應該有提升但，套用憲哥說的一句話Who Cares？ —— 影像版權：《綜藝大熱門》 不過我倒是好奇，畢竟這題曾經是比賽題如果是在比賽期間，你要怎麼讓這題拿到AC呢？","categories":[{"name":"解題區","slug":"解題區","permalink":"http://blog.yangjerry.tw/categories/解題區/"},{"name":"解題報告書 - ZeroJudge","slug":"解題區/解題報告書-ZeroJudge","permalink":"http://blog.yangjerry.tw/categories/解題區/解題報告書-ZeroJudge/"}],"tags":[{"name":"負數取Mod","slug":"負數取Mod","permalink":"http://blog.yangjerry.tw/tags/負數取Mod/"},{"name":"倍數判斷法","slug":"倍數判斷法","permalink":"http://blog.yangjerry.tw/tags/倍數判斷法/"}]},{"title":"d708. 小王的积木","slug":"zj-d708","date":"2018-09-02T07:35:37.000Z","updated":"2018-10-19T16:49:22.115Z","comments":true,"path":"2018/09/02/zj-d708/","link":"","permalink":"http://blog.yangjerry.tw/2018/09/02/zj-d708/","excerpt":"題目 Problem題目連結：https://zerojudge.tw/ShowProblem?problemid=d708","text":"題目 Problem題目連結：https://zerojudge.tw/ShowProblem?problemid=d708 敘述 Description自从小涵去商店买了那么多的积木，小王也去买了一大堆。不过小王比较喜欢数学，所以他买的积木上写的只有数字；因为他认为偶数比较吉利，于是他买的积木是全是偶数快的。听说小涵少了一个积木，他便整理了一下他的，可是他发现他也少了一块积木…（很无语吧…）上次他见你已经帮小涵找到了积木，于是就请你来帮他找找，而且他还告诉你：“我的积木比小涵的好找很多。”半信半疑的你决定帮帮他。 輸入 Input只有一笔测资。 测资末尾会有多余信息，忽略就好。//感谢asas提醒。2015/8/6 输入数据的第一行，是小王告诉你他的积木个数N（N一定是一个正偶数，而且2&lt;=N&lt;=1000000，你看他的积木可没有小涵的多）。接下来每行有（N-1）个数字，表示小王每个积木上的数字（可以用longint存储）。 輸出 Output对于每组测资，输出小王缺少的那块积木的数字。 範例輸入 Sample Input1234567881232344 範例輸出 Sample Output11 提示 Hint提示 ：小涵的积木的AC代码可以直接AC本题。但我希望您可以想想另一种解答方式，想想数字有什么特殊性，参考时间复杂度$O(n)$，空间复杂度$O(1)$。 还有一种算法时间复杂度$O(n\\log{n})$，空间复杂度$O(n)$的… 如果哪种语言直接输入都超时的话，请与我联系，我将调整时间限制。 //感谢ck99126指出题目存在的一些问题！ 題解 Solution1.直接暴力做無庸置疑，跟 C++ Map 一起使用 程式碼 I Accepted Code I123456789101112131415161718192021222324#include &lt;bits/stdc++.h&gt;#define _ ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);using namespace std;int main()&#123; _ long long int N; cin&gt;&gt;N; map&lt;int,int&gt; m; long long int A; for(int i=0;i&lt;N-1;i++)&#123; cin&gt;&gt;A; map&lt;int,int&gt;::iterator it=m.find(A); if(it==m.end()) m[A]=1; else m[A]++; &#125; for(auto it=m.begin();it!=m.end();it++) if(it-&gt;second%2)&#123; cout&lt;&lt;it-&gt;first&lt;&lt;'\\n'; break; &#125; return 0;&#125; 2.XORc651. 三、區間xor(RXQ) 這篇文章有寫過有關 XOR 的性質 用**歸零律**跟**自反性**就可以完成了 程式碼 II Accepted Code II1234567891011121314#include &lt;stdio.h&gt;int main()&#123; int N,ans=0; scanf(\"%d\",&amp;N); N--; while(N--)&#123; int S; scanf(\"%d\",&amp;S); ans^=S; &#125; printf(\"%d\\n\",ans); return 0;&#125; 後記 Afterword很神奇吧，這樣複雜度都壓下去了但後面有些東西是用HTML補上去的不曉得是不是 Hexo 出 BUG 了有些正常的 Markdown 無法解析成功就這樣吧","categories":[{"name":"解題區","slug":"解題區","permalink":"http://blog.yangjerry.tw/categories/解題區/"},{"name":"解題報告書 - ZeroJudge","slug":"解題區/解題報告書-ZeroJudge","permalink":"http://blog.yangjerry.tw/categories/解題區/解題報告書-ZeroJudge/"}],"tags":[{"name":"XOR","slug":"XOR","permalink":"http://blog.yangjerry.tw/tags/XOR/"}]},{"title":"c651. 三、區間xor(RXQ)","slug":"zj-c651","date":"2018-09-01T16:41:17.000Z","updated":"2018-09-02T09:39:57.626Z","comments":true,"path":"2018/09/02/zj-c651/","link":"","permalink":"http://blog.yangjerry.tw/2018/09/02/zj-c651/","excerpt":"題目 Problem題目連結：https://zerojudge.tw/ShowProblem?problemid=c651","text":"題目 Problem題目連結：https://zerojudge.tw/ShowProblem?problemid=c651 敘述 Description給你一段 $N$ 個正整數的序列 $a_1∼a_N$ ，請你執行 $Q$ 筆操作。 輸入 Input第一行有兩個正整數 $N,Q$ 。 第二行有 $N$ 個非負整數 $a_i$ 。 接下來有 $Q$ 行，每行代表一個操作。 如果是 $0\\ l\\ r$ ，代表詢問 $[l,r]$ 區間的每個數字做 $xor$ 運算之後的值。 如果是 $1\\ x\\ v$ ，代表將 $a_x$ 置換成 $v$ 。 ※ $xor$ 即代表C++中的位元運算「^」。 輸出 Output對於每個詢問，輸出詢問區間的每個數字做 $xor$ 運算之後的值。 範例輸入 Sample Input123455 316 9 1 5 30 1 51 1 50 1 5 範例輸出 Sample Output123011 提示 Hint本題共有四組測試題組，條件限制如下所示。每一組可有一或多筆測試資料，該組所有測試資料皆需答對才會獲得該組分數。cout &lt;&lt; (16^9^1^5^3) &lt;&lt; “\\n”; 輸出即為30。 觀察一下 xor 的性質，不然這題拿不滿XD。輸入卡很緊，記得加優化。 題解 Solution遇到一般的RMQ+單點修改問題，通常有幾種解題方式 線段樹 Segment Tree 二元索引樹（樹狀樹组） Binary Index Tree (Fenwick tree)不過這題時限只有$0.5$秒如果用前綴 $XOR$ 單點修改變成$O(N)$如果用線段樹遞迴查詢可能會有點慢（有實做過，只有$72\\%$，其他的被TLE） 這題可以使用BIT，也就是二元索引樹，但要如何使用呢？（以下把二元索引樹 簡稱 BIT） XOR 真值表＆性質 $A$ $B$ $A⊕B$ $0$ $0$ $0$ $1$ $0$ $1$ $0$ $1$ $1$ $1$ $1$ $0$ 恆等律：$X⊕0=X$歸零律：$X⊕X=0$自反性：$A⊕B⊕B=A⊕(B⊕B)=A⊕0=A$ 其中的歸零律跟自反性就是我們要使用的 拿到BIT的模板應該都是求區間和 假設我們要求$[L,R]$的區間和是不是只要$sum(R)-sum(L-1)$？ 這題改成區間 XORBIT 初始化就改成 XOR（程式碼 Line 15）然後把求前綴和的 $+$ 改成 XOR（程式碼 Line 9）就變成 前綴 XOR 了 查詢只要輸出 $xxor(R)⊕xxor(L-1)$（程式碼 Line 37） 單點修改呢？先把原本的數字跟要變成的數字做 XOR 變成 $val$（程式碼 Line 40）利用歸零律跟自反性後面需要更新的數字，統一跟 $val$ 做 XOR單點修改就完成了 程式碼 Accepted Code12345678910111213141516171819202122232425262728293031323334353637383940414243444546#include &lt;bits/stdc++.h&gt;#define _ ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);#define lowbit(x) ((x)&amp;(-x))using namespace std;const int MAXN = 1000000+2;int Origin[MAXN+1]=&#123;0&#125;;int BITS[MAXN+1]=&#123;0&#125;;int N,Q;int xxor(int x)&#123; int ans=0; for(;x;x-=lowbit(x)) ans^=BITS[x]; return ans;&#125;void init(int n) &#123; for(int x = 1; x &lt;= n; ++x) &#123; BITS[x] = Origin[x]; int y = x - lowbit(x); for(int i = x-1; i &gt; y; i -= lowbit(i)) BITS[x] ^= BITS[i]; &#125; &#125;void update(int x,int val)&#123; for(int i=x;i&lt;=N;i+=lowbit(i)) BITS[i]^=val;&#125;int main()&#123; _ cin&gt;&gt;N&gt;&gt;Q; for(int i=1;i&lt;=N;i++) cin&gt;&gt;Origin[i]; init(N); while(Q--)&#123; int choice,x,y; cin&gt;&gt;choice&gt;&gt;x&gt;&gt;y; if(choice==0)&#123; cout&lt;&lt;(xxor(y)^xxor(x-1))&lt;&lt;'\\n'; &#125; else&#123; int OO=Origin[x]^y; Origin[x]=y; update(x,OO); &#125; &#125; return 0;&#125; 後記 Afterword每次做到有關 XOR 的題型都讓我想到有一題原本 時間 $O(N\\log{N})$ 空間 $O(N)$最後複雜度可以壓在 時間 $O(N)$ 空間 $O(1)$下一篇就來寫這題的報告書","categories":[{"name":"解題區","slug":"解題區","permalink":"http://blog.yangjerry.tw/categories/解題區/"},{"name":"解題報告書 - ZeroJudge","slug":"解題區/解題報告書-ZeroJudge","permalink":"http://blog.yangjerry.tw/categories/解題區/解題報告書-ZeroJudge/"}],"tags":[{"name":"Fenwick Tree","slug":"Fenwick-Tree","permalink":"http://blog.yangjerry.tw/tags/Fenwick-Tree/"},{"name":"Binary Index Tree","slug":"Binary-Index-Tree","permalink":"http://blog.yangjerry.tw/tags/Binary-Index-Tree/"},{"name":"XOR","slug":"XOR","permalink":"http://blog.yangjerry.tw/tags/XOR/"}]},{"title":"c453. TOI2003 第二題：疊羅漢","slug":"zj-c453","date":"2018-08-31T07:29:57.000Z","updated":"2018-09-02T04:42:34.820Z","comments":true,"path":"2018/08/31/zj-c453/","link":"","permalink":"http://blog.yangjerry.tw/2018/08/31/zj-c453/","excerpt":"題目 Problem題目連結：https://zerojudge.tw/ShowProblem?problemid=c453","text":"題目 Problem題目連結：https://zerojudge.tw/ShowProblem?problemid=c453 敘述 Description 某特技團經常表演疊羅漢的節目。表演時通常在最底層會先站好一排連續的 n 個人，然後在任意連續兩人的肩膀上面便可支撐另一個人站在這兩個人的上一層。在第二層如果有連續兩人的話，當然可繼續往第三層疊上一個人，以此類推。為了增加趣味性，有時會組合出不同的型態展現在觀眾的眼前。舉例來說，如果 n=3，也就是說底層共有 3 個人，那麼就有下列 5 種不同的組合。 如果 n=4，也就是說底層共有 4 個人，那麼你也可以列舉一下，便可知道共有下列 14 種不同的組合。現在針對不同的 n 值，請你撰寫一個程式來計算共有幾種不同的組合？ 輸入 Input第一行有一個正整數 n，1 ≤ n ≤ 20。 輸出 Output請輸出共有幾種不同的組合。 範例輸入 Sample Input12345//範例輸入一3//範例輸入二4 範例輸出 Sample Output12345//範例輸出一5//範例輸出二14 提示 Hint題解 Solution動態規劃 Dynamic Programming感覺這題很DP，不過 oToToT 大大真的寫出了 DP 算式： 令$dp[i][j]$代表第$i$斜排他的長度要是$j$時的方法數$dp[i][j]=\\sum_{k=j-1}^{i-1}dp[i-1][k]$因為會發現若是這裡要擺長度為$j$那前面最少要擺長度$j-1$，所以可以枚舉前一斜條擺放的數量來計算這個狀態的方法數。而對於n個斜條的總方法數，只要再枚舉最後一斜條有幾個人就好了。 我果然很低端，回我的當下我真的看不懂QQ 卡特蘭數 Catalan Number（至於為何會想到卡特蘭數，請滑到後記）這是我理解的版本，連結 $C(0,0)=1$$C(1,1)=C(0,0)$$C(2,2)=C(1,0)+C(1,1)$$C(3,3)=C(2,0)+C(2,1)+C(2,2)$$C(4,4)=C(3,0)+C(3,1)+C(3,2)+C(3,3)$…$C(N,N)=C(N-1,0)+C(N-1,1)+…+C(N-1,N-1)$ 可以把這些想像成 $N$層上面$N-1-0$層有幾種組合$N$層上面$N-1-1$層有幾種組合…$N$層上面$N-1-i$層有幾種組合…$N$層上面$1$層有幾種組合$N$層上面$0$層有幾種組合再加上 涂家銘 大大提供給我參考的圖：稍微轉一轉是不是就變成高中熟悉的最短路徑組合呢？ 程式碼 Accepted Code123456789101112131415161718192021222324#include &lt;bits/stdc++.h&gt;#define _ ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);using namespace std;long long int catalan(long long int N)&#123; long long int n2=2*N; long long int ans=1; for(long long int i=N+1;i&lt;=n2;i++)&#123; ans*=i; ans/=(i-N); &#125; ans/=(N+1); return ans;&#125;int main()&#123; _ long long int query[21]=&#123;0,1&#125;; for(long long int i=1;i&lt;21;i++)&#123; query[i]=catalan(i); &#125; int N; cin&gt;&gt;N; cout&lt;&lt;query[N]&lt;&lt;'\\n'; return 0;&#125; 後記 Afterword這題我一開始打開 Google 搜尋「0 1 2 5 14 OEIS」（我認為0位是0種，所以一開始打0）作弊開好開滿但沒想到一打開就是傳說中的卡特蘭數列只有聽到「清大程式解題營」的 旺陽學長 提到過但沒有寫過這種題目 不過 涂家銘 大大表示： 幫社團出練習賽題目其中一題用 DP 做會 TLE（練習賽也太狠了吧QQ） 的確，畢竟這題的最大值$N=20$，如果$N$更大，有機會爆 TLE 了","categories":[{"name":"解題區","slug":"解題區","permalink":"http://blog.yangjerry.tw/categories/解題區/"},{"name":"解題報告書 - ZeroJudge","slug":"解題區/解題報告書-ZeroJudge","permalink":"http://blog.yangjerry.tw/categories/解題區/解題報告書-ZeroJudge/"}],"tags":[{"name":"建表","slug":"建表","permalink":"http://blog.yangjerry.tw/tags/建表/"},{"name":"卡特蘭數","slug":"卡特蘭數","permalink":"http://blog.yangjerry.tw/tags/卡特蘭數/"}]},{"title":"a625. 5. Overhanging Cards","slug":"zj-a625","date":"2018-08-30T12:04:05.000Z","updated":"2018-08-30T14:42:38.454Z","comments":true,"path":"2018/08/30/zj-a625/","link":"","permalink":"http://blog.yangjerry.tw/2018/08/30/zj-a625/","excerpt":"題目 Problem題目連結：https://zerojudge.tw/ShowProblem?problemid=a625","text":"題目 Problem題目連結：https://zerojudge.tw/ShowProblem?problemid=a625 敘述 Description你可以把一疊的卡片凸出桌子的邊緣多遠呢？如果你有一張卡，你最大可以凸出卡片長度的一半。有兩張卡時，你可以把上面那張的一半凸出下面的那張，而下面的那張則有三分之一凸出桌子的邊緣，總凸出長度則為$ 1/2 + 1/3 = 5/6 $張卡片長度。總之，你可以把$ n $張卡片凸出$ 1/2 + 1/3 + 1/4 + … + 1/(n+1) $張卡片的長度，其中最上面那張凸出$ 1/2 $於第二張的外面，第二張凸出$ 1/3 $於第三張的外面，第三張凸出$ 1/4$，以此類推，最底下那張則凸出$ 1/(n+1)$。如下圖所示。 輸入 Input每筆測資一行，含有一個正浮點數 c (代表所要凸出的總長度)，其值最小為 0.01，最大為 5.20；這個數含有三位數字。 輸出 Output輸出要達成所需的凸出長度最少需要幾張卡片。請參照範例輸出的格式。 範例輸入 Sample Input12341.003.710.045.19 範例輸出 Sample Output12343 card(s)61 card(s)1 card(s)273 card(s) 提示 Hint題解 Solution$1$張卡片長度為$1/2$$2$張卡片長度為$1/2+1/3$$3$張卡片長度為$1/2+1/3+1/4$$…$以此類推$…$$n$張卡片長度為$1/2+1/3+1/4+…+1/(n+1)$先建表，最大卡片數頂多$276$張最後再用二分搜尋找卡片數就好 程式碼 Accepted Code1234567891011121314151617181920212223242526#include &lt;bits/stdc++.h&gt;#define _ ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);using namespace std;int main()&#123; _ double query[277]=&#123;0&#125;,a=0.0; for(int i=1;a&lt;=5.20;i++)&#123; a+=(1.0/(i+1)); query[i]=a; &#125; double enter; while(cin&gt;&gt;enter)&#123; int l=0,r=277; while(l+1&lt;r)&#123; int mid=(l+r)/2; if(enter&gt;query[mid])&#123; l=mid; &#125; else&#123; r=mid; &#125; &#125; cout&lt;&lt;l+1&lt;&lt;\" card(s)\"&lt;&lt;'\\n'; &#125; return 0;&#125; 後記 Afterword這一題在 ICPC Live Archive 跟 POJ 找得到ICPC Live Archive 題目代碼：2294 - HangoverPOJ 題目代碼：1003 - HangoverZeroJudge 拿到 AC 之後就到 ICPC Live Archive 繳交，但直接被 WA 掉我還以為是我二分搜寫錯但仔細看了它們的 Input 後才知道程式輸入$0.00$才會結束改完這題就 AC 了","categories":[{"name":"解題區","slug":"解題區","permalink":"http://blog.yangjerry.tw/categories/解題區/"},{"name":"解題報告書 - ZeroJudge","slug":"解題區/解題報告書-ZeroJudge","permalink":"http://blog.yangjerry.tw/categories/解題區/解題報告書-ZeroJudge/"}],"tags":[{"name":"建表","slug":"建表","permalink":"http://blog.yangjerry.tw/tags/建表/"},{"name":"二分搜","slug":"二分搜","permalink":"http://blog.yangjerry.tw/tags/二分搜/"}]},{"title":"c700. 壞掉的隊列(queue)","slug":"zj-c700","date":"2018-08-29T13:34:05.000Z","updated":"2018-08-29T16:29:27.752Z","comments":true,"path":"2018/08/29/zj-c700/","link":"","permalink":"http://blog.yangjerry.tw/2018/08/29/zj-c700/","excerpt":"題目 Problem題目連結：https://www.zerojudge.tw/ShowProblem?problemid=c700","text":"題目 Problem題目連結：https://www.zerojudge.tw/ShowProblem?problemid=c700 敘述 Description「測資中有若干行輸入，請你實作 queue 的幾種操作： push $X(0≤X&lt;2^{32})$: 將 $X$ 加入隊列 pop: 輸出隊列最前方的數字並刪除，你可以假設此時隊列不是空的」 小W本來想隨便寫寫交差了事，卻發現 STL 的 queue 壞了！ 再看看題目，原來底下附註一行小字：請用兩個 stack 完成這題。 於是小W希望你能用以下代號寫一張紙條告訴他該怎麼做。 1: 讀入 push X 並將 X 放到堆疊一 2: 讀入 push X 並將 X 放到堆疊二 3: 讀入 pop ，將堆疊一頂端的元素輸出並刪除 4: 讀入 pop ，將堆疊二頂端的元素輸出並刪除 5: 將堆疊一頂端的元素取出並放至堆疊二 6: 將堆疊二頂端的元素取出並放至堆疊一 如果取出元素時堆疊為空或者讀入 push/pop 的順序與輸入測資不符，你會害小W拿到一個WA。 輸入 Input見題目和範例。 輸出 Output輸出一行你要傳給小W的內容。 範例輸入 Sample Input1234push 111push 222poppop 範例輸出 Sample Output1234567891011121314範例輸出一:1234範例輸出二:12544範例輸出三:1143範例輸出四:1313範例輸出五:1133 提示 Hint輸入至多 100000 行。 以範例輸入而言，範例輸出一、二會拿到AC。 範例輸出三會拿到WA，因為操作4時堆疊二是空的。 範例輸出四也會拿到WA，因為輸入順序是push-&gt;push-&gt;pop-&gt;pop，但是1313的操作分別為push-&gt;pop-&gt;push-&gt;pop。 範例輸出五的操作過程完全合法，但依據先進先出的原則，111應該比222早離開queue，若以1133的方式操作，222將比111早輸出，所以會拿到WA。 題解 Solution第一篇解題報告書就給這題啦！ Hackerrank 可以找到這個問題（這題就是要強制你使用 Stack）實作 Queue 需要用到兩個 Stack分別命名為$S1$跟$S2$ $S1$用來記錄輸入的東西$S2$就是把$S1$的內容顛倒過來 $push$的時候先放入$S1$裡面$pop$的時候先檢查$S2$有沒有東西 如果有，$S2$的頂端$pop$掉如果沒有，先$S1$所有內容$pop$到$S2$，再讓$S2$的頂端$pop$掉 了解怎麼用 Stack 實作 Queue 就可以回到這題 依照上面的做法，可以使用代號$1,4,5$的組合或$2,3,6$的組合來完成這題並且用$2$個整數紀錄$2$個 Stack 的內容數量分別命名為$x_1$跟$x_2$ 如果要$push$，就輸出$1$，把$x_1+1$如果要$pop$，就先檢查$x_2$是否大於$0$ 如果有，就輸出$4$，把$x_2-1$如果沒有，先輸出$x_1$個$5$，讓$x_2$加上$x_1$，並且把$x_1$歸零，再輸出$4$，把$x_2-1$ 這樣就可以來寫 Code 啦！ 程式碼 Accepted Code12345678910111213141516171819202122232425262728293031323334#include &lt;bits/stdc++.h&gt;#define _ ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);using namespace std;int main()&#123; _ string enter; int total1=0,total2=0; while(cin&gt;&gt;enter)&#123; if(enter==\"push\")&#123; long long int a; cin&gt;&gt;a; total1++; cout&lt;&lt;1; &#125; else&#123; if(total2)&#123; cout&lt;&lt;4; total2--; &#125; else&#123; for(int i=0;i&lt;total1;i++)&#123; cout&lt;&lt;5; &#125; total2+=total1; if(total2)&#123; cout&lt;&lt;4; total2--; &#125; total1=0; &#125; &#125; &#125; return 0;&#125; 後記 Afterword這題有沒有其他解法？這題是 Special Judge，應該是有吧，但……我沒有想到上面這個解法是算簡單啦如果有更好的解法，我還會再寫上去啦！","categories":[{"name":"解題區","slug":"解題區","permalink":"http://blog.yangjerry.tw/categories/解題區/"},{"name":"解題報告書 - ZeroJudge","slug":"解題區/解題報告書-ZeroJudge","permalink":"http://blog.yangjerry.tw/categories/解題區/解題報告書-ZeroJudge/"}],"tags":[{"name":"Stack","slug":"Stack","permalink":"http://blog.yangjerry.tw/tags/Stack/"},{"name":"Queue","slug":"Queue","permalink":"http://blog.yangjerry.tw/tags/Queue/"},{"name":"Special Judge","slug":"Special-Judge","permalink":"http://blog.yangjerry.tw/tags/Special-Judge/"}]},{"title":"Hello Hexo! Test By Jerry Yang","slug":"hello-world","date":"2018-08-26T06:30:49.123Z","updated":"2018-08-30T14:43:25.866Z","comments":true,"path":"2018/08/26/hello-world/","link":"","permalink":"http://blog.yangjerry.tw/2018/08/26/hello-world/","excerpt":"先恭喜亞運台灣 🇹🇼 奪得金牌網路中文 也很大方的免費讓人註冊.tw","text":"先恭喜亞運台灣 🇹🇼 奪得金牌網路中文 也很大方的免費讓人註冊.tw於是，這個 Blog 就誕生了第一次用 Hexo 架設用 Markdown 來寫寫看瑣碎事 首頁嘛……晚點再把坑補上寫到這裡就這樣吧！之後再補","categories":[{"name":"Hello World","slug":"Hello-World","permalink":"http://blog.yangjerry.tw/categories/Hello-World/"}],"tags":[]}]}