{"meta":{"title":"Jerry Yang's Blog","subtitle":null,"description":null,"author":"Jerry Yang","url":"http://blog.yangjerry.tw"},"pages":[],"posts":[{"title":"a625. 5. Overhanging Cards","slug":"zj-a625","date":"2018-08-30T12:04:05.000Z","updated":"2018-08-30T13:48:24.002Z","comments":true,"path":"2018/08/30/zj-a625/","link":"","permalink":"http://blog.yangjerry.tw/2018/08/30/zj-a625/","excerpt":"題目 Problem題目連結：https://zerojudge.tw/ShowProblem?problemid=a625","text":"題目 Problem題目連結：https://zerojudge.tw/ShowProblem?problemid=a625 敘述 Description你可以把一疊的卡片凸出桌子的邊緣多遠呢？如果你有一張卡，你最大可以凸出卡片長度的一半。有兩張卡時，你可以把上面那張的一半凸出下面的那張，而下面的那張則有三分之一凸出桌子的邊緣，總凸出長度則為$ 1/2 + 1/3 = 5/6 $張卡片長度。總之，你可以把$ n $張卡片凸出$ 1/2 + 1/3 + 1/4 + … + 1/(n+1) $張卡片的長度，其中最上面那張凸出$ 1/2 $於第二張的外面，第二張凸出$ 1/3 $於第三張的外面，第三張凸出$ 1/4$，以此類推，最底下那張則凸出$ 1/(n+1)$。如下圖所示。 輸入 Input每筆測資一行，含有一個正浮點數 c (代表所要凸出的總長度)，其值最小為 0.01，最大為 5.20；這個數含有三位數字。 輸出 Output輸出要達成所需的凸出長度最少需要幾張卡片。請參照範例輸出的格式。 範例輸入 Sample Input12341.003.710.045.19 範例輸出 Sample Output12343 card(s)61 card(s)1 card(s)273 card(s) 提示 Hint題解 Solution$1$張卡片長度為$1/2$$2$張卡片長度為$1/2+1/3$$3$張卡片長度為$1/2+1/3+1/4$$…$以此類推$…$$n$張卡片長度為$1/2+1/3+1/4+…+1/(n+1)$先建表，最大卡片數頂多$276$張最後再用二分搜尋找卡片數就好 程式碼 Accepted Code1234567891011121314151617181920212223242526#include &lt;bits/stdc++.h&gt;#define _ ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);using namespace std;int main()&#123; _ double query[277]=&#123;0&#125;,a=0.0; for(int i=1;a&lt;=5.20;i++)&#123; a+=(1.0/(i+1)); query[i]=a; &#125; double enter; while(cin&gt;&gt;enter)&#123; int l=0,r=277; while(l+1&lt;r)&#123; int mid=(l+r)/2; if(enter&gt;query[mid])&#123; l=mid; &#125; else&#123; r=mid; &#125; &#125; cout&lt;&lt;l+1&lt;&lt;\" card(s)\"&lt;&lt;'\\n'; &#125; return 0;&#125; 後記 Afterword這一題在 ICPC Live Archive 找得到題目代碼：2294 - HangoverZeroJudge 拿到 AC 之後就到 ICPC Live Archive 繳交，但直接被 WA 掉我還以為是我二分搜寫錯但仔細看了它們的 Input 後才知道程式輸入$0.00$才會結束改完這題就 AC 了","categories":[{"name":"解題區","slug":"解題區","permalink":"http://blog.yangjerry.tw/categories/解題區/"},{"name":"解題報告書 - ZeroJudge","slug":"解題區/解題報告書-ZeroJudge","permalink":"http://blog.yangjerry.tw/categories/解題區/解題報告書-ZeroJudge/"}],"tags":[{"name":"建表","slug":"建表","permalink":"http://blog.yangjerry.tw/tags/建表/"},{"name":"二分搜","slug":"二分搜","permalink":"http://blog.yangjerry.tw/tags/二分搜/"}]},{"title":"c700. 壞掉的隊列(queue)","slug":"zj-c700","date":"2018-08-29T13:34:05.000Z","updated":"2018-08-29T16:29:27.752Z","comments":true,"path":"2018/08/29/zj-c700/","link":"","permalink":"http://blog.yangjerry.tw/2018/08/29/zj-c700/","excerpt":"題目 Problem題目連結：https://www.zerojudge.tw/ShowProblem?problemid=c700","text":"題目 Problem題目連結：https://www.zerojudge.tw/ShowProblem?problemid=c700 敘述 Description「測資中有若干行輸入，請你實作 queue 的幾種操作： push $X(0≤X&lt;2^{32})$: 將 $X$ 加入隊列 pop: 輸出隊列最前方的數字並刪除，你可以假設此時隊列不是空的」 小W本來想隨便寫寫交差了事，卻發現 STL 的 queue 壞了！ 再看看題目，原來底下附註一行小字：請用兩個 stack 完成這題。 於是小W希望你能用以下代號寫一張紙條告訴他該怎麼做。 1: 讀入 push X 並將 X 放到堆疊一 2: 讀入 push X 並將 X 放到堆疊二 3: 讀入 pop ，將堆疊一頂端的元素輸出並刪除 4: 讀入 pop ，將堆疊二頂端的元素輸出並刪除 5: 將堆疊一頂端的元素取出並放至堆疊二 6: 將堆疊二頂端的元素取出並放至堆疊一 如果取出元素時堆疊為空或者讀入 push/pop 的順序與輸入測資不符，你會害小W拿到一個WA。 輸入 Input見題目和範例。 輸出 Output輸出一行你要傳給小W的內容。 範例輸入 Sample Input1234push 111push 222poppop 範例輸出 Sample Output1234567891011121314範例輸出一:1234範例輸出二:12544範例輸出三:1143範例輸出四:1313範例輸出五:1133 提示 Hint輸入至多 100000 行。 以範例輸入而言，範例輸出一、二會拿到AC。 範例輸出三會拿到WA，因為操作4時堆疊二是空的。 範例輸出四也會拿到WA，因為輸入順序是push-&gt;push-&gt;pop-&gt;pop，但是1313的操作分別為push-&gt;pop-&gt;push-&gt;pop。 範例輸出五的操作過程完全合法，但依據先進先出的原則，111應該比222早離開queue，若以1133的方式操作，222將比111早輸出，所以會拿到WA。 題解 Solution第一篇解題報告書就給這題啦！ Hackerrank 可以找到這個問題（這題就是要強制你使用 Stack）實作 Queue 需要用到兩個 Stack分別命名為$S1$跟$S2$ $S1$用來記錄輸入的東西$S2$就是把$S1$的內容顛倒過來 $push$的時候先放入$S1$裡面$pop$的時候先檢查$S2$有沒有東西 如果有，$S2$的頂端$pop$掉如果沒有，先$S1$所有內容$pop$到$S2$，再讓$S2$的頂端$pop$掉 了解怎麼用 Stack 實作 Queue 就可以回到這題 依照上面的做法，可以使用代號$1,4,5$的組合或$2,3,6$的組合來完成這題並且用$2$個整數紀錄$2$個 Stack 的內容數量分別命名為$x_1$跟$x_2$ 如果要$push$，就輸出$1$，把$x_1+1$如果要$pop$，就先檢查$x_2$是否大於$0$ 如果有，就輸出$4$，把$x_2-1$如果沒有，先輸出$x_1$個$5$，讓$x_2$加上$x_1$，並且把$x_1$歸零，再輸出$4$，把$x_2-1$ 這樣就可以來寫 Code 啦！ 程式碼 Accepted Code12345678910111213141516171819202122232425262728293031323334#include &lt;bits/stdc++.h&gt;#define _ ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);using namespace std;int main()&#123; _ string enter; int total1=0,total2=0; while(cin&gt;&gt;enter)&#123; if(enter==\"push\")&#123; long long int a; cin&gt;&gt;a; total1++; cout&lt;&lt;1; &#125; else&#123; if(total2)&#123; cout&lt;&lt;4; total2--; &#125; else&#123; for(int i=0;i&lt;total1;i++)&#123; cout&lt;&lt;5; &#125; total2+=total1; if(total2)&#123; cout&lt;&lt;4; total2--; &#125; total1=0; &#125; &#125; &#125; return 0;&#125; 後記 Afterword這題有沒有其他解法？這題是 Special Judge，應該是有吧，但……我沒有想到上面這個解法是算簡單啦如果有更好的解法，我還會再寫上去啦！","categories":[{"name":"解題區","slug":"解題區","permalink":"http://blog.yangjerry.tw/categories/解題區/"},{"name":"解題報告書 - ZeroJudge","slug":"解題區/解題報告書-ZeroJudge","permalink":"http://blog.yangjerry.tw/categories/解題區/解題報告書-ZeroJudge/"}],"tags":[{"name":"Stack","slug":"Stack","permalink":"http://blog.yangjerry.tw/tags/Stack/"},{"name":"Queue","slug":"Queue","permalink":"http://blog.yangjerry.tw/tags/Queue/"},{"name":"Special Judge","slug":"Special-Judge","permalink":"http://blog.yangjerry.tw/tags/Special-Judge/"}]},{"title":"Hello Hexo! Test By Jerry Yang","slug":"hello-world","date":"2018-08-26T06:30:49.123Z","updated":"2018-08-29T16:27:40.778Z","comments":true,"path":"2018/08/26/hello-world/","link":"","permalink":"http://blog.yangjerry.tw/2018/08/26/hello-world/","excerpt":"先恭喜亞運台灣 🇹🇼 奪得金牌網路中文 也很大方的免費讓人註冊.tw","text":"先恭喜亞運台灣 🇹🇼 奪得金牌網路中文 也很大方的免費讓人註冊.tw於是，這個 Blog 就誕生了第一次用 Hexo 架設用 Markdown 來寫寫看瑣碎事 首頁嘛……晚點再把坑補上寫到這裡就這樣吧！之後再補","categories":[{"name":"Test","slug":"Test","permalink":"http://blog.yangjerry.tw/categories/Test/"}],"tags":[]}]}