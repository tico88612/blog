{"meta":{"title":"Jerry Yang's Blog","subtitle":null,"description":null,"author":"Jerry Yang","url":"https://blog.yangjerry.tw","root":"/"},"pages":[{"title":"about","date":"2020-06-02T16:00:00.000Z","updated":"2020-06-03T07:56:23.227Z","comments":true,"path":"about/index.html","permalink":"https://blog.yangjerry.tw/about/index.html","excerpt":"","text":"個人資料"}],"posts":[{"title":"Dev-C++ 不就是個很古老的 IDE？蛤？它又更新了？","slug":"devcpp-6","date":"2020-11-25T04:49:57.000Z","updated":"2020-11-28T03:17:14.667Z","comments":true,"path":"2020/11/25/devcpp-6/","link":"","permalink":"https://blog.yangjerry.tw/2020/11/25/devcpp-6/","excerpt":"寫這篇文章的意義是幫忙把新版的 Dev-C++ 推出去，給更多人知道。 這一篇，獻給愛用 Dev-C++ 的你。","text":"寫這篇文章的意義是幫忙把新版的 Dev-C++ 推出去，給更多人知道。 這一篇，獻給愛用 Dev-C++ 的你。 前言依如往常的滑著電腦 Facebook，社團依舊充斥著廢文（不開玩笑，平常就是 IDE / Compiler 都搞不清楚地在亂吵） 唯有少數幾篇文，可以吸引到我的目光，講到 C 語言總會講到 Dev-C++。 滑了一下留言 給我等一下，Dev-C++ 2020？我怎麼不知道！ 如果你直接去 Google Dev-C++ 2020 估計是找不到你要的結果。後來去維基百科才知道 Dev-C++ 最新版本的 Source Code 位置。 新版 Dev-C++ 介紹維護公司：EmbarcaderoGitHub 連結: https://github.com/Embarcadero/Dev-CppGitHub Release: https://github.com/Embarcadero/Dev-Cpp/releases 其實他也不叫做 Dev-C++ 2020，負責這項專案的公司也直接命名為 Embarcadero Dev-C++ 這維護公司來頭也不小啊，有公司接手維護這個專案真的是一個奇葩之事吧！ 編譯器 Compiler目前選用 TDM-GCC 9.2.0，直接從 4.9.2 跳上去 選項也支援新版標準 C++ 20，之前手動更新編譯器都需要手動輸入參數才能換成新版標準。 外觀介面 Appearance經典介面從 4.9.9.2 到 5.11 版本基本上都長這樣，能去改變外觀的選項比較少 最新版本他可以直接讓你更改樣式了 選取環境選項（Environment Options）$\\rightarrow$ 外觀（Appearance）就可以改成你想看到的主題（Theme）了。 等等，你真的是 Dev-C++ 嗎？ 終端機 Command / PowerShell都已經 2020 年了，把 IDE 跟 Terminal 放在一起已經算是標準配備了吧！現在也終於可以囉！ 最底下的選項也多了一個 Console 選項點下後，下面視窗也有兩個按鈕分別為 CMD 跟 PS CMD 指的是 Windows 傳統的 Command LinePS 指的是 Windows 最新的 PowerShell 只要點一下，就可以打開你想要的 Console 囉！不要的 Console 也可以直接右鍵關閉就好 隱藏問題 Issue安裝完成後，先不要選擇「繁體中文」，都先選擇「英文」目前我在 Windows 10 的新版 Dev-C++ v6.2 跑繁體中文，會出現亂碼這個問題暫時還沒修復，如果是新手，請暫時先忍一忍吧 總結我想，這也是目前開源專案裡面最成功的例子了吧三個大版本更新，全都是不同人開發、維護希望這個開源精神，也有人能繼續傳下去 對著三個版本 Dev-C++ 的開發者們致上最高的 Respect！ 目前我們就繼續期待著 Embarcadero Dev-C++ 會帶給我們什麼樣驚喜吧！ 廢文附帶廢圖（？）從今天起，Embarcadero 就是我大哥，誰說 Embarcadero 不好，對不起，我們不認識（Ｘ）","categories":[{"name":"程式","slug":"程式","permalink":"https://blog.yangjerry.tw/categories/程式/"},{"name":"Dev-C++","slug":"程式/Dev-C","permalink":"https://blog.yangjerry.tw/categories/程式/Dev-C/"}],"tags":[{"name":"程式","slug":"程式","permalink":"https://blog.yangjerry.tw/tags/程式/"},{"name":"Dev-C++","slug":"Dev-C","permalink":"https://blog.yangjerry.tw/tags/Dev-C/"},{"name":"更新","slug":"更新","permalink":"https://blog.yangjerry.tw/tags/更新/"}]},{"title":"社群回答被刪除紀錄區","slug":"group-answer","date":"2020-09-04T15:45:04.000Z","updated":"2020-09-06T04:53:13.729Z","comments":true,"path":"2020/09/04/group-answer/","link":"","permalink":"https://blog.yangjerry.tw/2020/09/04/group-answer/","excerpt":"我一直很受不了社群有些人就是問完答案就刪除那種。","text":"我一直很受不了社群有些人就是問完答案就刪除那種。 你在社群得到答案，多數回答者會希望把答案留下來。可是提問的那些人，不管用什麼理由刪除貼文，我都會覺得很不合理。 避免洗版？：你可以最多選擇關閉留言，你刪除文章直接損失社群答案，我只會覺得你很自私。 機密問題？：如果是機密問題，那當初就不應該貼上來。 因為這裡是個討論社團，不是你的個人解答區。 我決定之後要來反擊那些問完答案就刪除的那些人。 如果你看到我回答了，基本上我回答完，一定先截圖。我通常會追蹤問題好幾天，我想到就會去翻一下。 如果你刪文了，可能你的發問跟答案就會出現在這裡 OwO。同時我也會紀錄： 發問者公開名稱 發問文章 發問時間 我回覆的答案 我回覆的時間 我之後再想我要在底下更新還是另外再寫一篇文章會比較好，預計可能都是在這篇底下更新。暑假發生的事之後再來慢慢寫。","categories":[{"name":"生活","slug":"生活","permalink":"https://blog.yangjerry.tw/categories/生活/"}],"tags":[{"name":"程式社群","slug":"程式社群","permalink":"https://blog.yangjerry.tw/tags/程式社群/"}]},{"title":"關於 NCPU 2020 我想說的是......","slug":"ncpu-2020-negative","date":"2020-07-15T16:45:26.000Z","updated":"2020-07-15T16:50:58.521Z","comments":true,"path":"2020/07/16/ncpu-2020-negative/","link":"","permalink":"https://blog.yangjerry.tw/2020/07/16/ncpu-2020-negative/","excerpt":"有點想說這次競賽的不合理之處","text":"有點想說這次競賽的不合理之處 本次競賽 Rank 10 / 50 名次也在 20 %，但整場只覺得他們到底到幹嘛？ 1. 更換比賽環境比賽前一天我還在確認比賽環境下圖是比賽後一天才看到被改的 改用瘋狂程設？也就是說環境改成 Windows？為什麼這種重大改變事項沒有發給全部的參賽者？ 反正那些 IDE 也都給假的，用過「瘋狂程設」都知道那是佔滿全部螢幕 比賽前 20 分鐘裁判才來教室講解說「我們本來就打算採用『瘋狂程設』」 比賽當天上午兩點（對，AM 2:00）也才收到 各位參賽的師長與同學大家好:根據疾病管制署社交距離注意事項，建議人與人之間，在室內應保持1.5公尺、室外保持1公尺之距離，若雙方正確佩戴口罩，則可豁免社交距離，但處於擁擠、密閉之場所仍應佩戴口罩。 請各位參賽的師長與同學進入競賽場地，請盡量佩戴口罩。如果有發燒情況，請勿參賽，其餘成員仍可出賽。感謝大家的參與及配合。 只有通知這件事？在 AM 2:00？通知給誰？ 2. Judge 環境的配置，裁判不見人影我在檢測環境時間，也要確保我設定參數跟 Judge 環境參數一樣（就是語言標準、優化參數那類的）那邊工作人員感覺也是一臉滿頭問號還在回答我説：「用 Java 就要用 Java 程式編譯」不然我會拿 Python 拿去給 C++ 編譯嗎？= = 某點來說，我不會怪工作人員懂不懂我想講的是裁判問題工作人員最後只好回應我：「裁判等等會過來講解比賽環境」 但以備萬一，只好拿手機找 Code 慢慢測試環境 不過到最後，等到 11 點，檢測環境結束，我還是看不到裁判人影。 （也聽說也只有在幾間比賽教室講解） 欸不是，裁判在幹嘛？ 3. 其餘瑣碎事個人覺得不太大的問題，只是就觀感問題 自己拿舉手拿氣球（我真的第一次遇到） 位置安排不太良好，五個一排，這樣空間很多都浪費 宣傳比賽？我自己搜尋我才知道要辦比賽 得獎只有前三名拍照？ 有些人好像有提到比賽場外問題，不過因為我沒有去外面吃點心，所以不知道什麼情況 4. 瘋狂程設問題賽中有程式寫爛了，我也不熟悉「瘋狂程設」那時候也不知道我寫到 Runtime Error Debug 輸出半天才知道 Runtime Error 不會輸出 = =就是為了這點折騰很久…… 總結這次參賽體驗實在是差到不行第 10 屆比賽，ㄏ，我只差點還沒把未消化的食物吐出來 有多少學生為了好好比賽拼命練習…然而主辦方只想草草了事… 連比賽都辦不好還想競爭啊！洗洗睡吧！私立大學辦比賽辦成這樣，只不過是一堆笑話罷了。","categories":[],"tags":[{"name":"NCPU","slug":"NCPU","permalink":"https://blog.yangjerry.tw/tags/NCPU/"},{"name":"NCPU 2020","slug":"NCPU-2020","permalink":"https://blog.yangjerry.tw/tags/NCPU-2020/"},{"name":"ICPC","slug":"ICPC","permalink":"https://blog.yangjerry.tw/tags/ICPC/"}]},{"title":"Jerry Yang's Blog X 純靠北工程師","slug":"jerry-and-init-kaobeiengineer","date":"2020-06-25T18:07:31.000Z","updated":"2020-06-29T06:40:05.486Z","comments":true,"path":"2020/06/26/jerry-and-init-kaobeiengineer/","link":"","permalink":"https://blog.yangjerry.tw/2020/06/26/jerry-and-init-kaobeiengineer/","excerpt":"嗨！大家好，我是這個 Blog 版主 Jerry Yang 為了提高文章還有我的廢文的能見度","text":"嗨！大家好，我是這個 Blog 版主 Jerry Yang 為了提高文章還有我的廢文的能見度 我決定要在純靠北工程師的共同協作 Blog 上發文啦！ 目前會發上去的應該只有技術文、分享文之類的 感想、生活、解題之類目前還只會放在這裡 一方面，我目前是「純靠北工程師 iOS」開發者 只是一直把進度持續咕咕咕 「純靠北工程師 iOS」也是開發過程筆記也會放在上面 如果我有時間寫的話 以我目前更新頻率來說，大約兩個月兩篇文章不過「純靠北工程師 Blog」我只會分享技術文因此，更新頻率應該會很慢 目前第一篇主題也想好了，類別是人工智慧的演算法會想寫主要是因為中文資料過少（但英文資料其實也不多）把自己想法分享出去，也歡迎更多高手來跟我討論。 這是我在「純靠北工程師 Blog」的作者連結 https://init-engineer.github.io/authors/tico88612/ 然後，我最近也把 LikeCoin 加入我的 Blog喜歡我的文章記得幫我按多一點的 LikeCoin就這樣，ㄅㄅ","categories":[{"name":"生活","slug":"生活","permalink":"https://blog.yangjerry.tw/categories/生活/"}],"tags":[{"name":"純靠北工程師","slug":"純靠北工程師","permalink":"https://blog.yangjerry.tw/tags/純靠北工程師/"}]},{"title":"關於 Undefined Behavior 這件事...","slug":"undefined-behavior-in-c","date":"2020-06-02T09:02:31.000Z","updated":"2020-06-23T09:13:44.336Z","comments":true,"path":"2020/06/02/undefined-behavior-in-c/","link":"","permalink":"https://blog.yangjerry.tw/2020/06/02/undefined-behavior-in-c/","excerpt":"本篇文章我在以前的 Blogspot 有寫過，不過沒什麼點閱率 QAQ現在好不容易這裡有一些觀看再加上前陣子也有看到 Undefined Behavior 寫法被討論我就把舊文章移植過來，順便把語病、說法做個修正 前幾天在看FB的文章時，看到了一篇貼文","text":"本篇文章我在以前的 Blogspot 有寫過，不過沒什麼點閱率 QAQ現在好不容易這裡有一些觀看再加上前陣子也有看到 Undefined Behavior 寫法被討論我就把舊文章移植過來，順便把語病、說法做個修正 前幾天在看FB的文章時，看到了一篇貼文 第八題不會有太大的問題 6*6*6=216第九題，答案是多少？ 那篇貼文討論蠻熱烈的～（可是這讓我有點擔心……）一般人第一個直覺是把++n算完後代入x，就會變成6*6*6=216，可是沒有在選項內……？那就來執行一次看看吧 統一以這份 Code 執行 #include&lt;cstdio&gt; using namespace std; #define CUBE(x) x*x*x int main() &#123; int n = 5; printf(\"%d\\n\", CUBE(++n)); return 0; &#125; 用兩個較主流的編譯器，GNU G++ 跟 Clang（MSVC++ 表示：…） GNU G++ 編譯參數：g++ -Wall -O2 -std=c++14 a.cpp 輸出結果 392 那第九題答案就是 (D)，真相大白......答案真的那麼簡單？來看看 Clang 結果吧！ Clang 編譯參數：clang -Wall -O2 -std=c++14 a.cpp 等一下！竟然是 336？ 這個就是所謂的 UB（Undefined Behavior）未定義行為照理說，同個語言，不同編譯器，執行結果一定要一樣 這個跟運算的優先順序有點關係，每個運算子在 C/C++ 的優先順序這有點像是遊戲規則，大規則方向有訂好 但是有些規則並沒有規定誰先誰後自己編譯器就自己規定，反正只要照著大方向就好 像是 GNU G++ 的結果： 第一個數字 ++N 確實變成 $6$乘法優先運算子低把 $N$ 排入等待運算第二個數字又把 $N$ 加上 $1$第一個數字被連帶影響第一個跟第二個數字相乘就變成 $7 \\times 7 = 49$把 $49$ 排入等待運算第三個數字又把 $N$ 加上 $1$$N$ 變成 $8$$49 \\times 8 = 392$ 以上為對 GNU G++ 的個人見解 Clang 結果： 第一個數字 ++N 確實變成 $6$乘法優先運算子低把 $6$ 排入等待運算第二個數字又把 $N$ 加上 $1$第一個跟第二個數字相乘就變成 $6 \\times 7 = 42$把 $42$ 排入等待運算第三個數字又把 $N$ 加上 $1$$N$ 變成 $8$$42 \\times 8 = 336$ 以上為對 Clang 的個人見解 以上結果其實沒有違反「運算子的優先順序」但！這是未定義行為，真的不需要對他細節作法作討論程式編譯經過優化後，也有可能自動幫你修改過程未定義行為結果就可能會因此不同 結論聽網路上說，大學教授其實出蠻多這種題目的（還好我的科系沒有考這種東西），討論這種題目基本上沒有什麼意義，錯誤的定義上討論出的結果，也只會是錯誤的。 不過我也有去找教授討論過，他上課也說過，同一個運算式，不要使用「遞增遞減運算子（Ex.i++、++i、i–、–i）」超過兩個以上，不然會發生一些不可預期的錯誤。 UB（Undefined Behavior）的例子還有很多，發生的情況不一定是執行結果不一樣 希望不要再出這種 Code 殘害學生，也不需要去討論這種東西只要告訴他：「這是 UB（Undefined Behavior）未定義行為，不需要去多做任何討論。」","categories":[{"name":"程式","slug":"程式","permalink":"https://blog.yangjerry.tw/categories/程式/"}],"tags":[{"name":"Undefined Behavior","slug":"Undefined-Behavior","permalink":"https://blog.yangjerry.tw/tags/Undefined-Behavior/"},{"name":"UB","slug":"UB","permalink":"https://blog.yangjerry.tw/tags/UB/"},{"name":"運算子","slug":"運算子","permalink":"https://blog.yangjerry.tw/tags/運算子/"}]},{"title":"ITSA 基礎題庫 —— 題目17. 英文斷詞","slug":"itsa-basic-17","date":"2020-06-01T08:11:52.000Z","updated":"2020-06-01T08:55:40.953Z","comments":true,"path":"2020/06/01/itsa-basic-17/","link":"","permalink":"https://blog.yangjerry.tw/2020/06/01/itsa-basic-17/","excerpt":"題目 Problem題目連結：https://e-tutor.itsa.org.tw/e-Tutor/mod/programming/view.php?a=15924","text":"題目 Problem題目連結：https://e-tutor.itsa.org.tw/e-Tutor/mod/programming/view.php?a=15924 敘述 Description斷詞在自然語言的研究上是個很重要的步驟，主要就是將關鍵字從句子中斷出，英文的斷詞較為簡單，就根據句子中的空格將英文字隔開。 輸入 Input輸入一句英文敘述句。 字元數 $\\leq 1000$。 輸出 Output將輸入的句子進行斷詞，將斷出的關鍵字依照句子中的出現排序列印出。全部轉成小寫，列印出的關鍵字不得重複，關鍵字間以一個空格隔開，最後一個關鍵字後面進行換行。例如輸入 How do you do ，則輸出 how do you 。 範例輸入 Sample InputHow do you do 範例輸出 Sample Outputhow do you 提示 Hint題解 SolutionC++ 題解程式還蠻多的，我來寫個 C 語言能解開的版本 C 語言可以使用 string.h String Token (strtok) 去解決我們來看 strtok 函式原型 char* strtok( char* str, const char* delim ); 引數傳要切割的字串 str、切割的關鍵字元 delim 回傳的是字元指標，就是位於切割字元之間的字串如果拿到 NULL 就代表已經沒了 但是，如果想再搜尋同一句話的下一個切割字元之間字串，str 就傳 NULL 即可 通常我會搭配 while 迴圈去完成 這題要先把所有字串轉為小寫第一次做 strtok 的時候要 str 引數傳需要被切割的字串第二次以後 str 引數直接傳 NULL直到回傳值為 NULL 跳出迴圈 while 迴圈裡，需要搜尋這個字串是否存在 搭配 strcmp 去完成 不存在則於迴圈的最後 strcpy 進去 最後再列出所有字串 程式碼 Accepted Code#include&lt;stdio.h&gt; #include&lt;string.h&gt; #include&lt;ctype.h&gt; int main() &#123; char enter[10000]; fgets(enter, 9999, stdin); int len = strlen(enter); for (int i = 0 ; i &lt; len; i++) &#123; enter[i] = tolower(enter[i]); &#125; char ans[1000][1000]; int nowAns = 0; char *pch = strtok(enter, \" \\r\\n\"); // 爛坑！！！ while(pch != NULL) &#123; int judge = 1; for (int i = 0; i &lt; nowAns; i++) &#123; if (strcmp(ans[i], pch) == 0) &#123; judge = 0; break; &#125; &#125; if (judge) &#123; strcpy(ans[nowAns], pch); nowAns++; &#125; pch = strtok(NULL, \" \\r\\n\"); // 爛坑！！！ &#125; for (int i = 0; i &lt; nowAns; i++) &#123; if(i) printf(\" \"); printf(\"%s\", ans[i]); &#125; printf(\"\\n\"); return 0; &#125; 後記 AfterwordLine 13 / 26 我寫了一個註解叫做爛坑！！ 一開始寫了的 Token 如果只有空格跟換行（沒有 \\r）會直接吃兩個 AC、兩個 WA，根本不知道問題在哪\\r 我就直接順手加進去，就 AC 了 理當來說換行為 \\n但 Windows 換行為 \\r\\n我覺得測試資料可能有些是 Windows 手動產生 之前有個月賽題目賽後的測資有錯歷史紀錄沒有人 AC 那題（放題目的人不會覺得詭異嗎？）E-mail 反應後也是音訊全無 FB 社團裡的人也說這個平台實在是不敢領教這篇特別紀錄一下很坑的通靈之路","categories":[{"name":"解題區","slug":"解題區","permalink":"https://blog.yangjerry.tw/categories/解題區/"},{"name":"解題報告書 - ITSA","slug":"解題區/解題報告書-ITSA","permalink":"https://blog.yangjerry.tw/categories/解題區/解題報告書-ITSA/"}],"tags":[{"name":"strtok","slug":"strtok","permalink":"https://blog.yangjerry.tw/tags/strtok/"},{"name":"ITSA","slug":"ITSA","permalink":"https://blog.yangjerry.tw/tags/ITSA/"}]},{"title":"c779. 106北二4.盆栽展覽","slug":"zj-c779","date":"2020-04-17T04:20:58.000Z","updated":"2020-04-17T16:27:11.141Z","comments":true,"path":"2020/04/17/zj-c779/","link":"","permalink":"https://blog.yangjerry.tw/2020/04/17/zj-c779/","excerpt":"題目 Problem題目連結：https://zerojudge.tw/ShowProblem?problemid=c779","text":"題目 Problem題目連結：https://zerojudge.tw/ShowProblem?problemid=c779 敘述 Description盆栽協會為了推廣盆栽藝術將舉辦盆栽比賽與展覽。在展覽時，將依照比賽編號來依序擺放盆栽，但由於參賽盆栽的高度不一，為了方便評審評分與來賓觀賞，盆栽協會將訂做展示架來擺放盆栽，以便讓相鄰盆栽的高度差異不超過最大高度差。為了節省訂做成本，盆栽協會希望訂做的展示架高度越低越好。請你寫一個程式，根據相鄰最大高度差與每個盆栽的高度，計算擺放這排盆栽所需的最低展示架總高度。 舉例說明，以下例子中，第一列共有五個盆栽的高度。若相鄰最大高度差為 $5$，則第二列為每個盆栽的最低展示架高度,所以總高度為$0+118+153+0+282=553$。若相鄰最大高度差為 $50$，則第三列為每個盆栽的最低展示架高度，所以總高度為 $0+67+108+0+237=412$。 盆栽高度 401 284 254 412 125 相鄰最大高度差為 5 0 118 153 0 282 相鄰最大高度差為 50 0 67 108 0 237 輸入 Input測試資料有兩行。第一行有 $A (1 \\leq A \\leq 30)$ 個以一個空格(white space)隔開的整數 $B (1 \\leq B \\leq 2000)$ 代表盆栽高度。第二行有一個整數 $C (1 \\leq C \\leq 2000)$，代表相鄰最大高度差。 輸出 Output請輸出 1 個整數，代表擺放這排盆栽所需的最低展示架總高度。 範例輸入 Sample Input範例輸入一： 401 284 254 412 125 50 範例輸入二： 1010 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 5 範例輸出 Sample Output範例輸出一： 412 範例輸出二： 5 提示 Hint題解 Solution每個數字兩個之間有沒有差距超過相鄰最大高度差 我過程至少 $A$ 次，第一次可能還沒有跟上最高高度 程式碼 Accepted Code/* Author: Jerry Yang C.H. (tico88612) Date: 2020/4/9 */ #include &lt;bits/stdc++.h&gt; using namespace std; typedef long long ll; typedef pair&lt;ll, ll&gt; pii; typedef pair&lt;double,double&gt; pdd; #define SQ(i) ((i)*(i)) #define MEM(a, b) memset(a, (b), sizeof(a)) #define SZ(i) int(i.size()) #define FOR(i, j, k, in) for (int i=j ; i&lt;k ; i+=in) #define RFOR(i, j, k, in) for (int i=j ; i&gt;=k ; i-=in) #define REP(i, j) FOR(i, 0, j, 1) #define REP1(i,j) FOR(i, 1, j+1, 1) #define RREP(i, j) RFOR(i, j, 0, 1) #define ALL(_a) _a.begin(),_a.end() #define MP make_pair #define PB push_back #define EB emplace_back #define X first #define Y second #ifdef tmd #define debug(...) do&#123;\\ fprintf(stderr,\"%s - %d (%s) = \",__PRETTY_FUNCTION__,__LINE__,#__VA_ARGS__);\\ _do(__VA_ARGS__);\\ &#125;while(0) template&lt;typename T&gt;void _do(T &amp;&amp;_x)&#123;cerr&lt;&lt;_x&lt;&lt;endl;&#125; template&lt;typename T,typename ...S&gt; void _do(T &amp;&amp;_x,S &amp;&amp;..._t)&#123;cerr&lt;&lt;_x&lt;&lt;\" ,\";_do(_t...);&#125; template&lt;typename _a,typename _b&gt; ostream&amp; operator &lt;&lt; (ostream &amp;_s,const pair&lt;_a,_b&gt; &amp;_p)&#123;return _s&lt;&lt;\"(\"&lt;&lt;_p.X&lt;&lt;\",\"&lt;&lt;_p.Y&lt;&lt;\")\";&#125; template&lt;typename It&gt; ostream&amp; _OUTC(ostream &amp;_s,It _ita,It _itb) &#123; _s&lt;&lt;\"&#123;\"; for(It _it=_ita;_it!=_itb;_it++) &#123; _s&lt;&lt;(_it==_ita?\"\":\",\")&lt;&lt;*_it; &#125; _s&lt;&lt;\"&#125;\"; return _s; &#125; template&lt;typename _a&gt; ostream &amp;operator &lt;&lt; (ostream &amp;_s,vector&lt;_a&gt; &amp;_c)&#123;return _OUTC(_s,ALL(_c));&#125; template&lt;typename _a&gt; ostream &amp;operator &lt;&lt; (ostream &amp;_s,set&lt;_a&gt; &amp;_c)&#123;return _OUTC(_s,ALL(_c));&#125; template&lt;typename _a&gt; ostream &amp;operator &lt;&lt; (ostream &amp;_s,deque&lt;_a&gt; &amp;_c)&#123;return _OUTC(_s,ALL(_c));&#125; template&lt;typename _a,typename _b&gt; ostream &amp;operator &lt;&lt; (ostream &amp;_s,map&lt;_a,_b&gt; &amp;_c)&#123;return _OUTC(_s,ALL(_c));&#125; template&lt;typename _t&gt; void pary(_t _a,_t _b)&#123;_OUTC(cerr,_a,_b);cerr&lt;&lt;endl;&#125; #define IOS() #else #define debug(...) #define pary(...) #define endl '\\n' #define IOS() ios_base::sync_with_stdio(0);cin.tie(0) #endif const ll MOD = 1000000007LL; const ll INF = 0x3f3f3f3f3f3f3f3fLL; const int iNF = 0x3f3f3f3f; // const ll MAXN = /********** Good Luck :) **********/ int main() &#123; IOS(); ll enter[35] = &#123;0&#125;, t = 0; while(cin &gt;&gt; enter[t++]); t--; ll c = enter[--t]; ll ans = 0; REP(i, t)&#123; REP(j, t)&#123; if (j == 0 &amp;&amp; j != t - 1) &#123; if (j + 1 &lt; t &amp;&amp; enter[j] &lt; enter[j + 1] - c)&#123; ans += enter[j + 1] - c - enter[j]; enter[j] = enter[j + 1] - c; &#125; &#125; else if (j == t - 1) &#123; if (enter[j] &lt; enter[j - 1] - c) &#123; ans += enter[j - 1] - c - enter[j]; enter[j] = enter[j - 1] - c; &#125; &#125; else &#123; int tt = max(enter[j - 1], enter[j + 1]); if(tt - c &gt; enter[j])&#123; ans += tt - c - enter[j]; enter[j] = tt - c; &#125; &#125; &#125; &#125; cout &lt;&lt; ans &lt;&lt; '\\n'; return 0; &#125; 後記 Afterword我發現外層迴圈設定 $2$ 次，還是可以 AC 根本證明這測資根本太水了 輸入 10 10 10 10 10 10 10 10 100 100 10 輸出 設定兩次：150 正確：360","categories":[{"name":"解題區","slug":"解題區","permalink":"https://blog.yangjerry.tw/categories/解題區/"},{"name":"解題報告書 - ZeroJudge","slug":"解題區/解題報告書-ZeroJudge","permalink":"https://blog.yangjerry.tw/categories/解題區/解題報告書-ZeroJudge/"}],"tags":[]},{"title":"ZeroJudge April Fools Contest 2020 解題心得","slug":"zerojudge-april-fools-contest-2020","date":"2020-04-03T02:02:48.000Z","updated":"2020-04-19T07:04:32.799Z","comments":true,"path":"2020/04/03/zerojudge-april-fools-contest-2020/","link":"","permalink":"https://blog.yangjerry.tw/2020/04/03/zerojudge-april-fools-contest-2020/","excerpt":"這次比賽真的蠻有 April Fools 的味道 不過在 ZeroJudge 平台應該是新手居多，可能會有點適應不良，或者不知從何下手","text":"這次比賽真的蠻有 April Fools 的味道 不過在 ZeroJudge 平台應該是新手居多，可能會有點適應不良，或者不知從何下手 有些題目也要一些 CTF 的基礎才可能通靈解開來 這次就來一次看清楚吧！ 不負責聲明：本人不是出題者，我只是寫我的解題心得而已，要官方題解請找出題者 競賽連結 Contest競賽連結：https://zerojudge.tw/ShowContest?contestid=3282 本人 Rank 2/125之前在 TIOJ 打 April Fools 也是拿很前面的名次正常競賽不會打，只會打 April Fools = = ———————————暴雷分隔線，害怕請避難———————————— 題目 ProblemspA - Hello, April Fools Day 2020題目連結：https://zerojudge.tw/ShowProblem?problemid=e959 進來雖然看懂題目了，也寫好了，可是……「送出解答」按鈕呢？ 在那裡附近右鍵打開檢查 找到送出「解答按鈕」的元素，你會發現按紐被 display: none; 了 雙擊編輯把 display: none; 去除 送出吧！ print('Hello, April Fools Day 2020') pB - 顛倒題目連結：https://zerojudge.tw/ShowProblem?problemid=e960 整個敘述都顛倒好難看…… 一秒破解，把敘述複製到無格式記事本 好，你看懂題目，也打出來了，可是送出去之後 我的聚焦會在 TLE，理當來說 $T\\times N = 100\\times 1000$，是不應該會 TLE 的 於是我就先寫其他題目了 但我後來回去再看一次標題「顛倒」 就在想，會不會輸入也要顛倒… 果然，輸入倒回去看也是正確的，只不過輸出也要顛倒輸出 /* Author: Jerry Yang C.H. (tico88612) Date: 2020/4/1 */ #include &lt;bits/stdc++.h&gt; using namespace std; typedef long long ll; #define endl '\\n' #define IOS() ios_base::sync_with_stdio(0);cin.tie(0) /********** Good Luck :) **********/ int main() &#123; IOS(); ll w; int i = 0; ll enter[1000005]; while(cin &gt;&gt; w)&#123; enter[i++] = w; &#125; ll ans[10000]; int j = 0; ll t; t = enter[--i]; while(t--)&#123; ll n; n = enter[--i]; ll total = 0; while(n--)&#123; ll tp; tp = enter[--i]; total += tp; &#125; ans[j++] = total; &#125; while(j)&#123; cout &lt;&lt; ans[--j] &lt;&lt; '\\n'; &#125; return 0; &#125; pC - 解題技巧題目連結：https://zerojudge.tw/ShowProblem?problemid=e961 題目說參與「某種活動」有機會秒殺這題 再加上輸入有數字 0-9、/和X 就想到這題是保齡球分數計算，再稍微驗證一下輸入有 $11 \\sim 21$ 字元，應該準沒錯 然後找了 UVa 584 的 Code（對，我懶得重寫） 稍微改了一下，但還是 WA，不過分數多了一些 隔一段時間回來後，因為測資有誤，Rejudge 後，也直接 AC 了 #include &lt;stdio.h&gt; #include &lt;algorithm&gt; #include &lt;iostream&gt; #include &lt;sstream&gt; #include &lt;vector&gt; using namespace std; int main() &#123; int t; cin &gt;&gt; t; string line; cin.ignore(); while (t-- &amp;&amp; getline(cin, line)) &#123; if (line == \"Game Over\") break; stringstream sin(line); vector&lt;pair&lt;int, int&gt; &gt; frame; int n = 0, i; for (i = 0; i &lt; line.length(); i++) &#123; if (line[i] != ' ') &#123; line[n++] = line[i]; &#125; &#125; int score = 0; for (i = 0; i &lt; n; i++) &#123; if (line[i] == 'X') &#123; frame.push_back(make_pair(10, 0)); &#125; else &#123; if (line[i + 1] == '/') frame.push_back(make_pair(line[i] - '0', 10 - (line[i] - '0'))); else frame.push_back(make_pair(line[i] - '0', line[i + 1] - '0')); i++; &#125; &#125; for (i = 0; i &lt; 10; i++) &#123; if (frame[i].first + frame[i].second != 10) score += frame[i].first + frame[i].second; else if (frame[i].first == 10) &#123; if (frame[i + 1].first == 10) score += 10 + 10 + frame[i + 2].first; else score += 10 + frame[i + 1].first + frame[i + 1].second; &#125; else &#123; score += 10 + frame[i + 1].first; &#125; &#125; printf(\"%d\\n\", score); &#125; return 0; &#125; pD - 灰階題目連結：https://zerojudge.tw/ShowProblem?problemid=e962 通靈解題失敗，等作者發題解，我覺得那公式應該是唬爛的 但我發現 Reddit 竟然找得到… 2020.04.04 更新 參考 inversion 大大的通靈的心路歷程: https://zerojudge.tw/ShowThread?postid=21040&amp;reply=0 雖然我有看到這段話 小歐:「24bit… 就像全彩RGB那樣… ?」小草:「你要那樣說也不是不行啦~」 也一度懷疑那字串不是 RGB，但那時候也不以為意（實際上就不是 RGB） 不過用 Gray Code（格雷碼）諧音梗來誤導 RGB 也太傳神w 但其實我也有發現範例輸入 #a0a0a0 顏色本身就是灰色，為何要硬轉成 #f0f0f0 只能說我的通靈之路還得加強w 本題就直接把 Hexadecimal 轉成 Binary 然後再依照這部影片的教學轉成 Gray Code（格雷碼） 再從 Binary 轉成 Hexadecimal 輸出即可 AC /* Author: Jerry Yang C.H. (tico88612) Date: 2020/4/4 */ #include &lt;bits/stdc++.h&gt; using namespace std; typedef long long ll; #define FOR(i, j, k, in) for (int i=j ; i&lt;k ; i+=in) #define REP(i, j) FOR(i, 0, j, 1) #define ALL(_a) _a.begin(),_a.end() #define IOS() ios_base::sync_with_stdio(0);cin.tie(0) string decToBin(int s)&#123; string re; REP(i, 4)&#123; if(s % 2)&#123; re += '1'; &#125; else&#123; re += '0'; &#125; s /= 2; &#125; reverse(ALL(re)); return re; &#125; string hexToBin(char s)&#123; int ans = 0; if (isdigit(s))&#123; ans = s - '0'; &#125; else &#123; ans = s - 'a' + 10; &#125; return decToBin(ans); &#125; char decToHex(int s) &#123; if (s &lt; 10) &#123; return s + '0'; &#125; else &#123; return s - 10 + 'a'; &#125; &#125; char binToHex(string s)&#123; int total = 0; int now = 8, i = 0; while (now) &#123; if (s[i] == '1') &#123; total += now; &#125; i++; now /= 2; &#125; return decToHex(total); &#125; /********** Good Luck :) **********/ int main() &#123; IOS(); int n; cin &gt;&gt; n; while(n--)&#123; string enter; cin &gt;&gt; enter; string a; REP(i, 6)&#123; a += hexToBin(enter[i]); &#125; bitset&lt;24&gt; bita(a), bitb(a); bitb &gt;&gt;= 1; bita ^= bitb; string bins = bita.to_string(); string ans; for (int i = 0; i &lt; 24; i += 4)&#123; ans += binToHex(bins.substr(i, 4)); &#125; cout &lt;&lt; ans &lt;&lt; '\\n'; &#125; return 0; &#125; pE - 餅乾盒遊戲題目連結：https://zerojudge.tw/ShowProblem?problemid=e963 這題你會發現，你無法從題目敘述、輸入輸出判別 Yes or No 他很強調「餅乾」 還有一句話「畢竟不同的餅乾就能代表不同的人，也就是說，能夠從餅乾來判別一個人喔。」 打過 Web CTF 就會知道，不過稍微通靈想一下 「餅乾」=「Cookies」 於是就打開 ZeroJudge 的 Cookies 欄位 點進去，把 ZeroJudge 的 Cookies 展開，多了個東西叫做 pE_answer 內容蠻長的，要複製完整才有答案哦！ 6IulIFNbaV0g54K6IOWtl+S4slMg56ysIGkg5YCL5a2X5YWD55qEIGFzY2lpIOaVuOWAvCAoRVg6IFM9ImJhciIg5YmHIFNbMF09OTgpCuS7pCBIKFMpID0gc3VtKFNbaV0qMTM5XmkpICjpgJnoo6HnmoRe5piv5oyH5pW46YGL566XKSAoRVg6IFM9ImJhciIg5YmHIEgoUyk9OTgrOTcqMTM5KzExNCoxMzleMj0yMjE2MTc1KQrlpoLmnpwgSChTKSUoU1swXSUzKzIpID09IDAgKOmAmeijoeeahCXmmK/lj5bppJjmlbgpIOWJh+ipsumkheS5vuaYr+WxrOaWvCLlsI/mrZAi55qE6aSF5Lm+77yM5Y+N5LmL5YmH5LiN5piv44CCCihFWDogUz0iYmFyIiwgIOWboOeCuiBIKFMpJShTWzBdJTMrMikgPSAyMjE2MTc1JTQgPSAzIOaVhSDoqbLppIXoqbLkuKbkuI3lsazmlrwi5bCP5q2QIueahOmkheS5vik= 結尾有個等於，看起來是 Base64 Encode，找個 Online Base64 Decoder 還原回去 若 S[i] 為 字串S 第 i 個字元的 ascii 數值 (EX: S=\"bar\" 則 S[0]=98) 令 H(S) = sum(S[i]*139^i) (這裡的^是指數運算) (EX: S=\"bar\" 則 H(S)=98+97*139+114*139^2=2216175) 如果 H(S)%(S[0]%3+2) == 0 (這裡的%是取餘數) 則該餅乾是屬於\"小歐\"的餅乾，反之則不是。 (EX: S=\"bar\", 因為 H(S)%(S[0]%3+2) = 2216175%4 = 3 故 該餅該並不屬於\"小歐\"的餅乾) 知道題目了，來實作吧！ 這題需要用到同餘定理，照題目先把要 MOD 的\b數字算出，再把 $H(S)$ 算出 算 $139$ 的次方，記得都要取 MOD，再去照題目要求判斷，即可 AC /* Author: Jerry Yang C.H. (tico88612) Date: 2020/4/1 */ #include &lt;bits/stdc++.h&gt; using namespace std; typedef long long ll; #define SZ(i) int(i.size()) #define FOR(i, j, k, in) for (int i=j ; i&lt;k ; i+=in) #define RFOR(i, j, k, in) for (int i=j ; i&gt;=k ; i-=in) #define REP(i, j) FOR(i, 0, j, 1) #define IOS() ios_base::sync_with_stdio(0);cin.tie(0) /********** Good Luck :) **********/ int main() &#123; IOS(); int t; cin &gt;&gt; t; while(t--)&#123; string s; cin &gt;&gt; s; ll mod = s[0] % 3 + 2; ll total = 0; ll timee = 1; REP(i, SZ(s))&#123; total += ((s[i] % mod) * (timee % mod)) % mod; timee *= 139; timee %= mod; &#125; if(total % mod == 0)&#123; cout &lt;&lt; \"yes\" &lt;&lt; '\\n'; &#125; else&#123; cout &lt;&lt; \"no\" &lt;&lt; '\\n'; &#125; &#125; return 0; &#125; pF - 前往疫區題目連結：https://zerojudge.tw/ShowProblem?problemid=e964 這題賽中題目敘述爛掉，還原一下那時候的大意 「現在最嚴重的國家是…？美國」「對，如果你是從美國來的，就可以拿到提示哦！」 如果你是正常連線的話，你應該只能看到這裡 於是我就用了一下 VPN 連線到美國 小歐:「咦?? 現在這個人好像就是來自 美國 的耶」小草:「啊… 的確呢 還真是意外耶(棒讀)」小歐:「怎麼覺得你早就知道會有人一樣… ?」小草:「沒那回事 那是你的錯覺♪」小歐:「所以說那個提示.. ?」小草:「啊，差點就忘了… 提示是『${Ans=(9487945\\times\\displaystyle\\sum_{i=0}^{b}a^i)\\bmod 10^9+7}$』。」小歐:「我是覺得這已經不是提示的程度了啦，直接講解答還能夠算是提示嗎?? 不過確實，不看提示真的猜不到呢… …」小草:「嘛 惡趣味可不是叫假的」小歐:「算了… 我已經放棄思考了… …」小草:「終於看開了呀(笑)」小歐:「所以在最後還是來做點正事吧 在此恭喜你通過所有關卡!! 🎉🎉🎉」小草:「不過也有可能是直接跳關到這裡就是了… ?」小歐:「雖然相見的時間不長，但也到了該謝幕的時間了。」小草:「我倒是覺得已經很長了… …」小歐:「就這樣，我是主持人小歐」小草:「我其實只是路過的♪」小歐:「欸!? 真的假的!? 總之，有緣的話明年再見吧」小草:「說真的，究竟有多少人能看到這裡呢… …」 強烈建議連線進去捧場一下，你會發現不可思議的事 但我是覺得不一定要連 VPN 到美國，想辦法騙過 JavaScript 是從美國來的應該也可以 回到題目重點，本題重點在這裡 $${Ans=(9487945\\times\\displaystyle\\sum_{i=0}^{b}a^i)\\bmod 10^9+7}$$ $\\displaystyle\\sum_{i=0}^{b}a^i$ 這東西 Google 了半天，才知道那是等比級數啊！高中數學都忘光了@@ 用 等比級數 搭配 快速冪，改一下條件判斷就 AC 了 /* Author: Jerry Yang C.H. (tico88612) Date: 2020/4/2 */ #include &lt;bits/stdc++.h&gt; using namespace std; typedef long long ll; #define IOS() ios_base::sync_with_stdio(0);cin.tie(0) const ll MOD = 1000000007LL; ll a; ll q_pow(ll a, ll n, ll MOD) &#123; ll res = 1; while (n) &#123; if (n &amp; 1) res = res * a % MOD; a = a * a % MOD; n &gt;&gt;= 1; &#125; return res % MOD; &#125; ll sum(ll n) &#123; if (n &lt;= 1) return a % MOD; ll s = sum(n / 2) % MOD; if (n % 2 == 0) return s + s * q_pow(a, n / 2, MOD) % MOD; else return s + s * q_pow(a, n / 2, MOD) + q_pow(a, n, MOD) % MOD; &#125; /********** Good Luck :) **********/ int main() &#123; IOS(); int t; cin &gt;&gt; t; while (t--) &#123; ll b; cin &gt;&gt; a &gt;&gt; b; if (a == 0) &#123; cout &lt;&lt; \"0\" &lt;&lt; '\\n'; &#125; else if (b == 0)&#123; cout &lt;&lt; \"9487945\" &lt;&lt; '\\n'; &#125; else &#123; ll ans = sum(b); cout &lt;&lt; (((sum(b) + 1) % MOD) * 9487945 % MOD) % MOD &lt;&lt; '\\n'; &#125; &#125; return 0; &#125; 後記 Afterword這場比賽性質不能直接跟正常比賽比較 畢竟是 April Fools 嘛 w TCSH Online Judge 明年也可以來這樣搞好了 話說隔幾天就是 Google Code Jam 了，加上專題還有作業，估計繼續潛水了… 就醬子！ㄅㄅ！","categories":[{"name":"比賽心得區","slug":"比賽心得區","permalink":"https://blog.yangjerry.tw/categories/比賽心得區/"},{"name":"ZeroJudge","slug":"比賽心得區/ZeroJudge","permalink":"https://blog.yangjerry.tw/categories/比賽心得區/ZeroJudge/"}],"tags":[{"name":"ZeroJudge","slug":"ZeroJudge","permalink":"https://blog.yangjerry.tw/tags/ZeroJudge/"},{"name":"April Fools","slug":"April-Fools","permalink":"https://blog.yangjerry.tw/tags/April-Fools/"},{"name":"Cookies","slug":"Cookies","permalink":"https://blog.yangjerry.tw/tags/Cookies/"},{"name":"等比級數","slug":"等比級數","permalink":"https://blog.yangjerry.tw/tags/等比級數/"},{"name":"快速冪","slug":"快速冪","permalink":"https://blog.yangjerry.tw/tags/快速冪/"}]},{"title":"e463. 數數字","slug":"zj-e463","date":"2020-02-16T09:20:55.000Z","updated":"2020-02-17T09:16:04.657Z","comments":true,"path":"2020/02/16/zj-e463/","link":"","permalink":"https://blog.yangjerry.tw/2020/02/16/zj-e463/","excerpt":"題目 Problem題目連結：https://zerojudge.tw/ShowProblem?problemid=e463","text":"題目 Problem題目連結：https://zerojudge.tw/ShowProblem?problemid=e463 敘述 Description給你一個數字n(n&lt;=100)，可以在n旁邊加上&lt;=n/2的數字，一直加到不能加為止 比如說n=6，可以變成16,26,36 26可以變成126 36可以變成136 最後總共有6,16,26,36,126,136共六個數字 輸入 Input多筆輸入 每行為n(n&lt;=100) 輸出 Output輸出共有幾個數字 再輸出每個數字，記得要排序 (有一些數字雖然會重複，但因為是由不同數字變出來的，所以都要輸出) 範例輸入 Sample Input6 10 範例輸出 Sample Output6 6 16 26 36 126 136 14 10 110 210 310 410 510 1210 1310 1410 1510 2410 2510 12410 12510 提示 Hint不准作弊! 題解 Solution搭配 DFS + Multiset不能使用 Set 的原因是有些數字會是重複產生，但是必須要讓它輸出 深度當前的那個數字 $n$，然後從 $1$ 到 $\\frac{n}{2}$ 再向下搜尋Line 64 的 s 是計算要加入數字的長度 程式碼 Accepted Code/* Author: Jerry Yang C.H. (tico88612) Date: 2020/2/16 */ #include &lt;bits/stdc++.h&gt; using namespace std; typedef long long ll; typedef pair&lt;ll, ll&gt; pii; typedef pair&lt;double,double&gt; pdd; #define SQ(i) ((i)*(i)) #define MEM(a, b) memset(a, (b), sizeof(a)) #define SZ(i) int(i.size()) #define FOR(i, j, k, in) for (int i=j ; i&lt;k ; i+=in) #define RFOR(i, j, k, in) for (int i=j ; i&gt;=k ; i-=in) #define REP(i, j) FOR(i, 0, j, 1) #define REP1(i,j) FOR(i, 1, j+1, 1) #define RREP(i, j) RFOR(i, j, 0, 1) #define ALL(_a) _a.begin(),_a.end() #define MP make_pair #define PB push_back #define EB emplace_back #define X first #define Y second #ifdef tmd #define debug(...) do&#123;\\ fprintf(stderr,\"%s - %d (%s) = \",__PRETTY_FUNCTION__,__LINE__,#__VA_ARGS__);\\ _do(__VA_ARGS__);\\ &#125;while(0) template&lt;typename T&gt;void _do(T &amp;&amp;_x)&#123;cerr&lt;&lt;_x&lt;&lt;endl;&#125; template&lt;typename T,typename ...S&gt; void _do(T &amp;&amp;_x,S &amp;&amp;..._t)&#123;cerr&lt;&lt;_x&lt;&lt;\" ,\";_do(_t...);&#125; template&lt;typename _a,typename _b&gt; ostream&amp; operator &lt;&lt; (ostream &amp;_s,const pair&lt;_a,_b&gt; &amp;_p)&#123;return _s&lt;&lt;\"(\"&lt;&lt;_p.X&lt;&lt;\",\"&lt;&lt;_p.Y&lt;&lt;\")\";&#125; template&lt;typename It&gt; ostream&amp; _OUTC(ostream &amp;_s,It _ita,It _itb) &#123; _s&lt;&lt;\"&#123;\"; for(It _it=_ita;_it!=_itb;_it++) &#123; _s&lt;&lt;(_it==_ita?\"\":\",\")&lt;&lt;*_it; &#125; _s&lt;&lt;\"&#125;\"; return _s; &#125; template&lt;typename _a&gt; ostream &amp;operator &lt;&lt; (ostream &amp;_s,vector&lt;_a&gt; &amp;_c)&#123;return _OUTC(_s,ALL(_c));&#125; template&lt;typename _a&gt; ostream &amp;operator &lt;&lt; (ostream &amp;_s,set&lt;_a&gt; &amp;_c)&#123;return _OUTC(_s,ALL(_c));&#125; template&lt;typename _a&gt; ostream &amp;operator &lt;&lt; (ostream &amp;_s,deque&lt;_a&gt; &amp;_c)&#123;return _OUTC(_s,ALL(_c));&#125; template&lt;typename _a,typename _b&gt; ostream &amp;operator &lt;&lt; (ostream &amp;_s,map&lt;_a,_b&gt; &amp;_c)&#123;return _OUTC(_s,ALL(_c));&#125; template&lt;typename _t&gt; void pary(_t _a,_t _b)&#123;_OUTC(cerr,_a,_b);cerr&lt;&lt;endl;&#125; #define IOS() #else #define debug(...) #define pary(...) #define endl '\\n' #define IOS() ios_base::sync_with_stdio(0);cin.tie(0) #endif const ll MOD = 1000000007LL; const ll INF = 0x3f3f3f3f3f3f3f3fLL; const int iNF = 0x3f3f3f3f; // const ll MAXN = multiset&lt;ll&gt; ms; void dfs(ll n, ll now)&#123; ms.insert(now); ll s = pow(10, (ll)(log10(now) + 1)); REP1(i, n / 2)&#123; dfs(i, now + i * s); &#125; &#125; void play(ll n)&#123; ms.clear(); dfs(n, n); cout &lt;&lt; SZ(ms) &lt;&lt; '\\n'; int fir = 1; for(auto i: ms)&#123; if(fir)&#123; fir = 0; &#125; else&#123; cout &lt;&lt; \" \"; &#125; cout &lt;&lt; i; &#125; cout &lt;&lt; '\\n'; &#125; /********** Good Luck :) **********/ int main() &#123; IOS(); ll n; while(cin &gt;&gt; n)&#123; play(n); &#125; return 0; &#125; 後記 AfterwordThat’s it.暫時不知道要寫啥","categories":[{"name":"解題區","slug":"解題區","permalink":"https://blog.yangjerry.tw/categories/解題區/"},{"name":"解題報告書 - ZeroJudge","slug":"解題區/解題報告書-ZeroJudge","permalink":"https://blog.yangjerry.tw/categories/解題區/解題報告書-ZeroJudge/"}],"tags":[{"name":"multiset","slug":"multiset","permalink":"https://blog.yangjerry.tw/tags/multiset/"},{"name":"DFS","slug":"DFS","permalink":"https://blog.yangjerry.tw/tags/DFS/"}]},{"title":"e880. Q1 合影隊形","slug":"zj-e880","date":"2020-02-04T13:29:05.000Z","updated":"2020-02-04T14:07:37.012Z","comments":true,"path":"2020/02/04/zj-e880/","link":"","permalink":"https://blog.yangjerry.tw/2020/02/04/zj-e880/","excerpt":"題目 Problem題目連結：https://zerojudge.tw/ShowProblem?problemid=e880","text":"題目 Problem題目連結：https://zerojudge.tw/ShowProblem?problemid=e880 敘述 Description酷酷鯊是一支新成立的棒球隊，共有 $N$ 位球員。球隊裡原本氣氛融洽，大家都是好麻吉，同心協力爭取年度總冠軍。然而，最近一連串的比賽不順利，球員間開始出現摩擦。今天，棒球聯盟邀請了總統夫人到場開球。總統夫人是酷酷鯊隊的球迷，因此她希望能和全體球員合影留念。拍照時，球員們會站成一列。為了避免尷尬，球隊經理希望在安排拍照的隊型時，不要讓彼此有和芥蒂的球員站在一起。 舉例來說，如果有五位球員 A, B, C, D, E，其中 A 和 B 不願意站在一起，C 和 D 不願意站在一起，那麼 ABCDE 和 ABCED 不是適當的隊型，而 ACBDE 和 CADEB 則都是適當的隊型。 現在請你撰寫一個程式，協助球隊經理在總統夫人落臨之前，排出一個適當的合影隊型吧! 輸入 Input第一行為球員人數 $N$，$N \\leq 15$。（球員代號從 A 開始編起。） 第二行為有摩擦的球員配對數 $M$，$M \\leq 50$。 第三行開始，每一行有兩個字元，代表有摩擦的兩個球員代號。兩個字元間以一個空格隔開。 輸出 Output請輸出以字典遞增排序方式的第一個適合隊型。如果沒有任何適合隊型，請輸出 No Solution。計算時間不得超過2秒鐘。 範例輸入 Sample Input範例1: 5 2 A B C D 範例2: 4 4 A B C D C A C B 範例輸出 Sample Output範例1: ACBDE 範例2: No Solution 提示 Hint題解 Solution熟悉 STL 一定知道 next_permutation 可以直接窮舉但是，直接窮舉 $15! = 1307674368000$ 種可能，沒辦法在 2 秒跑完（ZJ 直接開 1 秒）必定要自己寫 DFS 剪枝了 用個 $15 \\times 15$ 的矩陣紀錄他們能不能站在一起DFS 時候 當前的成員 跟 前一個被選的成員，查詢能不能站在一起可以就往下尋找，不能就可以直接找下一位成員 程式碼 Accepted Code/* Author: Jerry Yang C.H. (tico88612) Date: 2020/2/4 */ #include &lt;bits/stdc++.h&gt; using namespace std; typedef long long ll; typedef pair&lt;ll, ll&gt; pii; typedef pair&lt;double,double&gt; pdd; #define SQ(i) ((i)*(i)) #define MEM(a, b) memset(a, (b), sizeof(a)) #define SZ(i) int(i.size()) #define FOR(i, j, k, in) for (int i=j ; i&lt;k ; i+=in) #define RFOR(i, j, k, in) for (int i=j ; i&gt;=k ; i-=in) #define REP(i, j) FOR(i, 0, j, 1) #define REP1(i,j) FOR(i, 1, j+1, 1) #define RREP(i, j) RFOR(i, j, 0, 1) #define ALL(_a) _a.begin(),_a.end() #define MP make_pair #define PB push_back #define EB emplace_back #define X first #define Y second #ifdef tmd #define debug(...) do&#123;\\ fprintf(stderr,\"%s - %d (%s) = \",__PRETTY_FUNCTION__,__LINE__,#__VA_ARGS__);\\ _do(__VA_ARGS__);\\ &#125;while(0) template&lt;typename T&gt;void _do(T &amp;&amp;_x)&#123;cerr&lt;&lt;_x&lt;&lt;endl;&#125; template&lt;typename T,typename ...S&gt; void _do(T &amp;&amp;_x,S &amp;&amp;..._t)&#123;cerr&lt;&lt;_x&lt;&lt;\" ,\";_do(_t...);&#125; template&lt;typename _a,typename _b&gt; ostream&amp; operator &lt;&lt; (ostream &amp;_s,const pair&lt;_a,_b&gt; &amp;_p)&#123;return _s&lt;&lt;\"(\"&lt;&lt;_p.X&lt;&lt;\",\"&lt;&lt;_p.Y&lt;&lt;\")\";&#125; template&lt;typename It&gt; ostream&amp; _OUTC(ostream &amp;_s,It _ita,It _itb) &#123; _s&lt;&lt;\"&#123;\"; for(It _it=_ita;_it!=_itb;_it++) &#123; _s&lt;&lt;(_it==_ita?\"\":\",\")&lt;&lt;*_it; &#125; _s&lt;&lt;\"&#125;\"; return _s; &#125; template&lt;typename _a&gt; ostream &amp;operator &lt;&lt; (ostream &amp;_s,vector&lt;_a&gt; &amp;_c)&#123;return _OUTC(_s,ALL(_c));&#125; template&lt;typename _a&gt; ostream &amp;operator &lt;&lt; (ostream &amp;_s,set&lt;_a&gt; &amp;_c)&#123;return _OUTC(_s,ALL(_c));&#125; template&lt;typename _a&gt; ostream &amp;operator &lt;&lt; (ostream &amp;_s,deque&lt;_a&gt; &amp;_c)&#123;return _OUTC(_s,ALL(_c));&#125; template&lt;typename _a,typename _b&gt; ostream &amp;operator &lt;&lt; (ostream &amp;_s,map&lt;_a,_b&gt; &amp;_c)&#123;return _OUTC(_s,ALL(_c));&#125; template&lt;typename _t&gt; void pary(_t _a,_t _b)&#123;_OUTC(cerr,_a,_b);cerr&lt;&lt;endl;&#125; #define IOS() #else #define debug(...) #define pary(...) #define endl '\\n' #define IOS() ios_base::sync_with_stdio(0);cin.tie(0) #endif const ll MOD = 1000000007LL; const ll INF = 0x3f3f3f3f3f3f3f3fLL; const int iNF = 0x3f3f3f3f; // const ll MAXN = int N, M; bool non[16][16] = &#123;0&#125;; bool judge = false; bool visited[16] = &#123;0&#125;; void dfs(int now, string ans)&#123; if(now == N)&#123; cout &lt;&lt; ans &lt;&lt; '\\n'; judge = 1; return; &#125; for(int i = 0; i &lt; N &amp;&amp; !judge; i++)&#123; if(!visited[i] &amp;&amp; now &amp;&amp; !non[ans[now - 1] - 'A'][i])&#123; visited[i] = 1; string tmp = ans + (char)(i + 'A'); dfs(now + 1, tmp); visited[i] = 0; &#125; else if(!visited[i] &amp;&amp; now == 0)&#123; visited[i] = 1; string tmp = ans + (char)(i + 'A'); dfs(now + 1, tmp); visited[i] = 0; &#125; &#125; &#125; /********** Good Luck :) **********/ int main() &#123; IOS(); cin &gt;&gt; N &gt;&gt; M; while(M--)&#123; string aa, bb; cin &gt;&gt; aa &gt;&gt; bb; int a = aa[0] - 'A'; int b = bb[0] - 'A'; non[a][b] = non[b][a] = 1; &#125; dfs(0, \"\"); if(!judge) cout &lt;&lt; \"No Solution\" &lt;&lt; '\\n'; return 0; &#125; 後記 Afterword一開始寫完以為會被 TLE，沒想到是直接 AC然後交大程式寒訓因為武漢肺炎停辦 QAQ 之後再來寫一篇文，有關交大程式寒訓默哀文","categories":[{"name":"解題區","slug":"解題區","permalink":"https://blog.yangjerry.tw/categories/解題區/"},{"name":"解題報告書 - ZeroJudge","slug":"解題區/解題報告書-ZeroJudge","permalink":"https://blog.yangjerry.tw/categories/解題區/解題報告書-ZeroJudge/"}],"tags":[{"name":"DFS","slug":"DFS","permalink":"https://blog.yangjerry.tw/tags/DFS/"},{"name":"窮舉","slug":"窮舉","permalink":"https://blog.yangjerry.tw/tags/窮舉/"},{"name":"剪枝","slug":"剪枝","permalink":"https://blog.yangjerry.tw/tags/剪枝/"}]},{"title":"Flutter 心得 和 URL 網址無法打開之踩雷","slug":"flutter-url-encoder","date":"2019-12-18T03:46:03.000Z","updated":"2020-06-23T09:05:40.845Z","comments":true,"path":"2019/12/18/flutter-url-encoder/","link":"","permalink":"https://blog.yangjerry.tw/2019/12/18/flutter-url-encoder/","excerpt":"又是一種踩雷日常，想看看開發自己的 App 是什麼感覺","text":"又是一種踩雷日常，想看看開發自己的 App 是什麼感覺 可是我又不想兩個平台語言都學Android 陣營就是 Kotlin、JavaiOS 陣營就是 Swift、Objective-C 於是就選了 Google 旗下最新的框架 —— Flutter 心得整體架構有點自由，自由到我都不知道 model 要放哪 LULUI 也很好編排，除非你要改一些位置相關的 Code 也可以去 Google 找找看我原本只想寫 UI結果不小心就把資料一起 Get 進來了 而且整體 Code 也沒有不多 URL 網址無法打開之踩雷前陣子才到的雷就是網址問題cURL 拿到的是網址含有中文字但是呢！瀏覽器會很有“智慧”的幫你轉成 URL Encode但在 Dart 裡面就沒有這種“智慧”東西了前面要求我們要先 canLaunch才可以 launch 網址 _launchURL(String url) async &#123; if (await canLaunch(url)) &#123; await launch(url); &#125; else &#123; throw 'Could not launch $url'; &#125; &#125; 可是寫完之後要呼叫網址檔案時，就會 throw exception結果後來觀察到用 PHP cURL 拿到的網址，全數字沒問題，但出現中文就會 throw exception我還在想是不是中文問題，還去 Google url_launcher flutter chinese但發現根本沒有相關結果直到我看到有個結果是網址有空格，要轉成 URL Encode我才想到，要先轉成 URL Encode 瀏覽器才知道於是就改成這樣 _launchURL(String url) async &#123; url = Uri.encodeFull(url); // url to url encode. if (await canLaunch(url)) &#123; await launch(url); &#125; else &#123; throw 'Could not launch $url'; &#125; &#125; 這個坑，害我想了一整晚，原來是 Encode 問題啊！","categories":[{"name":"程式","slug":"程式","permalink":"https://blog.yangjerry.tw/categories/程式/"},{"name":"Flutter","slug":"程式/Flutter","permalink":"https://blog.yangjerry.tw/categories/程式/Flutter/"}],"tags":[{"name":"Flutter","slug":"Flutter","permalink":"https://blog.yangjerry.tw/tags/Flutter/"},{"name":"url_launcher","slug":"url-launcher","permalink":"https://blog.yangjerry.tw/tags/url-launcher/"}]},{"title":"Dev-C++ 手動更新編譯器至 G++ 8.2.0","slug":"devcplusplus-gplusplus-8","date":"2019-11-30T07:26:46.000Z","updated":"2020-11-28T02:57:48.858Z","comments":true,"path":"2019/11/30/devcplusplus-gplusplus-8/","link":"","permalink":"https://blog.yangjerry.tw/2019/11/30/devcplusplus-gplusplus-8/","excerpt":"這個筆記做一下記錄，我在 Windows 10 上的更新","text":"這個筆記做一下記錄，我在 Windows 10 上的更新 很多人都知道 Dev-C++ 已經算是不更新的 IDE 了但我在 Windows 寫 C / C++ 還是用 Dev-C++可是版本停留在 TDM-GCC 4.9.2（Windows 最新的版本為 G++ 8.2.0）新版的標準想使用都不能用我們直接來手動更新吧！ 1. 安裝 MinGW進到 MinGW 官網 點入 Downloads 進入後請你找到 mingw-get-setup.exe 並下載 下載連結參考 就開始 Install 選擇路徑，需要記得位置！ 點下去就會開始安裝，安裝完畢後就開啟 MinGW Installation Manager 把 mingw32-base-bin 跟 mingw32-gcc-g++-bin 這兩個 Mark for Installation 然後就 Apply Changes 點下 Apply 安裝完畢後，進到你安裝的路徑 進入 bin 資料夾，複製路徑 編輯環境變數 Path 加入到環境變數 Path 確定後，打開「命令提示字元」輸入 g++ -v 如果顯示這些文字，就是安裝成功 2. Dev-C++ 加入 MinGW G++ 8.2.0打開 Dev-C++ 工具 $\\rightarrow$ 編譯器選項 按到第三個 $+$ 選擇你剛剛 MinGW 安裝的地方 成功的話，上方就會自己變更為 MinGW GCC 8.2.0 因為舊版 Dev-C++ 語言標準只有停留在 C++11，我們下方命令列手動加入 -std=c++17 按下確定後，就可以來測試 Sample Code 了 #include&lt;iostream&gt; #include&lt;tuple&gt; using namespace std; std::tuple&lt;char, int, bool&gt; mytuple() &#123; char a = 'a'; int i = 123; bool b = true; return std::make_tuple(a, i, b); &#125; int main() &#123; auto [a, i, b] = mytuple(); // Structured Bindings in C++17 is available. // Using in C++14 will get warning. cout &lt;&lt; \"Hello C++17 \" &lt;&lt; a &lt;&lt; \" \" &lt;&lt; i &lt;&lt; \" \" &lt;&lt; b &lt;&lt; endl; return 0; &#125; 3. 注意事項如果你是競賽選手，你應該知道 GNU 的編譯器有個 bits/stdc++.h 引入所有函式庫的黑魔法 但是直接使用會 Compile Error 個人爬了一下 Reddit 的 C++ 版 得知 C++17 的 filesystem 跟 charconv 在 Windows 是無法得到原生支援的 只有 Unix 的相關成員才能做得到（E.g. Mac / Linux） 所以前面 bits/stdc++.h include 進來以前先把 filesystem 跟 charconv Define 掉 #define _GLIBCXX_FILESYSTEM 1 #define _GLIBCXX_CHARCONV 1 #include&lt;bits/stdc++.h&gt; using namespace std; std::tuple&lt;char, int, bool&gt; mytuple() &#123; char a = 'a'; int i = 123; bool b = true; return std::make_tuple(a, i, b); &#125; int main() &#123; auto [a, i, b] = mytuple(); // Structured Bindings in C++17 is available. // Using in C++14 will get warning. cout &lt;&lt; \"Hello C++17 \" &lt;&lt; a &lt;&lt; \" \" &lt;&lt; i &lt;&lt; \" \" &lt;&lt; b &lt;&lt; endl; return 0; &#125; 後記 Afterword我後來發現 Code::Blocks 用 C++17 的 bits/stdc++.h 也有同個問題。 果然真的沒有原生 Windows 支援（唯一希望應該是 MSVC++ 的編譯器） 我想這就是 MinGW 一直沒有讓 G++ 上去 9.2.0 的關係吧！","categories":[{"name":"程式","slug":"程式","permalink":"https://blog.yangjerry.tw/categories/程式/"},{"name":"Dev-C++","slug":"程式/Dev-C","permalink":"https://blog.yangjerry.tw/categories/程式/Dev-C/"}],"tags":[{"name":"程式","slug":"程式","permalink":"https://blog.yangjerry.tw/tags/程式/"},{"name":"Dev-C++","slug":"Dev-C","permalink":"https://blog.yangjerry.tw/tags/Dev-C/"},{"name":"更新","slug":"更新","permalink":"https://blog.yangjerry.tw/tags/更新/"},{"name":"競賽","slug":"競賽","permalink":"https://blog.yangjerry.tw/tags/競賽/"}]},{"title":"c421. pA 雲端列印","slug":"zj-c421","date":"2019-11-22T16:33:32.000Z","updated":"2019-11-22T16:46:08.636Z","comments":true,"path":"2019/11/23/zj-c421/","link":"","permalink":"https://blog.yangjerry.tw/2019/11/23/zj-c421/","excerpt":"題目 Problem題目連結：https://zerojudge.tw/ShowProblem?problemid=c421","text":"題目 Problem題目連結：https://zerojudge.tw/ShowProblem?problemid=c421 敘述 Description雲端列印服務公司提出一個新型服務。 該公司有 n 台 3D 印表機, 其中印表機 P1,P2, …, Pk 用以優先服務最為重要客戶, 印表機 Pk+1, Pk+2, …, Pn 列印速度較慢,用以優先服務一般客戶。 每個客戶依該年度所選擇服務等級及所繳交費用可有不同的列印優先權, 以 1, …, 10000 表示之; 10000 代表最高列印優先權,1 代表最低列印優先權。 為了不讓低列印優先權的客戶永無止盡的等待, 印表機 P1, P2, …, Pk 一旦有空,等待的工作中優先權最高的工作就會被交付列印; 而印表機 Pk+1, Pk+2, …, Pn一旦有空, 等待的工作中優先權最低的工作就會被交付列印。 請寫一個程式列舉交付列印工作的順序。 輸入 Input輸入只有一行,共有不定數量的整數, 整數可為{-2, -1, 0, 1, 2, …, 10000},兩整數之間以一個空白隔開。 -2 表示印表機 P1, P2, …, Pk其中一台有空, 可以列印最高優先權的工作; -1 表示印表機 Pk+1, Pk+2, …, Pn其中一台有空, 可以列印最低優先權的工作;1, 2, …, 10000 代表新增一個優先權為該數字之工作; 0 則代表輸入結束。 若輸入為 -1 或 -2但無等待列印的工作,則不列印,需等待下一個 -1 或 -2 才再列印新的工作。 輸出 Output請依被列印工作的順序,輸出該工作的優先權代號,之後緊接著一個空白。 尚未交付列印的工作不需輸出。 範例輸入 Sample Input// Example 1 20 15 10 -2 -1 -1 0 // Example 2 1 2 3 -2 4 5 6 -1 7 0 範例輸出 Sample Output// Example 1 20 10 15 // Example 2 3 1 提示 Hint 本題共有五組測試資料。每組可有多個輸入檔案,全部答對該組才得分。第一組 15 分,最多 11 個工作需要被列印,且只有一次交付列印指令。第二組 15 分,最多 20 個工作需要被列印,且只有二次交付列印指令。第三組 20 分,最多 50 個工作需要被列印,且最多有 25 次交付列印指令。第四組 20 分,最多 15,000 個工作需要被列印或交付列印。第五組 30 分,最多 500,000 個工作需要被列印或交付列印。 使用 C++作答的同學,請在程式碼開頭加上#include,並利用 scanf讀入資料。 使用cin讀入資料可能會因為讀入效率太差以致於程式執行時間超過限制。 題解 Solutionmultiset 的 erase 如果是代入數字，他不會是刪除一個，而是那個數字全部刪除 = = 所以要代入的是 iterator，也就是位置 multiset 會自動幫我們排序好，由小至大 m.begin()，就是最小。 m.rbegin()，就是反向的開始，就是最尾端，也就是最大。 可是 erase 只能代入 iterator，不能是 reverse_iterator 所以還要再把位址轉過來（或者你直接 end()，做遞減運算子也可以） 程式碼 Accepted Code/* Author: Jerry Yang C.H. (tico88612) Date: 2019/11/22 */ #include &lt;bits/stdc++.h&gt; using namespace std; typedef long long ll; typedef pair&lt;ll, ll&gt; pii; typedef pair&lt;double,double&gt; pdd; #define SQ(i) ((i)*(i)) #define MEM(a, b) memset(a, (b), sizeof(a)) #define SZ(i) int(i.size()) #define FOR(i, j, k, in) for (int i=j ; i&lt;k ; i+=in) #define RFOR(i, j, k, in) for (int i=j ; i&gt;=k ; i-=in) #define REP(i, j) FOR(i, 0, j, 1) #define REP1(i,j) FOR(i, 1, j+1, 1) #define RREP(i, j) RFOR(i, j, 0, 1) #define ALL(_a) _a.begin(),_a.end() #define MP make_pair #define PB push_back #define EB emplace_back #define X first #define Y second #ifdef tmd #define debug(...) do&#123;\\ fprintf(stderr,\"%s - %d (%s) = \",__PRETTY_FUNCTION__,__LINE__,#__VA_ARGS__);\\ _do(__VA_ARGS__);\\ &#125;while(0) template&lt;typename T&gt;void _do(T &amp;&amp;_x)&#123;cerr&lt;&lt;_x&lt;&lt;endl;&#125; template&lt;typename T,typename ...S&gt; void _do(T &amp;&amp;_x,S &amp;&amp;..._t)&#123;cerr&lt;&lt;_x&lt;&lt;\" ,\";_do(_t...);&#125; template&lt;typename _a,typename _b&gt; ostream&amp; operator &lt;&lt; (ostream &amp;_s,const pair&lt;_a,_b&gt; &amp;_p)&#123;return _s&lt;&lt;\"(\"&lt;&lt;_p.X&lt;&lt;\",\"&lt;&lt;_p.Y&lt;&lt;\")\";&#125; template&lt;typename It&gt; ostream&amp; _OUTC(ostream &amp;_s,It _ita,It _itb) &#123; _s&lt;&lt;\"&#123;\"; for(It _it=_ita;_it!=_itb;_it++) &#123; _s&lt;&lt;(_it==_ita?\"\":\",\")&lt;&lt;*_it; &#125; _s&lt;&lt;\"&#125;\"; return _s; &#125; template&lt;typename _a&gt; ostream &amp;operator &lt;&lt; (ostream &amp;_s,vector&lt;_a&gt; &amp;_c)&#123;return _OUTC(_s,ALL(_c));&#125; template&lt;typename _a&gt; ostream &amp;operator &lt;&lt; (ostream &amp;_s,set&lt;_a&gt; &amp;_c)&#123;return _OUTC(_s,ALL(_c));&#125; template&lt;typename _a&gt; ostream &amp;operator &lt;&lt; (ostream &amp;_s,deque&lt;_a&gt; &amp;_c)&#123;return _OUTC(_s,ALL(_c));&#125; template&lt;typename _a,typename _b&gt; ostream &amp;operator &lt;&lt; (ostream &amp;_s,map&lt;_a,_b&gt; &amp;_c)&#123;return _OUTC(_s,ALL(_c));&#125; template&lt;typename _t&gt; void pary(_t _a,_t _b)&#123;_OUTC(cerr,_a,_b);cerr&lt;&lt;endl;&#125; #define IOS() #else #define debug(...) #define pary(...) #define endl '\\n' #define IOS() ios_base::sync_with_stdio(0);cin.tie(0) #endif const ll MOD = 1000000007; const ll INF = 0x3f3f3f3f3f3f3f3f; const int iNF = 0x3f3f3f3f; // const ll MAXN = /********** Good Luck :) **********/ int main() &#123; IOS(); int enter; int fir = 1; multiset&lt;int&gt; m; while(cin &gt;&gt; enter &amp;&amp; enter)&#123; if(enter &gt; 0)&#123; m.insert(enter); &#125; else if(enter == -1)&#123; if(SZ(m) &gt; 0)&#123; if(!fir) cout &lt;&lt; \" \"; else fir = 0; cout &lt;&lt; *m.begin(); m.erase(m.begin()); &#125; &#125; else if(enter == -2)&#123; if(SZ(m) &gt; 0)&#123; if(!fir) cout &lt;&lt; \" \"; else fir = 0; cout &lt;&lt; *m.rbegin(); m.erase(next(m.rbegin()).base()); &#125; &#125; &#125; cout &lt;&lt; '\\n'; return 0; &#125; 後記 AfterwordZJ —— 今晚打老虎 這題也可以用 multiset 完成！","categories":[{"name":"解題區","slug":"解題區","permalink":"https://blog.yangjerry.tw/categories/解題區/"},{"name":"解題報告書 - ZeroJudge","slug":"解題區/解題報告書-ZeroJudge","permalink":"https://blog.yangjerry.tw/categories/解題區/解題報告書-ZeroJudge/"}],"tags":[{"name":"multiset","slug":"multiset","permalink":"https://blog.yangjerry.tw/tags/multiset/"}]},{"title":"如何問個願意讓人回答的程式問題","slug":"how-to-ask-a-good-question","date":"2019-11-21T14:30:23.000Z","updated":"2020-06-23T09:09:32.118Z","comments":true,"path":"2019/11/21/how-to-ask-a-good-question/","link":"","permalink":"https://blog.yangjerry.tw/2019/11/21/how-to-ask-a-good-question/","excerpt":"有鑒於社團版上發問風氣不好，故此特發一篇新手教學「如何問個願意讓人回答的程式問題」老手或電神請直接關掉或回上一頁","text":"有鑒於社團版上發問風氣不好，故此特發一篇新手教學「如何問個願意讓人回答的程式問題」老手或電神請直接關掉或回上一頁 程式語言讀書會(X)拍賣會(?)大約從 11 月初開始，常常冒出一些「哪裡出了問題呢」「怎麼跑不出來」「有哪個大大發現有那裡錯誤嗎」貼出錯誤訊息、或者就在 FB 上「直接」貼程式碼或者直接丟一句說「請問題目怎麼解」，貼出題目敘述然後留言就幫忙回答(X)開始喊價(O) 嗯～其實想說的是，問問題的目的要做什麼？你是希望： 理解原因、原理，並且獲得知識、解答 直接貼給我答案 如果你是選項 2.，你直接貼出價碼，乖乖付錢，找別人幫你寫就好你也有你自己的專業，朋友想要請你做你專業的事情，還要免費付出，你會想接嗎？「別人努力得到的，你憑什麼去免費取呢？」 如果你是選項 1.，那就看好這篇文章吧！ 問題守則每個人都可以問問題，不分難易都可以問每個人都有新手時期，有問題會發問是正常的 1. 你想要做什麼結果？說明你的目標，別人才知道要做什麼程式題目要附上文件、解題連結如果你是自己想寫的，說明跟要求盡量詳細 2. 現在跑出什麼情況？錯誤Ｘ：只是打「怎麼跑不出來」「有哪個大大發現有那裡錯誤嗎」 這樣問問題只會讓別人覺得你是伸手牌，要請私人家教之類的請直接付錢 正確Ｏ：錯誤訊息詳列出來\b，錯誤訊息請事先 Google 找好，語法錯誤請參考該語言的範例程式，Google 方式請參考第 4 點 3. 你覺得是什麼問題？可能解法？你一定會有當前的 Code 或當前的想法 如果是 OJ 解題者，應該會拿到 WA, TLE, MLE, RE 之類的錯誤就請你把當前的想法打出來，不要只是說「我拿到了 WA」這類簡短語句 有程式碼也可以貼上來，貼上方式請參考第 5 點 4. Google 查了什麼？這裡先不討論會不會 Google 搜尋（因為有些人不會，畢竟下關鍵字會稍微吃一點技巧） 這裡先教新手 Google 最簡單的方式：把錯誤訊息、錯誤代碼通通貼上去 如果你會 Google 的話，你可以把搜尋看到的東西放上來哪一句話不懂、哪些覺得跟你的想像有差距都可以問 如果你不會 Google，也可以禮貌性詢問「請問這個知識點的關鍵字是什麼呢？」（當然，如果你每個貼文都一直問很基礎的問題，別人也會覺得煩，也請盡快學會如何 Google 搜尋） 5. 程式碼排版錯誤Ｘ：「直接貼在 FB 上」、「手機拍照」 你看了眼睛不會痛但不代表別人眼睛不會痛但不代表別人眼睛不會痛但不代表別人眼睛不會痛因為很重要所以說三次，可以讓別人舒服地看你的問題才是正確的 正確Ｏ：「放在貼 Code 網站」、「螢幕截圖」 以下網站都可以貼 Code，當然不只這些： https://ideone.com http://codepad.org/ https://gist.github.com/ https://pastebin.com/ https://repl.it/ 6. 問完不要刪文也不算是守則，算是禮儀 有些新手會覺得問基礎問題很丟臉想刪掉前面有說了，每個人都有新手時期，問簡單問題都沒關係 如果你刪文了，其實會給別人的感受不好感覺像是被利用完就丟的感覺（想不到比較恰當的比喻@@） 問完問題最多可以直接關留言，但不要直接刪文 總結至少不要讓別人覺得 遵守上述的原則，至少不會被討厭或被留言攻擊 維護社團風氣你我有責，共勉之！ 後記話說，為什麼不遵守原則的新手文，都這麼容易釣出電神？你有頭緒嗎？","categories":[{"name":"生活","slug":"生活","permalink":"https://blog.yangjerry.tw/categories/生活/"}],"tags":[{"name":"程式","slug":"程式","permalink":"https://blog.yangjerry.tw/tags/程式/"},{"name":"新手","slug":"新手","permalink":"https://blog.yangjerry.tw/tags/新手/"},{"name":"問題","slug":"問題","permalink":"https://blog.yangjerry.tw/tags/問題/"}]},{"title":"結束 2019 年的暑假","slug":"2019-summer","date":"2019-09-18T02:41:23.000Z","updated":"2020-06-23T09:09:20.259Z","comments":true,"path":"2019/09/18/2019-summer/","link":"","permalink":"https://blog.yangjerry.tw/2019/09/18/2019-summer/","excerpt":"暑假前開了一堆蠻有意義的支線","text":"暑假前開了一堆蠻有意義的支線 Digi Talent 計畫我想等 12 月計畫結束後，再來打數篇過程心得文 整個實習根本不可能用一篇寫完，應該會分好幾個過程 NCPU 2019NCPU 叫做「全國私立大專校院程式競賽」 指揮學弟當奴隸翻譯題目猜測資，我負責吃點心 Coding 第一次出征就拿到名次 6 / 45 隊伍 之後也有一篇獨立的過程心得文，等我有空再寫 Digi Talent 必修課 —— 資料科學兩次實體上課 7/15 開始 跟 7/29 結訓 要報告小專題，因為中間跑去清大當營隊工人，直接把隊友放生 然後，就躺著過了(✪ω✪) 清大暑期程式競賽集訓營 工人培訓的 5 ~ 6 天都一直在寫程式，聽大神講課，吃點心，幫忙學員 AC 掉簡單題 營隊主題是「為美好的世界獻上祝福」 工人們投票出來是「來自深淵」 最後看的是「烏鴉坐飛機」（成龍歷險記） 我：？？？？？？ 去清大也交了一些朋友，GitHub 也多一個 Follower 彈鋼琴後來迷上「來自深淵」這部動漫 很喜歡「Hanezeve Caradhina」，但目標是彈「Deep in Abyss」 讓我很想重學鋼琴啦！ 商業企劃 &amp; 簡報製作工研院辦的活動 講師：黃永猛 之後也會有獨立的心得文，不過教材就不公開了（教材版權為講師本人），他說只分享給有緣的人 OwO 最後以「參訪新竹工研院、清大暑期程式競賽集訓營慶功宴」結束這個暑假 新竹工研院參訪之後也會有獨立的心得文，想講的是，中秋演唱會真的精彩啊！！ 茄子蛋、李佳歡、李千娜、Matzka 後來回去聽 Matzka 的 一朵花，感覺原曲很慢，唱現場可能有加快，但我覺得現場比較好聽 OwO 清大暑期程式競賽集訓營 慶功宴就是吃，沒了 OwO 後記前陣子筆電的罷工也讓我心疲憊了一陣子 不過，我再度重返，已經能繼續前進了，加油！ 但 disqus 的排版有點爛掉了，先暫時關閉留言 QQ","categories":[{"name":"生活","slug":"生活","permalink":"https://blog.yangjerry.tw/categories/生活/"}],"tags":[{"name":"暑假","slug":"暑假","permalink":"https://blog.yangjerry.tw/tags/暑假/"},{"name":"Digi","slug":"Digi","permalink":"https://blog.yangjerry.tw/tags/Digi/"},{"name":"NCPU","slug":"NCPU","permalink":"https://blog.yangjerry.tw/tags/NCPU/"},{"name":"清大暑期程式競賽集訓營","slug":"清大暑期程式競賽集訓營","permalink":"https://blog.yangjerry.tw/tags/清大暑期程式競賽集訓營/"},{"name":"鋼琴","slug":"鋼琴","permalink":"https://blog.yangjerry.tw/tags/鋼琴/"},{"name":"工研院","slug":"工研院","permalink":"https://blog.yangjerry.tw/tags/工研院/"}]},{"title":"e378. 撞來撞去","slug":"zj-e378","date":"2019-09-18T02:00:38.000Z","updated":"2019-09-18T02:32:19.560Z","comments":true,"path":"2019/09/18/zj-e378/","link":"","permalink":"https://blog.yangjerry.tw/2019/09/18/zj-e378/","excerpt":"題目 Problem題目連結：https://zerojudge.tw/ShowProblem?problemid=e378","text":"題目 Problem題目連結：https://zerojudge.tw/ShowProblem?problemid=e378 敘述 Description現在地板上有兩個立方體和一面垂直於地板的牆壁 離牆壁較遠的立方體以等速撞上另一個立方體,使其撞上牆壁並以原路徑反彈 假設沒有摩擦力且所有碰撞均為完美彈性碰撞(也就是沒有能量散失) 且離牆壁較遠的立方體的質量是離牆壁較近的立方體的10x倍 給你x,請求出總共會碰撞幾次 輸入 Input每一行一個非負偶數x(x&lt;923) 輸出 Output總共會碰撞幾次 範例輸入 Sample Input0 範例輸出 Sample Output3 提示 Hint輸出的數字可能很大,但是跟大數運算無關 還有,拜託知道的人不要破梗 題解 Solution想必都點到這裡了，應該是解不出來的，對吧？那就來破梗吧！答案就在作者身上 ……………… 什麼？你還是不知道？給你看這個影片吧！ 至於為什麼，參考影片就放這裡，自己看吧！ 3B1B —— 偏向數學解答（有中文 CC 字幕） 佑來了 —— 偏向物理解答 程式碼 Accepted Code/* Author: Jerry Yang C.H. (tico88612) Date: 2019/9/18 */ #include &lt;iostream&gt; using namespace std; string pi = \"314159265358979323846264338327950288419716939937510582097494459230781640628620899862803482534211706798214808651328230664709384460955058223172535940812848111745028410270193852110555964462294895493038196442881097566593344612847564823378678316527120190914564856692346034861045432664821339360726024914127372458700660631558817488152092096282925409171536436789259036001133053054882046652138414695194151160943305727036575959195309218611738193261179310511854807446237996274956735188575272489122793818301194912983367336244065664308602139494639522473719070217986094370277053921717629317675238467481846766940513\"; /********** Good Luck :) **********/ int main() &#123; ios_base::sync_with_stdio(0);cin.tie(0); int N; while (cin &gt;&gt; N)&#123; for(int i = 0; i &lt;= N / 2; i++) cout &lt;&lt; pi[i]; cout &lt;&lt; '\\n'; &#125; return 0; &#125; 後記 Afterword看到這題目我還在想這到底是在供三小在看到兩個立方體、碰撞、$10^{x}$才想起以前有看過類似的東西","categories":[{"name":"解題區","slug":"解題區","permalink":"https://blog.yangjerry.tw/categories/解題區/"},{"name":"解題報告書 - ZeroJudge","slug":"解題區/解題報告書-ZeroJudge","permalink":"https://blog.yangjerry.tw/categories/解題區/解題報告書-ZeroJudge/"}],"tags":[{"name":"建表","slug":"建表","permalink":"https://blog.yangjerry.tw/tags/建表/"},{"name":"PI","slug":"PI","permalink":"https://blog.yangjerry.tw/tags/PI/"}]},{"title":"e338. 放暑假了!!!!!...可惜要上暑輔...開學後還要模考...","slug":"zj-e338","date":"2019-08-24T05:17:44.000Z","updated":"2019-12-15T12:43:21.748Z","comments":true,"path":"2019/08/24/zj-e338/","link":"","permalink":"https://blog.yangjerry.tw/2019/08/24/zj-e338/","excerpt":"題目 Problem題目連結：https://zerojudge.tw/ShowProblem?problemid=e338","text":"題目 Problem題目連結：https://zerojudge.tw/ShowProblem?problemid=e338 敘述 Description段考後的延平: https://drive.google.com/file/d/1j4qESZGdI0jQW6uuxcSb7tfNsq_SB_vl/view?usp=sharing XD 輸入 Input一行一個非負整數n(n&lt;2^31) 輸出 Output輸出此整數在二進位中1的個數 範例輸入 Sample Input1 2 3 4 範例輸出 Sample Output1 1 2 1 提示 Hint__builtin_popcount()夠快嗎? 2018/8/9 調整時限 題解 Solution我覺得作者想考$O(1)$算法但不幸的還是壓到了一般輸入這題就算單純用 scanf / printf 還是不會過 分兩個大方向去 AC 這題 1. 讀取模板參考這篇文：https://vincent97198.blogspot.com/2019/06/iozerojudge.html 我只是稍微改了個 EOF 而已（EOF 被定義為 -1，但是本題數入範圍可以暫時不管這東西XD）。 getchar_unlocked() 不是標準的函式，比起 getchar() 少做了很多事（詳情自己去 Google），但不要隨便使用在大型專案上。 putchar_unlocked() 亦同上。 2. 演算法參考這篇文：https://www.geeksforgeeks.org/count-set-bits-in-an-integer/ 第四點就是先把 Bit 個數建表，然後 4 個 4 個讀取加起來 不過總複雜度也不是$O(1)$，嚴格來說似乎是$O(\\log_{16}{N})$ 程式碼 Accepted Code/* Author: Jerry Yang C.H. (tico88612) Date: 2019/8/18 */ #include &lt;cstdio&gt; #include &lt;cctype&gt; inline int redi() &#123; int ret = 0, f = 0; char ch = getchar_unlocked(); while (!isdigit(ch)) &#123; if (ch == '-') f = 1; if(ch == EOF) return EOF; ch = getchar_unlocked(); &#125; while (isdigit(ch)) &#123; ret = ret * 10 + ch - 48; ch = getchar_unlocked(); &#125; return f ? -ret : ret; &#125; inline void print(int x) &#123; if (x &lt; 0) &#123; putchar_unlocked('-'); x = -x; &#125; int y = 10, len = 1; while (y &lt;= x) &#123; y *= 10; len++; &#125; while (len--) &#123; y /= 10; putchar_unlocked(x / y + 48); x %= y; &#125; &#125; int num_to_bits[16] = &#123;0, 1, 1, 2, 1, 2, 2, 3, 1, 2, 2, 3, 2, 3, 3, 4&#125;; unsigned int countSetBitsRec(unsigned int num) &#123; if (0 == num) return num_to_bits[0]; nibble = num &amp; 0xf; return num_to_bits[nibble] + countSetBitsRec(num &gt;&gt; 4); &#125; /********** Good Luck :) **********/ int main() &#123; int n; while((n = redi()) != EOF)&#123; print(countSetBitsRec(n)); putchar_unlocked('\\n'); &#125; return 0; &#125; 後記 Afterword這個 Submission 是壓秒過的排行上的應該也是建表過的（吧？）記憶體都比我大很多（我的 100 KB，排行上的大多都 1 MB 以上） 前陣子的 ZeroJudge 常常出現有的沒的 IO 題但這類的 IO 優化題也可能改天換個主機 Rejudge，搞不好全都 TLE 或全都 AC也不是說這種題目不好，畢竟幾乎每個人都可以在上面出題，題目多樣性很夠 XD 維持網站題目質量品質也是大家的責任","categories":[{"name":"解題區","slug":"解題區","permalink":"https://blog.yangjerry.tw/categories/解題區/"},{"name":"解題報告書 - ZeroJudge","slug":"解題區/解題報告書-ZeroJudge","permalink":"https://blog.yangjerry.tw/categories/解題區/解題報告書-ZeroJudge/"}],"tags":[{"name":"建表","slug":"建表","permalink":"https://blog.yangjerry.tw/tags/建表/"},{"name":"IO 優化","slug":"IO-優化","permalink":"https://blog.yangjerry.tw/tags/IO-優化/"},{"name":"Bit 運算","slug":"Bit-運算","permalink":"https://blog.yangjerry.tw/tags/Bit-運算/"}]},{"title":"Google Code Jam 2019 Qualification Round 亂寫の解題心得","slug":"gcj-2019-qr","date":"2019-04-08T15:00:00.000Z","updated":"2019-04-07T11:24:41.763Z","comments":true,"path":"2019/04/08/gcj-2019-qr/","link":"","permalink":"https://blog.yangjerry.tw/2019/04/08/gcj-2019-qr/","excerpt":"反正只要 30 分以上就可以進 Round 1 了","text":"反正只要 30 分以上就可以進 Round 1 了 pA 可以 WA 到把 Penalty 飆超高我也是醉了啦！ pA. Foregone Solution題意大致是說，給你個 $N$，請輸出正整數 $A, B$，並且 $A + B = N$然後 $A, B$ 不能有任何的 $4$ 出現 一開始我是用$\\div 2$方式去做的但沒有考慮太多情況然後就吃了5次WA 後來就想說$A = 1, B = N - 1$如果$B$的某個位數為$4$就把那個位數減去$1$加在$A$上然後這個解法一次就過了…（ㄏㄏ） 本題 Hidden Test 只有 1 分但$N$高達$10^{100}$，就直接用 Python 解了 T = int(input()) for i in range(1, T + 1): N = int(input()) A = 1 B = N - 1 Run = 1 while Run &lt; B: NowE = B // Run NowE = NowE % 10 if NowE == 4: A += Run B -= Run Run *= 10 print(\"Case #\" + str(i) + \": \" + str(A) + \" \" + str(B)) pB. You Can Go Your Own Way題意大致是說，給你一個 $N\\times N$ 的格子找個路徑，只能往右走$E$跟往下走$S$不能跟他給的路徑重複 就直接跟他相反就不會重複了他走$E$，你就走$S$他走$S$，你就走$E$ #pragma GCC optimize (\"O2\") #include&lt;bits/stdc++.h&gt; #include&lt;unistd.h&gt; using namespace std; typedef long long ll; typedef vector&lt;int&gt; vi; typedef pair&lt;int,int&gt; pi; #define _ ios::sync_with_stdio(0);cin.tie(0);cout.tie(0); #define FZ(n) memset((n),0,sizeof(n)) #define FMO(n) memset((n),-1,sizeof(n)) #define F first #define S second #define PB push_back #define MP make_pair #define ALL(x) begin(x),end(x) #define SZ(x) ((int)(x).size()) #define REP(i,a,b) for (int i = a; i &lt; b; i++) // Let's Fight! int main() &#123; _ int T; cin &gt;&gt; T; REP(i, 1, T + 1)&#123; int N; cin &gt;&gt; N; cout &lt;&lt; \"Case #\" &lt;&lt; i &lt;&lt; \": \"; string enter; cin &gt;&gt; enter; REP(j, 0, SZ(enter))&#123; if(enter[j] == 'S') cout &lt;&lt; \"E\"; if(enter[j] == 'E') cout &lt;&lt; \"S\"; &#125; cout &lt;&lt; '\\n'; &#125; return 0; &#125; pC. Cryptopangrams應該就直接用 Python 寫，不會寫，ToDo pD. Dat Bae互動式題目，不會寫，ToDo 總結pA 跟 pB 的 Visible Test 過就可以進 Round 1 了 另外兩題等有詳解 Code 再來試寫好了(X)","categories":[{"name":"比賽心得區","slug":"比賽心得區","permalink":"https://blog.yangjerry.tw/categories/比賽心得區/"},{"name":"Google Code Jam","slug":"比賽心得區/Google-Code-Jam","permalink":"https://blog.yangjerry.tw/categories/比賽心得區/Google-Code-Jam/"}],"tags":[{"name":"Google Code Jam","slug":"Google-Code-Jam","permalink":"https://blog.yangjerry.tw/tags/Google-Code-Jam/"},{"name":"2019","slug":"2019","permalink":"https://blog.yangjerry.tw/tags/2019/"}]},{"title":"O(1)的費氏數列？公式解就一定是O(1)？","slug":"fibonacci-is-bigO1","date":"2019-01-31T05:15:00.000Z","updated":"2020-06-23T09:13:08.360Z","comments":true,"path":"2019/01/31/fibonacci-is-bigO1/","link":"","permalink":"https://blog.yangjerry.tw/2019/01/31/fibonacci-is-bigO1/","excerpt":"我在撰寫此貼文時，原留言者已經刪留言了，反正就是說「費氏數列有公式解，複雜度就是$O(1)$」","text":"我在撰寫此貼文時，原留言者已經刪留言了，反正就是說「費氏數列有公式解，複雜度就是$O(1)$」 於是一堆國手紛紛出籠，然後就……你看就知道了原文連結：https://www.facebook.com/groups/pythontw/permalink/10158445814613438/ 甚至出現 「$\\pi$ 跟 $e$ 都存在月球上，這樣就存取最快了，$O(1)$！」 （果然用爛留言去釣高手是最快的辦法，$O(1)$！） 版上的大神在反串什麼？首先，先來簡單介紹時間複雜度（這只是大眾版的）要計算最壞的時間複雜度我們會用 big-O 假設$n$是資料個數 或 計算大小$O(1)$是常數複雜度意思是說：計算量不會與 $n$ 的大小有任何關係，Ex.$1+2+…+N$的公式解 $O(\\log{n})$是對數複雜度意思是說：計算量會與 $n$ 的大小呈現對數關係，Ex.二分搜尋法 $O(n)$是線性複雜度意思是說：計算量會與 $n$ 的大小呈現線性（直線）關係 公式解就一定是O(1)？從1加到N的算式可以寫成這樣$1+2+…+N=\\dfrac{n(n+1)}{2}$ 算式就要做一次乘法跟一次除法 不論$N$開多大，開到$10^{100}$，算式都只要做一次乘法跟一次除法就好 可是費氏數列有公式解 $Fibonacci(n)=\\dfrac{\\sqrt{5}}{5} \\cdot \\left[\\left(\\dfrac{1 + \\sqrt{5}}{2}\\right)^{n} - \\left(\\dfrac{1 - \\sqrt{5}}{2}\\right)^{n}\\right]$ 對，費氏數列有公式解，但是它不是$O(1)$ 關鍵就是這個$\\left(\\dfrac{1 + \\sqrt{5}}{2}\\right)^{n}$ 跟 $\\left(\\dfrac{1 - \\sqrt{5}}{2}\\right)^{n}$ 要算第$100$項，這東西就要乘$100$次要算第$10000$項，這東西就要乘$10000$次要算第$10^9$項，這東西就要乘$10^9$次 所以這是線性複雜度$O(n)$（高手就知道這是$O(\\log{n})$，這可以矩陣快速冪） $O(1)$的意義不是在快，而是資料量大小不論多少，他都是固定的計算次數。 如果今天我設計了一個函數：$n=1$，要計算次數是$10^8$，$n=10^6$，要計算次數是$10^8$，$n=10^{100}$，要計算次數是$10^8$，不論$n$的大小，計算次數都是$10^8$。 時間複雜度：$O(1)$，因為計算次數跟$n$沒有任何關係 總結要下什麼總結呢？我只知道原Po在原文被歪樓後就被邊緣了QQ 然後原留言者也刪留言、關臉書了。 如果討論是一直在堅持自己的意見，那就不叫討論了 結果變成競程選手們茶餘飯後的話題 整體過程大概就是這樣啦！如果有錯誤，歡迎在底下留言討論！ 2019/02/15 更新新文朝聖：https://www.facebook.com/groups/pythontw/permalink/10158487765003438/","categories":[{"name":"程式","slug":"程式","permalink":"https://blog.yangjerry.tw/categories/程式/"}],"tags":[{"name":"費氏數列","slug":"費氏數列","permalink":"https://blog.yangjerry.tw/tags/費氏數列/"},{"name":"公式解","slug":"公式解","permalink":"https://blog.yangjerry.tw/tags/公式解/"},{"name":"時間複雜度","slug":"時間複雜度","permalink":"https://blog.yangjerry.tw/tags/時間複雜度/"}]},{"title":"洛谷OJ P1031 均分纸牌","slug":"lg-1031","date":"2019-01-19T06:06:21.000Z","updated":"2019-01-19T06:36:08.937Z","comments":true,"path":"2019/01/19/lg-1031/","link":"","permalink":"https://blog.yangjerry.tw/2019/01/19/lg-1031/","excerpt":"題目 Problem題目連結：https://www.luogu.org/problemnew/show/P1031","text":"題目 Problem題目連結：https://www.luogu.org/problemnew/show/P1031 敘述 Description有$N$堆纸牌，编号分别为 $1,2,…,N$。每堆上有若干张，但纸牌总数必为$N$的倍数。可以在任一堆上取若干张纸牌，然后移动。 移牌规则为：在编号为$1$堆上取的纸牌，只能移到编号为$2$的堆上；在编号为$N$的堆上取的纸牌，只能移到编号为$N−1$的堆上；其他堆上取的纸牌，可以移到相邻左边或右边的堆上。 现在要求找出一种移动方法，用最少的移动次数使每堆上纸牌数都一样多。 例如$N=4$，$4$堆纸牌数分别为： ①$9$②$8$③$17$④$6$ 移动$3$次可达到目的： 从 ③ 取$4$张牌放到 ④ $（9,8,13,10）$-&gt; 从 ③ 取333张牌放到 ②$（9,11,10,10）$-&gt; 从 ② 取111张牌放到①$（10,10,10,10）$。 輸入 Input两行 第一行为：$N$（$N$ 堆纸牌，$1 \\leq N \\leq 100$） 第二行为：$A_1,A_2, … ,A_n$（$N$堆纸牌，每堆纸牌初始数，$1 \\leq A_i \\leq 10000$） 輸出 Output一行：即所有堆均达到相等时的最少移动次数。 範例輸入 Sample Input4 9 8 17 6 範例輸出 Sample Output3 題解 SolutionRe:我没看懂我自己的想法，居然过了因為沒有中國門號，無法在上面回，就留在這裡了 作法就是把差距移到下一個位置也就是說這堆的牌把下一堆的牌拿過來平衡反正下一堆不平衡從下下一堆再拿牌也沒關係 大概就是這樣 程式碼 Accepted Code#include &lt;bits/stdc++.h&gt; #define _ ios::sync_with_stdio(0);cin.tie(0);cout.tie(0); using namespace std; // 參考來源：https://www.luogu.org/discuss/show/75812 int main() &#123; int N,sum=0; cin&gt;&gt;N; vector&lt;int&gt; enter(N); for(int i=0;i&lt;N;i++)&#123; cin&gt;&gt;enter[i]; sum+=enter[i]; &#125; int avg=sum/N,timee=0; for(int i=0;i&lt;N-1;i++)&#123; if(enter[i]!=avg)&#123; enter[i+1]+=enter[i]-avg; timee++; &#125; &#125; cout&lt;&lt;timee&lt;&lt;'\\n'; return 0; &#125; 後記 Afterword稍微看一下討論區，這題思路也蠻多的，可以好好嘗試其他的過程 本人試寫洛谷OJ，把「新手村」都刷光光了難度排序還不錯，認識一下 NOI 或 NOIP 的題目之後也會開始寫洛谷OJ的相關題解 （為何不用洛谷裡面的 Blog 呢？） 因為我沒有中國門號 QAQ","categories":[{"name":"解題區","slug":"解題區","permalink":"https://blog.yangjerry.tw/categories/解題區/"},{"name":"解題報告書 - 洛谷OJ","slug":"解題區/解題報告書-洛谷OJ","permalink":"https://blog.yangjerry.tw/categories/解題區/解題報告書-洛谷OJ/"}],"tags":[]},{"title":"c878. 107北二5.議會質詢紀錄","slug":"zj-c878","date":"2018-11-22T02:28:47.000Z","updated":"2018-11-22T05:08:05.660Z","comments":true,"path":"2018/11/22/zj-c878/","link":"","permalink":"https://blog.yangjerry.tw/2018/11/22/zj-c878/","excerpt":"題目 Problem題目連結：https://zerojudge.tw/ShowProblem?problemid=c878","text":"題目 Problem題目連結：https://zerojudge.tw/ShowProblem?problemid=c878 敘述 Description根據民主政治的精神，政府單位有責任到民意代表所組成的會議中接受質詢與監督。某議會的議長在會期開始前就和政府單位進行下面的溝通：「我們議會希望被質詢的官員每一次都要出席。如果有兩次以上的請假紀錄，或是連續三次以上請代理的同仁來接受質詢的話，恐怕會造成雙方溝通上的緊張。」請你寫一隻程式來統計一下，當官員需要被質詢 N 次的情況下，有多少種官員出席紀錄可以保持府會的和諧關係。另外，由於答案可能會非常大，請回傳除以 100000007 之後的餘數。 輸入 Input測試資料只有一行，只有一個正整數 N，代表某一官員所要接受質詢的次數。N 的範圍從 2 到 120000。 輸出 Output輸出資料為一個數值，為能夠保持府會和諧的出席紀錄組合數量。 範例輸入 Sample Input範例輸入一： 2 範例輸入二： 3 範例輸出 Sample Output範例輸出一： 8 範例輸出二： 19 提示 Hint範例輸入一：八種組合列在下面：[出席，出席][出席，代理][代理，出席][請假，出席][請假，代理][出席，請假][代理，請假][代理，代理] 範例輸入二：會破壞行政單位和議會關係的紀錄組合：[假假出][假出假][出假假][假假代][假代假][代假假][假假假][代代代] 題解 Solution根據英國(?)研究顯示，看到 $Mod$ 題目，有 $87%$ 都是DP題想了半天還是沒有想到DP轉移式後來跟FB社團裡的大神求助後才知道兩次以上的請假紀錄或是連續三次以上請代理需要分開寫 定義一下$dp[i][j][k]$$i$是天數$j$是請假天數$k$是連續代理次數 所以可以這樣寫$dp[120001][2][3]$ 轉移式就可以這樣寫：0次請假 且 0次連續代理 = 前一天的（0次請假 且 0次連續代理 + 0次請假 且 1次連續代理 + 0次請假 且 2次連續代理） $$dp[i][0][0]=dp[i-1][0][0]+dp[i-1][0][1]+dp[i-1][0][2]$$ 0次請假 且 1次連續代理 = 前一天的（0次請假 且 0次連續代理） $$dp[i][0][1]=dp[i-1][0][0]$$ 0次請假 且 2次連續代理 = 前一天的（0次請假 且 1次連續代理） $$dp[i][0][2]=dp[i-1][0][1]$$ 1次請假 且 0次連續代理 = 前一天的（0次請假 且 0次連續代理 + 0次請假 且 1次連續代理 + 0次請假 且 2次連續代理 + 1次請假 且 0次連續代理 + 1次請假 且 1次連續代理 + 1次請假 且 2次連續代理） 這裡的會有0次請假，因為之前沒有請假，代表他今天可以請假這裡的會有1次請假，代表他今天出席 $$dp[i][1][0]=dp[i-1][0][0]+dp[i-1][0][1]+dp[i-1][0][2]+dp[i-1][1][0]+dp[i-1][1][1]+dp[i-1][1][2]$$ 1次請假 且 1次連續代理 = 前一天的（1次請假 且 0次連續代理） $$dp[i][1][1]=dp[i-1][1][0]$$ 1次請假 且 2次連續代理 = 前一天的（1次請假 且 1次連續代理） $$dp[i][1][2]=dp[i-1][1][1]$$ 程式碼 Accepted Code#include &lt;bits/stdc++.h&gt; #define _ ios::sync_with_stdio(0);cin.tie(0);cout.tie(0); using namespace std; int main()&#123; long long int dp[120002][2][3]=&#123;0&#125;; dp[1][0][0]=1; dp[1][0][1]=1; dp[1][1][0]=1; for (int i = 2; i &lt; 120002; ++i)&#123; dp[i][0][0]=(dp[i-1][0][0]+dp[i-1][0][1]+dp[i-1][0][2])%100000007; dp[i][0][1]=dp[i-1][0][0]%100000007; dp[i][0][2]=dp[i-1][0][1]%100000007; dp[i][1][0]=(dp[i-1][0][0]+dp[i-1][0][1]+dp[i-1][0][2]+dp[i-1][1][0]+dp[i-1][1][1]+dp[i-1][1][2])%100000007; dp[i][1][1]=(dp[i-1][1][0])%100000007; dp[i][1][2]=(dp[i-1][1][1])%100000007; &#125; int N; cin&gt;&gt;N; cout&lt;&lt;(dp[N][0][0]+dp[N][0][1]+dp[N][0][2]+dp[N][1][0]+dp[N][1][1]+dp[N][1][2])%100000007&lt;&lt;'\\n'; return 0; &#125; 後記 Afterword這題 Sine Wu 也分享了他的解法之後來研究，研究完會貼出來分享台南一中OJ有個類題 https://toj.tfcis.org/oj/pro/416/測試資料高達 $N=10^9$這種就只能寫矩陣快速冪可以把$O(N)$變成$O(\\log N)$","categories":[{"name":"解題區","slug":"解題區","permalink":"https://blog.yangjerry.tw/categories/解題區/"},{"name":"解題報告書 - ZeroJudge","slug":"解題區/解題報告書-ZeroJudge","permalink":"https://blog.yangjerry.tw/categories/解題區/解題報告書-ZeroJudge/"}],"tags":[{"name":"DP","slug":"DP","permalink":"https://blog.yangjerry.tw/tags/DP/"}]},{"title":"b981. YoJudge 預練(時間之章)","slug":"zj-b981","date":"2018-10-26T03:30:17.000Z","updated":"2018-10-26T03:44:50.027Z","comments":true,"path":"2018/10/26/zj-b981/","link":"","permalink":"https://blog.yangjerry.tw/2018/10/26/zj-b981/","excerpt":"題目 Problem題目連結：https://zerojudge.tw/ShowProblem?problemid=b981","text":"題目 Problem題目連結：https://zerojudge.tw/ShowProblem?problemid=b981 敘述 Description 前幾天看到一隻 b961 YoJudge怪獸，感覺太強大了，所以先打Lo練功，期盼來日再戰YoJudge怪獸。 這次任務較簡單，將以下各種格式的時間單位統一轉換為毫秒。 以下 x,y,z,a,b皆為非負整數可能出現的時間單位格式如下：xhour :代表 x 小時, 0&lt;=x&lt;24xhym :代表 x 小時又 y 分鐘, 0&lt;=x&lt;24, 0&lt;=y&lt;60xhymzs :代表 x 小時又 y 分鐘又 z 秒, 0&lt;=x&lt;24, 0&lt;=y&lt;60, 0&lt;=z&lt;60ymin :代表 y 分鐘, 0&lt;=y&lt;60ymzs :代表 y 分鐘又 z 秒, 0&lt;=y&lt;60, 0&lt;=z&lt;60zs :代表 z 秒, 0&lt;=y&lt;60, 0&lt;=z&lt;60z.as :代表 z 秒又 a*100毫秒, 0&lt;=z&lt;60, 0&lt;=a&lt;10bms :代表 b 毫秒, 0&lt;=b&lt;1000 輸入 Input多行直到 EOF，每行只有如上題目所說的時間格式，沒有空格 輸出 Output將輸入的每一行換算為毫秒，輸出一行整數 範例輸入 Sample Input13hour 9h20m 23h17m57s 6min 34m50s 8s 19.7s 567ms 範例輸出 Sample Output46800000 33600000 83877000 360000 2090000 8000 19700 567 提示 Hint題解 Solution數字會先讀取，所以先存數字到 $tmp$ 裡面讀到 $h$ 可能是 $h$ 或 $hour$，要自己判斷讀到 $m$ 可能是 $m$ 或 $min$ 或 $ms$，$ms$ 是毫秒，要另外區隔要注意小數點，反正小數點也只會在 $s$ 出現出現小數點，就直接把數字放在 $s$ 就好小數點後的數字另外判斷 程式碼 Accepted Code#include &lt;bits/stdc++.h&gt; #define _ ios::sync_with_stdio(0);cin.tie(0);cout.tie(0); using namespace std; int main()&#123; _ string enter; while(cin&gt;&gt;enter)&#123; int h=0,m=0,s=0,dot=0,ms=0,tmp=0,dotyes=0; for(unsigned int i=0;i&lt;enter.length();i++)&#123; if(enter[i]=='.')&#123; s=tmp; dotyes=1; tmp=0; &#125; else if('0'&lt;=enter[i]&amp;&amp;enter[i]&lt;='9')&#123; tmp*=10; tmp+=enter[i]-'0'; &#125; else if(enter[i]=='h')&#123; if(i+1&lt;enter.length())&#123; if(enter[i+1]=='o')&#123; h=tmp; i+=3; &#125; else&#123; h=tmp; &#125; &#125; else&#123; h=tmp; &#125; tmp=0; &#125; else if(enter[i]=='m')&#123; if(i+1&lt;enter.length())&#123; if(enter[i+1]=='s')&#123; ms=tmp; i+=1; &#125; else if(enter[i+1]=='i')&#123; m=tmp; i+=2; &#125; else&#123; m=tmp; &#125; &#125; else&#123; m=tmp; &#125; tmp=0; &#125; else if(enter[i]=='s')&#123; if(dotyes)&#123; dot=tmp; &#125; else&#123; s=tmp; &#125; tmp=0; &#125; &#125; m+=h*60; s+=m*60; dot+=s*10; ms+=dot*100; cout&lt;&lt;ms&lt;&lt;'\\n'; &#125; return 0; &#125; 後記 Afterword很久沒出解題報告書了還有另一個 YoJudge 預練(空間之章)晚點再寫吧！寫完「空間之章」，就可以來寫真正的「YouJudge」(X)了","categories":[{"name":"解題區","slug":"解題區","permalink":"https://blog.yangjerry.tw/categories/解題區/"},{"name":"解題報告書 - ZeroJudge","slug":"解題區/解題報告書-ZeroJudge","permalink":"https://blog.yangjerry.tw/categories/解題區/解題報告書-ZeroJudge/"}],"tags":[{"name":"字串處理","slug":"字串處理","permalink":"https://blog.yangjerry.tw/tags/字串處理/"}]},{"title":"理型論？為何凡是不能只看表面？","slug":"theory-of-forms","date":"2018-10-24T01:25:49.000Z","updated":"2018-10-24T03:56:28.296Z","comments":true,"path":"2018/10/24/theory-of-forms/","link":"","permalink":"https://blog.yangjerry.tw/2018/10/24/theory-of-forms/","excerpt":"Tag 是不是多了兩個感覺不相關的？((((；ﾟДﾟ)))))))","text":"Tag 是不是多了兩個感覺不相關的？((((；ﾟДﾟ))))))) 前幾天上了教育哲學，感覺跟現在的事件有點相關，所以我把它拉進裡面了（這只是我的個人上課筆記而已）（如果你是要專業研究的，請回去上一頁或是看其他人寫的文章，哲學哲學雞蛋糕的理型論） 理型論 Theory of Form提出人：柏拉圖（Plato），古希臘三哲人之一 他認為觀念界 表象界 vs 觀念界表象界 Appenrance它靠著感官，眼、耳、口、鼻、觸，來去説他是什麼樣子的例如：水壺，我用眼睛感覺，他是圓柱體的 但是，表象是可以被偽造的例如：筷子插入水中，用眼睛感覺，筷子被折斷了((((；ﾟДﾟ))))))) 表象界它是：短暫的、虛假的、易變的 日本的《世界奇妙物語》之前還演過類似的有個人犯了重大的罪，被判了30天30天？重大的罪只有30天？眾人很疑惑 這30天以內，犯人受盡各種折磨然而，孰不知，夢裡的30天 = 現實的5分鐘現實是被判30天，也就是夢裡大約720年 觀念界 Idea剛剛談到，表象是可以被偽造的例如：筷子插入水中，用眼睛感覺，筷子被折斷了((((；ﾟДﾟ))))))) 觀念界，就是知道筷子沒有被折斷，只是水的折射看起來被折斷了你知道了水的折射，才知道筷子並沒有斷 觀念界它是\b：永恆的、真實的、不變的 洞穴寓言 Allegory of the Cave內容其實 Google、Wikipedia 都看得到 如果給一名囚犯鬆綁，出去看見這些以往所見的影子的原型，你覺得會怎麼樣？這個人可能會在強光刺激下痛苦不堪，產生錯亂。他可能會認為外面所看到的東西不是現實的。因為他相信只有在洞壁上能看見真相。 普悠瑪事件 Train derailment很多人知道普悠瑪出軌事件，看著新聞直播救援 剛好拍到慈濟在助念，當天有人身為前救難隊員就出來罵慈濟説干擾救援（也就是說，前救難隊員並沒有在現場） 週日：Po文到「爆料公社」週一：大家一起狂鞭「慈濟」，說「作秀」「詛咒別人」「詐騙集團」「干擾救援」之類的週二：大愛電視FB專頁表示「如果志工助念，影響到搜救工作，警消人員一定會來制止的，但現場並沒有人有任何表示。」「慈濟志工跟媒體被安排在同一區，很接近攝影機收音位置，可能因此導致媒體直播時，志工的聲音很明顯，引發觀眾的關切與誤會。」 （詳情也可以去看大愛電視FB專頁，多吸收一點資訊，多方面查證）（也不要只是聽信「媒體」、「爆料公社」怎麼説就怎麼罵，不然你也是跟那些洞穴囚犯一樣） 真相怎麼樣，我也不多做評論了，畢竟我沒有在現場至於真的是不是「作秀」「干擾救援」？不要只是憑著一張照片、一段錄音、一部影片就輕易的斷定事實 後記 Afterword學習哲學，並不是思考哲學，而是更有哲學的思考保持著理性，才能更接近真相 為何凡是不能只看表面？因為表象是可以被偽造的 多思考、多查證，不要只是人云亦云否則，你也跟洞穴囚犯沒什麼差異","categories":[{"name":"師培筆記","slug":"師培筆記","permalink":"https://blog.yangjerry.tw/categories/師培筆記/"},{"name":"師培筆記 - 教育哲學","slug":"師培筆記/師培筆記-教育哲學","permalink":"https://blog.yangjerry.tw/categories/師培筆記/師培筆記-教育哲學/"}],"tags":[{"name":"理型論","slug":"理型論","permalink":"https://blog.yangjerry.tw/tags/理型論/"},{"name":"洞穴寓言","slug":"洞穴寓言","permalink":"https://blog.yangjerry.tw/tags/洞穴寓言/"},{"name":"慈濟","slug":"慈濟","permalink":"https://blog.yangjerry.tw/tags/慈濟/"},{"name":"普悠瑪出軌事件","slug":"普悠瑪出軌事件","permalink":"https://blog.yangjerry.tw/tags/普悠瑪出軌事件/"}]},{"title":"演講筆記：醫人文 —— 我的故事","slug":"kp-tcu-note","date":"2018-10-17T02:26:31.000Z","updated":"2018-10-17T07:05:08.899Z","comments":true,"path":"2018/10/17/kp-tcu-note/","link":"","permalink":"https://blog.yangjerry.tw/2018/10/17/kp-tcu-note/","excerpt":"校長週會，老實說，講者聽一聽，隔幾天就忘記了","text":"校長週會，老實說，講者聽一聽，隔幾天就忘記了 演講前數天 Before「什麼？大一校長週會是柯P？」我瞪大著眼說「對啊…這是真的」室友「傻眼…那我們之前到底請誰來啊？」這也是蠻奇葩的事之一新生的國文檢定門檻都直接被刪除了反正意想不到真的很多 演講前一天 Yesterday晚上跟女友分享我明天想要去聽柯P的演講打算明天吃完早午餐，就直接過去大愛樓 我女友大概跟我說類似的經驗，以前也有請沈玉琳來演藝廳也是爆棚的，一樓坐滿就到二樓坐，二樓坐滿就站著聽 演講當天中午12點我就在簽到處等待了等到差不多1點才能進場還好人還沒有很多，坐到第二排 演講者 Lecturer臺北市第6任市長 柯文哲圖片4不4太大了？ 演講內容台大醫院當他來到台大醫院的第一天，體驗到人生無常 人生哲學人生都是意外（也包括當上市長吧）台大醫院的磨練，也包括被彈劾的事件（那時候陳佩琪直接衝出來跟台大槓上，台灣啟示錄還有做專訪） 「最困難並不是面對挫折打擊，最困難的是面對挫折打擊，卻沒有失去對人世之熱情」我真的覺得這句話最後面的那一句是最難的，沒有失去對人世之熱情，經歷過挫折打擊後，真的，好難。 把別人當作自己 博愛把自己當作別人 淡然把別人當作別人 智慧把自己當作自己 自在 心路歷程他曾經這樣過：「見山是山 -&gt; 見山不是山 -&gt; 見山是山」套用在醫生怎麼說：「看病人 -&gt; 看數據 -&gt; 看病人」曾經有一段時間他都看不到病人，專心看著機器上的數字 Dr.ECMO邵曉玲 事件體驗到「十年寒窗無人問，一舉成名天下知」 高科技叢林看到了16天沒心臟，用兩台ECMO維生 柯P直接反問我們：「什麼是活著？」「病人旁邊放了一堆維生機器的後面，你看到什麼？」「不會死，也不會活，你是否願意讓他走？」 「如果有錢不會死，王永慶會還在」 世大運「如果誠心要做一件事，全世界都會來幫你。」一日幕僚還跟邰哥講說：「聽障奧運要5.4億，我辦世大運3.6億，你覺得為什麼？」 「如果你成功 朋友認識你如果你失敗 你認識朋友如果你成功失敗成功失敗…. 你認識人生」 給台灣年輕人最大的啟示 Just Do It做！不一定會成功不做！一定會失敗 後記 Afterword我後來發現，我之前在柯P的IG上，他發過的名言我都會截圖今天演講聽完整理筆記時，才知道這些話他幾乎都說過 這筆記整理得有點亂，可能之後再修吧！","categories":[{"name":"演講筆記","slug":"演講筆記","permalink":"https://blog.yangjerry.tw/categories/演講筆記/"}],"tags":[{"name":"演講筆記","slug":"演講筆記","permalink":"https://blog.yangjerry.tw/tags/演講筆記/"},{"name":"柯P","slug":"柯P","permalink":"https://blog.yangjerry.tw/tags/柯P/"}]},{"title":"c731. 走路時要算數學","slug":"zj-c731","date":"2018-09-26T04:52:11.000Z","updated":"2019-01-19T05:59:39.130Z","comments":true,"path":"2018/09/26/zj-c731/","link":"","permalink":"https://blog.yangjerry.tw/2018/09/26/zj-c731/","excerpt":"題目 Problem題目連結：https://zerojudge.tw/ShowProblem?problemid=c731","text":"題目 Problem題目連結：https://zerojudge.tw/ShowProblem?problemid=c731 敘述 Description在一個二維平面上，從原點出發，每一步等於一單位長，每一次只能向右走、向上走或向左走。請問恰好走 n 步且不經過已走的點共有多少種走法？ 輸入 Input輸入僅一行，為正整數 n （ 0 &lt; n &lt;= 10000 ）。 輸出 Output一個整數, 表示方案數。由於答案可能很大，你只需要輸出這個答案 mod 12345的值 ( 換句話說，輸出這個答案除以12345的餘數 )。 範例輸入 Sample Input【範例輸入一】 2 【範例輸入二】 1 範例輸出 Sample Output【範例輸出一】 7 【範例輸出二】 3 提示 Hint【分數】 20% n &lt;= 5 40% n &lt;= 10 60% n &lt;= 100 80% n &lt;= 1000 100% n &lt;= 10000 題解 Solution經典DP問題，如果不要走到重複的點，就不要往回走如果要往上走，不用考慮會不會重複的點，全部加起來就對了如果要往左走，前一步就不能往右走。如果要往右走，前一步就不能往左走。然後記得每次算完 $Mod\\ 12345$ 就好 程式碼 Accepted Code#include &lt;bits/stdc++.h&gt; #define _ ios::sync_with_stdio(0);cin.tie(0);cout.tie(0); using namespace std; int main()&#123; int up[10001]=&#123;1&#125;,left[10001]=&#123;1&#125;,right[10001]=&#123;1&#125;; int N; cin&gt;&gt;N; for(int i=1;i&lt;N;i++)&#123; up[i]=up[i-1]+left[i-1]+right[i-1]; left[i]=up[i-1]+left[i-1]; right[i]=up[i-1]+right[i-1]; up[i]%=12345; left[i]%=12345; right[i]%=12345; &#125; cout&lt;&lt;(up[N-1]+left[N-1]+right[N-1])%12345&lt;&lt;'\\n'; return 0; &#125; 後記 Afterword數字應該能再開大一點啊，還以為這題有什麼陷阱 = =如果沒有意外，下一篇應該是寫演講筆記以前演講聽一聽就算了，不過這次我想寫出來講者是誰？敬請期待","categories":[{"name":"解題區","slug":"解題區","permalink":"https://blog.yangjerry.tw/categories/解題區/"},{"name":"解題報告書 - ZeroJudge","slug":"解題區/解題報告書-ZeroJudge","permalink":"https://blog.yangjerry.tw/categories/解題區/解題報告書-ZeroJudge/"}],"tags":[{"name":"DP","slug":"DP","permalink":"https://blog.yangjerry.tw/tags/DP/"}]},{"title":"d635. 幸運777？luck","slug":"zj-d635","date":"2018-09-14T02:43:16.000Z","updated":"2018-09-14T05:04:31.517Z","comments":true,"path":"2018/09/14/zj-d635/","link":"","permalink":"https://blog.yangjerry.tw/2018/09/14/zj-d635/","excerpt":"題目 Problem題目連結：https://zerojudge.tw/ShowProblem?problemid=d635","text":"題目 Problem題目連結：https://zerojudge.tw/ShowProblem?problemid=d635 敘述 Description你說什麼？777=511？怎麼可能…？ 因為這裡是八進位的777轉換成10進位的511了～(好爛ˇ) 給你十進位的數字，請你把他們轉成八進位好嗎？ 輸入 Input每個測資點有多筆測資，請以EOF作為結束。每組測資一行，有整數n(0&lt;=n&lt;=511)，表示要轉換成八進位的數字最後出現小於0的整數表示測資結束。 &lt;所有出現的整數皆可以signed 32-bits int儲存&gt; 輸出 Output對於每一行測資請輸出整數n的八進位表示。對於最後一個小於0的整數，請輸出-1。 範例輸入 Sample Input277 511 123 456 -1 範例輸出 Sample Output425 777 173 710 -1 提示 Hint1.進位制轉換2.共三個測資點30%、35%、35%，第一個測資點即範例測資。 題解 Solution以EOF作為結束？最後出現小於0的整數表示測資結束？到底是我國文爛還是題目敘述爛？（好歹我大學國文門檻過了）有些人會用C++內建轉$8$進位的，但還是要知道概念 $10$進位的$$511_{(10)}$$會是$$ 511_{(10)} = 5 * 10^2 + 1 * 10^1 + 1 * 10^0 $$$8$進位的$$777_{(8)}$$會是$$ 777_{(8)} = 7 * 8^2 + 7 * 8^1 + 7 * 8^0 = 511_{(10)} $$$8$進位的$$173_{(8)}$$會是$$ 173_{(8)} = 1 * 8^2 + 7 * 8^1 + 3 * 8^0 = 123_{(10)} $$ 大致上不論是轉成$N$進位都差不多 $10$進位轉成$8$進位 先把數字 $MOD\\ 8$ 就可以求出$8$進位中的個位數$123%8=3$再把數字 $/\\ 8$ 後再 $MOD\\ 8$ 就可以求出$8$進位中的下個位數$123/8=15$$15%8=7$再把數字 $/\\ 8$ 後再 $MOD\\ 8$ 就可以求出$8$進位中的下個位數$15/8=1$$1%8=1$ 然後把數字倒敘輸出就可以拿到$1,7,3$ 如果可以EOF結尾，我就把負數自動設定為$-1$ 輸入$0$出來會是空白，所以還加了特判 程式碼 Accepted Code#include &lt;bits/stdc++.h&gt; #define _ ios::sync_with_stdio(0);cin.tie(0);cout.tie(0); using namespace std; int main()&#123; _ long long int enter; while(cin&gt;&gt;enter)&#123; if(enter&lt;0)&#123; cout&lt;&lt;\"-1\"&lt;&lt;'\\n'; continue; &#125; if(enter==0)&#123; cout&lt;&lt;\"0\"&lt;&lt;'\\n'; continue; &#125; int ans[10]=&#123;0&#125;,len=0; while(enter)&#123; ans[len++]+=enter%8; enter/=8; &#125; for(int i=len-1;i&gt;=0;i--) cout&lt;&lt;ans[i]; cout&lt;&lt;'\\n'; &#125; return 0; &#125; 後記 Afterword這題題目敘述真的是爛到吃了好幾個 WA寫 UVa 題目也有碰過一次，題目沒有寫清楚最後還是看了一下 AC Code 才知道在寫什麼","categories":[{"name":"解題區","slug":"解題區","permalink":"https://blog.yangjerry.tw/categories/解題區/"},{"name":"解題報告書 - ZeroJudge","slug":"解題區/解題報告書-ZeroJudge","permalink":"https://blog.yangjerry.tw/categories/解題區/解題報告書-ZeroJudge/"}],"tags":[{"name":"進位制","slug":"進位制","permalink":"https://blog.yangjerry.tw/tags/進位制/"}]},{"title":"超修？扛下去？演算法直接跳上去？","slug":"1071credit","date":"2018-09-12T05:51:00.000Z","updated":"2018-09-12T16:07:36.589Z","comments":true,"path":"2018/09/12/1071credit/","link":"","permalink":"https://blog.yangjerry.tw/2018/09/12/1071credit/","excerpt":"自從升到大學以來，說輕鬆嗎？好像也不是至少不需要對本科放太多心力，畢竟都是學過的 相比我同學，他們還是很強的，我學了程式也很久了，他們並沒有程式背景也就是說，我花了兩年理解的東西，我同學花了半年學完","text":"自從升到大學以來，說輕鬆嗎？好像也不是至少不需要對本科放太多心力，畢竟都是學過的 相比我同學，他們還是很強的，我學了程式也很久了，他們並沒有程式背景也就是說，我花了兩年理解的東西，我同學花了半年學完 大一簡略由於大一學期末我也加入了「師資培訓生」原本的128畢業學分，瞬間飆到158學分再加上學校又一堆看起來很（狗屎爛蛋）有用的畢業門檻 為了趕那些畢業門檻，大一就先把通識基本門檻達到（Ex.環境2學分以上、邏輯2學分以上，這種容易忽略的小門檻）再去修（躺分課）或興趣課 大一上加加減減就變成28學分（其實只有25學分，因為有暑假先修課3學分）大一下為了加入師培更容易，變成26學分 大一下修課時，我一直想要當助教，當助教前當然要先修過當然我也問了其他學長們、系主任的意見有些學長覺得可以、有些覺得要先去修資料結構（但我光打競賽就學了 一堆奇怪的 資料結構）但我問主任時，他就直接說「可以啊」連猶豫一下都沒有然後大一下學期末，我就選了……ㄏㄏㄏㄏㄏ 暑假助教暑假是有先修課，也剛好在徵助教、講師差不多就是練習教學、跟學弟妹互動 話說，我還忘記繳學費，差點不能註冊…… 大二開學大二把一些沒有選上的通識課換掉，選一選就變成26學分了演算法剛進去上課時，教授還問我怎麼選進來的（原本以前有擋修，但現在都拿掉了） 我覺得比較擔心的事，分組，畢竟在這裡只有學長姐，沒有同學不過有學長願意收留我，超好der（而且都是學霸等級） 第一次上機題目是河內塔問題當然，要學會怎麼分析問題、推出規律大致上就是這樣 至於迎新總召嗎？再說吧！又要再寫一篇……","categories":[{"name":"生活","slug":"生活","permalink":"https://blog.yangjerry.tw/categories/生活/"}],"tags":[{"name":"生活","slug":"生活","permalink":"https://blog.yangjerry.tw/tags/生活/"},{"name":"學分","slug":"學分","permalink":"https://blog.yangjerry.tw/tags/學分/"},{"name":"超修","slug":"超修","permalink":"https://blog.yangjerry.tw/tags/超修/"},{"name":"助教","slug":"助教","permalink":"https://blog.yangjerry.tw/tags/助教/"}]},{"title":"c311. PC:分組之塔","slug":"zj-c311","date":"2018-09-02T15:15:04.000Z","updated":"2018-09-02T16:41:16.660Z","comments":true,"path":"2018/09/02/zj-c311/","link":"","permalink":"https://blog.yangjerry.tw/2018/09/02/zj-c311/","excerpt":"題目 Problem題目連結：https://zerojudge.tw/ShowProblem?problemid=c311","text":"題目 Problem題目連結：https://zerojudge.tw/ShowProblem?problemid=c311 敘述 Description進到了這個房間，小風終於遇到第一個塔主，這個塔主精神有點疾病，他有超級多的部下，而他想要將這些人以91個人為單位分為一組，而多出來的人就要把他殺掉。然而他實在是太懶惰了，不想要自己算要殺掉多少人，於是他命令小風幫他算出人數，否則第一個先死的就是小風了。無奈小風的除法沒有學好，所以他算不出來。於是小風再次需要各位的幫忙，請算出塔主需要殺掉的人數。 輸入 Input輸入有多筆測資，並以EOF作為結尾。每一筆測資包含一個正整數n，代表塔主的部下人數。 10%的測資滿足n&lt;=10^940%的測資滿足n&lt;=10^18100%的測資滿足n&lt;=10^100000 輸出 Output對於每一筆輸入 請輸出塔主需要殺掉的人數 範例輸入 Sample Input92 93 91 範例輸出 Sample Output1 2 0 提示 Hint題解 Solution如何判斷數字是不是$7$的倍數跟$13$的倍數當然是打開 Google 查啊（Ｘ） 7的倍數：由個位數起每三位數字一節，各奇數節的和與偶數節的和相減，其差是7的倍數。13的倍數：由個位數起每三位數字一節，各奇數節的和與偶數節的和相減，其差是13的倍數。（文字來源：https://leestar2018.blogspot.com/2016/09/113.html） 把數字長度補到$3$的倍數就可以算了 反正數字都一樣，就直接 $mod\\ 91$（繳交後3秒，回傳結果：WA）後來想想，我忘了重要關鍵點，因為只是判斷7的倍數或13的倍數，可以不用管正負但！如果是 $mod$ 就要區分正負關係了 正數正常 $mod\\ 91$ 就好負數要先 $mod\\ 91$ 再加 $91$ 再 $mod\\ 91$不知道為什麼的人請去 Google 負數取模 程式碼 Accepted Code#include &lt;bits/stdc++.h&gt; #define _ ios::sync_with_stdio(0);cin.tie(0);cout.tie(0); using namespace std; int main()&#123; _ string enter;//192936162 55 while(cin&gt;&gt;enter)&#123; int total=0; int s=enter.length()%3; if(s==1) enter=\"00\"+enter; else if(s==2) enter=\"0\"+enter; int p=0; for(int i=enter.length()-3;i&gt;=0;i-=3)&#123; if(p%2)&#123; total-=((enter[i]-'0')*100+(enter[i+1]-'0')*10+(enter[i+2]-'0')); &#125; else&#123; total+=((enter[i]-'0')*100+(enter[i+1]-'0')*10+(enter[i+2]-'0')); &#125; p++; &#125; int mo=total%91; if(total&lt;0) printf(\"%d\\n\",(91+mo)%91); else printf(\"%d\\n\",mo); &#125; return 0; &#125; 後記 Afterword異想不到的事，這題我是第一個 $0ms$ 完成畢竟 ZeroJudge 有改版過效能應該有提升但，套用憲哥說的一句話 不過我倒是好奇，畢竟這題曾經是比賽題如果是在比賽期間，你要怎麼讓這題拿到AC呢？","categories":[{"name":"解題區","slug":"解題區","permalink":"https://blog.yangjerry.tw/categories/解題區/"},{"name":"解題報告書 - ZeroJudge","slug":"解題區/解題報告書-ZeroJudge","permalink":"https://blog.yangjerry.tw/categories/解題區/解題報告書-ZeroJudge/"}],"tags":[{"name":"負數取Mod","slug":"負數取Mod","permalink":"https://blog.yangjerry.tw/tags/負數取Mod/"},{"name":"倍數判斷法","slug":"倍數判斷法","permalink":"https://blog.yangjerry.tw/tags/倍數判斷法/"}]},{"title":"d708. 小王的积木","slug":"zj-d708","date":"2018-09-02T07:35:37.000Z","updated":"2018-10-19T16:49:22.115Z","comments":true,"path":"2018/09/02/zj-d708/","link":"","permalink":"https://blog.yangjerry.tw/2018/09/02/zj-d708/","excerpt":"題目 Problem題目連結：https://zerojudge.tw/ShowProblem?problemid=d708","text":"題目 Problem題目連結：https://zerojudge.tw/ShowProblem?problemid=d708 敘述 Description自从小涵去商店买了那么多的积木，小王也去买了一大堆。不过小王比较喜欢数学，所以他买的积木上写的只有数字；因为他认为偶数比较吉利，于是他买的积木是全是偶数快的。听说小涵少了一个积木，他便整理了一下他的，可是他发现他也少了一块积木…（很无语吧…）上次他见你已经帮小涵找到了积木，于是就请你来帮他找找，而且他还告诉你：“我的积木比小涵的好找很多。”半信半疑的你决定帮帮他。 輸入 Input只有一笔测资。 测资末尾会有多余信息，忽略就好。//感谢asas提醒。2015/8/6 输入数据的第一行，是小王告诉你他的积木个数N（N一定是一个正偶数，而且2&lt;=N&lt;=1000000，你看他的积木可没有小涵的多）。接下来每行有（N-1）个数字，表示小王每个积木上的数字（可以用longint存储）。 輸出 Output对于每组测资，输出小王缺少的那块积木的数字。 範例輸入 Sample Input8 1 2 3 2 3 4 4 範例輸出 Sample Output1 提示 Hint提示 ：小涵的积木的AC代码可以直接AC本题。但我希望您可以想想另一种解答方式，想想数字有什么特殊性，参考时间复杂度$O(n)$，空间复杂度$O(1)$。 还有一种算法时间复杂度$O(n\\log{n})$，空间复杂度$O(n)$的… 如果哪种语言直接输入都超时的话，请与我联系，我将调整时间限制。 //感谢ck99126指出题目存在的一些问题！ 題解 Solution1.直接暴力做無庸置疑，跟 C++ Map 一起使用 程式碼 I Accepted Code I#include &lt;bits/stdc++.h&gt; #define _ ios::sync_with_stdio(0);cin.tie(0);cout.tie(0); using namespace std; int main()&#123; _ long long int N; cin&gt;&gt;N; map&lt;int,int&gt; m; long long int A; for(int i=0;i&lt;N-1;i++)&#123; cin&gt;&gt;A; map&lt;int,int&gt;::iterator it=m.find(A); if(it==m.end()) m[A]=1; else m[A]++; &#125; for(auto it=m.begin();it!=m.end();it++) if(it-&gt;second%2)&#123; cout&lt;&lt;it-&gt;first&lt;&lt;'\\n'; break; &#125; return 0; &#125; 2.XORc651. 三、區間xor(RXQ) 這篇文章有寫過有關 XOR 的性質 用歸零律跟自反性就可以完成了 程式碼 II Accepted Code II#include &lt;stdio.h&gt; int main()&#123; int N,ans=0; scanf(\"%d\",&amp;N); N--; while(N--)&#123; int S; scanf(\"%d\",&amp;S); ans^=S; &#125; printf(\"%d\\n\",ans); return 0; &#125; 後記 Afterword很神奇吧，這樣複雜度都壓下去了但後面有些東西是用HTML補上去的不曉得是不是 Hexo 出 BUG 了有些正常的 Markdown 無法解析成功就這樣吧","categories":[{"name":"解題區","slug":"解題區","permalink":"https://blog.yangjerry.tw/categories/解題區/"},{"name":"解題報告書 - ZeroJudge","slug":"解題區/解題報告書-ZeroJudge","permalink":"https://blog.yangjerry.tw/categories/解題區/解題報告書-ZeroJudge/"}],"tags":[{"name":"XOR","slug":"XOR","permalink":"https://blog.yangjerry.tw/tags/XOR/"}]},{"title":"c651. 三、區間xor(RXQ)","slug":"zj-c651","date":"2018-09-01T16:41:17.000Z","updated":"2018-09-02T09:39:57.626Z","comments":true,"path":"2018/09/02/zj-c651/","link":"","permalink":"https://blog.yangjerry.tw/2018/09/02/zj-c651/","excerpt":"題目 Problem題目連結：https://zerojudge.tw/ShowProblem?problemid=c651","text":"題目 Problem題目連結：https://zerojudge.tw/ShowProblem?problemid=c651 敘述 Description給你一段 $N$ 個正整數的序列 $a_1∼a_N$ ，請你執行 $Q$ 筆操作。 輸入 Input第一行有兩個正整數 $N,Q$ 。 第二行有 $N$ 個非負整數 $a_i$ 。 接下來有 $Q$ 行，每行代表一個操作。 如果是 $0\\ l\\ r$ ，代表詢問 $[l,r]$ 區間的每個數字做 $xor$ 運算之後的值。 如果是 $1\\ x\\ v$ ，代表將 $a_x$ 置換成 $v$ 。 ※ $xor$ 即代表C++中的位元運算「^」。 輸出 Output對於每個詢問，輸出詢問區間的每個數字做 $xor$ 運算之後的值。 範例輸入 Sample Input5 3 16 9 1 5 3 0 1 5 1 1 5 0 1 5 範例輸出 Sample Output30 11 提示 Hint本題共有四組測試題組，條件限制如下所示。每一組可有一或多筆測試資料，該組所有測試資料皆需答對才會獲得該組分數。cout &lt;&lt; (16^9^1^5^3) &lt;&lt; “\\n”; 輸出即為30。 觀察一下 xor 的性質，不然這題拿不滿XD。輸入卡很緊，記得加優化。 題解 Solution遇到一般的RMQ+單點修改問題，通常有幾種解題方式 線段樹 Segment Tree 二元索引樹（樹狀樹组） Binary Index Tree (Fenwick tree)不過這題時限只有$0.5$秒如果用前綴 $XOR$ 單點修改變成$O(N)$如果用線段樹遞迴查詢可能會有點慢（有實做過，只有$72%$，其他的被TLE） 這題可以使用BIT，也就是二元索引樹，但要如何使用呢？（以下把二元索引樹 簡稱 BIT） XOR 真值表＆性質 $A$ $B$ $A⊕B$ $0$ $0$ $0$ $1$ $0$ $1$ $0$ $1$ $1$ $1$ $1$ $0$ 恆等律：$X⊕0=X$歸零律：$X⊕X=0$自反性：$A⊕B⊕B=A⊕(B⊕B)=A⊕0=A$ 其中的歸零律跟自反性就是我們要使用的 拿到BIT的模板應該都是求區間和 假設我們要求$[L,R]$的區間和是不是只要$sum(R)-sum(L-1)$？ 這題改成區間 XORBIT 初始化就改成 XOR（程式碼 Line 15）然後把求前綴和的 $+$ 改成 XOR（程式碼 Line 9）就變成 前綴 XOR 了 查詢只要輸出 $xxor(R)⊕xxor(L-1)$（程式碼 Line 37） 單點修改呢？先把原本的數字跟要變成的數字做 XOR 變成 $val$（程式碼 Line 40）利用歸零律跟自反性後面需要更新的數字，統一跟 $val$ 做 XOR單點修改就完成了 程式碼 Accepted Code#include &lt;bits/stdc++.h&gt; #define _ ios::sync_with_stdio(0);cin.tie(0);cout.tie(0); #define lowbit(x) ((x)&amp;(-x)) using namespace std; const int MAXN = 1000000+2; int Origin[MAXN+1]=&#123;0&#125;; int BITS[MAXN+1]=&#123;0&#125;; int N,Q; int xxor(int x)&#123; int ans=0; for(;x;x-=lowbit(x)) ans^=BITS[x]; return ans; &#125; void init(int n) &#123; for(int x = 1; x &lt;= n; ++x) &#123; BITS[x] = Origin[x]; int y = x - lowbit(x); for(int i = x-1; i &gt; y; i -= lowbit(i)) BITS[x] ^= BITS[i]; &#125; &#125; void update(int x,int val)&#123; for(int i=x;i&lt;=N;i+=lowbit(i)) BITS[i]^=val; &#125; int main()&#123; _ cin&gt;&gt;N&gt;&gt;Q; for(int i=1;i&lt;=N;i++) cin&gt;&gt;Origin[i]; init(N); while(Q--)&#123; int choice,x,y; cin&gt;&gt;choice&gt;&gt;x&gt;&gt;y; if(choice==0)&#123; cout&lt;&lt;(xxor(y)^xxor(x-1))&lt;&lt;'\\n'; &#125; else&#123; int OO=Origin[x]^y; Origin[x]=y; update(x,OO); &#125; &#125; return 0; &#125; 後記 Afterword每次做到有關 XOR 的題型都讓我想到有一題原本 時間 $O(N\\log{N})$ 空間 $O(N)$最後複雜度可以壓在 時間 $O(N)$ 空間 $O(1)$下一篇就來寫這題的報告書","categories":[{"name":"解題區","slug":"解題區","permalink":"https://blog.yangjerry.tw/categories/解題區/"},{"name":"解題報告書 - ZeroJudge","slug":"解題區/解題報告書-ZeroJudge","permalink":"https://blog.yangjerry.tw/categories/解題區/解題報告書-ZeroJudge/"}],"tags":[{"name":"Fenwick Tree","slug":"Fenwick-Tree","permalink":"https://blog.yangjerry.tw/tags/Fenwick-Tree/"},{"name":"Binary Index Tree","slug":"Binary-Index-Tree","permalink":"https://blog.yangjerry.tw/tags/Binary-Index-Tree/"},{"name":"XOR","slug":"XOR","permalink":"https://blog.yangjerry.tw/tags/XOR/"}]},{"title":"c453. TOI2003 第二題：疊羅漢","slug":"zj-c453","date":"2018-08-31T07:29:57.000Z","updated":"2018-09-02T04:42:34.820Z","comments":true,"path":"2018/08/31/zj-c453/","link":"","permalink":"https://blog.yangjerry.tw/2018/08/31/zj-c453/","excerpt":"題目 Problem題目連結：https://zerojudge.tw/ShowProblem?problemid=c453","text":"題目 Problem題目連結：https://zerojudge.tw/ShowProblem?problemid=c453 敘述 Description 某特技團經常表演疊羅漢的節目。表演時通常在最底層會先站好一排連續的 n 個人，然後在任意連續兩人的肩膀上面便可支撐另一個人站在這兩個人的上一層。在第二層如果有連續兩人的話，當然可繼續往第三層疊上一個人，以此類推。為了增加趣味性，有時會組合出不同的型態展現在觀眾的眼前。舉例來說，如果 n=3，也就是說底層共有 3 個人，那麼就有下列 5 種不同的組合。 如果 n=4，也就是說底層共有 4 個人，那麼你也可以列舉一下，便可知道共有下列 14 種不同的組合。現在針對不同的 n 值，請你撰寫一個程式來計算共有幾種不同的組合？ 輸入 Input第一行有一個正整數 n，1 ≤ n ≤ 20。 輸出 Output請輸出共有幾種不同的組合。 範例輸入 Sample Input//範例輸入一 3 //範例輸入二 4 範例輸出 Sample Output//範例輸出一 5 //範例輸出二 14 提示 Hint題解 Solution動態規劃 Dynamic Programming感覺這題很DP，不過 oToToT 大大真的寫出了 DP 算式： 令$dp[i][j]$代表第$i$斜排他的長度要是$j$時的方法數$dp[i][j]=\\sum_{k=j-1}^{i-1}dp[i-1][k]$因為會發現若是這裡要擺長度為$j$那前面最少要擺長度$j-1$，所以可以枚舉前一斜條擺放的數量來計算這個狀態的方法數。而對於n個斜條的總方法數，只要再枚舉最後一斜條有幾個人就好了。 我果然很低端，回我的當下我真的看不懂QQ 卡特蘭數 Catalan Number（至於為何會想到卡特蘭數，請滑到後記）這是我理解的版本，連結 $C(0,0)=1$$C(1,1)=C(0,0)$$C(2,2)=C(1,0)+C(1,1)$$C(3,3)=C(2,0)+C(2,1)+C(2,2)$$C(4,4)=C(3,0)+C(3,1)+C(3,2)+C(3,3)$…$C(N,N)=C(N-1,0)+C(N-1,1)+…+C(N-1,N-1)$ 可以把這些想像成 $N$層上面$N-1-0$層有幾種組合$N$層上面$N-1-1$層有幾種組合…$N$層上面$N-1-i$層有幾種組合…$N$層上面$1$層有幾種組合$N$層上面$0$層有幾種組合再加上 涂家銘 大大提供給我參考的圖：稍微轉一轉是不是就變成高中熟悉的最短路徑組合呢？ 程式碼 Accepted Code#include &lt;bits/stdc++.h&gt; #define _ ios::sync_with_stdio(0);cin.tie(0);cout.tie(0); using namespace std; long long int catalan(long long int N)&#123; long long int n2=2*N; long long int ans=1; for(long long int i=N+1;i&lt;=n2;i++)&#123; ans*=i; ans/=(i-N); &#125; ans/=(N+1); return ans; &#125; int main()&#123; _ long long int query[21]=&#123;0,1&#125;; for(long long int i=1;i&lt;21;i++)&#123; query[i]=catalan(i); &#125; int N; cin&gt;&gt;N; cout&lt;&lt;query[N]&lt;&lt;'\\n'; return 0; &#125; 後記 Afterword這題我一開始打開 Google 搜尋「0 1 2 5 14 OEIS」（我認為0位是0種，所以一開始打0）作弊開好開滿但沒想到一打開就是傳說中的卡特蘭數列只有聽到「清大程式解題營」的 旺陽學長 提到過但沒有寫過這種題目 不過 涂家銘 大大表示： 幫社團出練習賽題目其中一題用 DP 做會 TLE（練習賽也太狠了吧QQ） 的確，畢竟這題的最大值$N=20$，如果$N$更大，有機會爆 TLE 了","categories":[{"name":"解題區","slug":"解題區","permalink":"https://blog.yangjerry.tw/categories/解題區/"},{"name":"解題報告書 - ZeroJudge","slug":"解題區/解題報告書-ZeroJudge","permalink":"https://blog.yangjerry.tw/categories/解題區/解題報告書-ZeroJudge/"}],"tags":[{"name":"建表","slug":"建表","permalink":"https://blog.yangjerry.tw/tags/建表/"},{"name":"卡特蘭數","slug":"卡特蘭數","permalink":"https://blog.yangjerry.tw/tags/卡特蘭數/"}]},{"title":"a625. 5. Overhanging Cards","slug":"zj-a625","date":"2018-08-30T12:04:05.000Z","updated":"2018-08-30T14:42:38.454Z","comments":true,"path":"2018/08/30/zj-a625/","link":"","permalink":"https://blog.yangjerry.tw/2018/08/30/zj-a625/","excerpt":"題目 Problem題目連結：https://zerojudge.tw/ShowProblem?problemid=a625","text":"題目 Problem題目連結：https://zerojudge.tw/ShowProblem?problemid=a625 敘述 Description你可以把一疊的卡片凸出桌子的邊緣多遠呢？如果你有一張卡，你最大可以凸出卡片長度的一半。有兩張卡時，你可以把上面那張的一半凸出下面的那張，而下面的那張則有三分之一凸出桌子的邊緣，總凸出長度則為$ 1/2 + 1/3 = 5/6 $張卡片長度。總之，你可以把$ n $張卡片凸出$ 1/2 + 1/3 + 1/4 + … + 1/(n+1) $張卡片的長度，其中最上面那張凸出$ 1/2 $於第二張的外面，第二張凸出$ 1/3 $於第三張的外面，第三張凸出$ 1/4$，以此類推，最底下那張則凸出$ 1/(n+1)$。如下圖所示。 輸入 Input每筆測資一行，含有一個正浮點數 c (代表所要凸出的總長度)，其值最小為 0.01，最大為 5.20；這個數含有三位數字。 輸出 Output輸出要達成所需的凸出長度最少需要幾張卡片。請參照範例輸出的格式。 範例輸入 Sample Input1.00 3.71 0.04 5.19 範例輸出 Sample Output3 card(s) 61 card(s) 1 card(s) 273 card(s) 提示 Hint題解 Solution$1$張卡片長度為$1/2$$2$張卡片長度為$1/2+1/3$$3$張卡片長度為$1/2+1/3+1/4$$…$以此類推$…$$n$張卡片長度為$1/2+1/3+1/4+…+1/(n+1)$先建表，最大卡片數頂多$276$張最後再用二分搜尋找卡片數就好 程式碼 Accepted Code#include &lt;bits/stdc++.h&gt; #define _ ios::sync_with_stdio(0);cin.tie(0);cout.tie(0); using namespace std; int main()&#123; _ double query[277]=&#123;0&#125;,a=0.0; for(int i=1;a&lt;=5.20;i++)&#123; a+=(1.0/(i+1)); query[i]=a; &#125; double enter; while(cin&gt;&gt;enter)&#123; int l=0,r=277; while(l+1&lt;r)&#123; int mid=(l+r)/2; if(enter&gt;query[mid])&#123; l=mid; &#125; else&#123; r=mid; &#125; &#125; cout&lt;&lt;l+1&lt;&lt;\" card(s)\"&lt;&lt;'\\n'; &#125; return 0; &#125; 後記 Afterword這一題在 ICPC Live Archive 跟 POJ 找得到ICPC Live Archive 題目代碼：2294 - HangoverPOJ 題目代碼：1003 - HangoverZeroJudge 拿到 AC 之後就到 ICPC Live Archive 繳交，但直接被 WA 掉我還以為是我二分搜寫錯但仔細看了它們的 Input 後才知道程式輸入$0.00$才會結束改完這題就 AC 了","categories":[{"name":"解題區","slug":"解題區","permalink":"https://blog.yangjerry.tw/categories/解題區/"},{"name":"解題報告書 - ZeroJudge","slug":"解題區/解題報告書-ZeroJudge","permalink":"https://blog.yangjerry.tw/categories/解題區/解題報告書-ZeroJudge/"}],"tags":[{"name":"建表","slug":"建表","permalink":"https://blog.yangjerry.tw/tags/建表/"},{"name":"二分搜","slug":"二分搜","permalink":"https://blog.yangjerry.tw/tags/二分搜/"}]},{"title":"c700. 壞掉的隊列(queue)","slug":"zj-c700","date":"2018-08-29T13:34:05.000Z","updated":"2019-01-19T05:59:46.774Z","comments":true,"path":"2018/08/29/zj-c700/","link":"","permalink":"https://blog.yangjerry.tw/2018/08/29/zj-c700/","excerpt":"題目 Problem題目連結：https://zerojudge.tw/ShowProblem?problemid=c700","text":"題目 Problem題目連結：https://zerojudge.tw/ShowProblem?problemid=c700 敘述 Description「測資中有若干行輸入，請你實作 queue 的幾種操作： push $X(0≤X&lt;2^{32})$: 將 $X$ 加入隊列 pop: 輸出隊列最前方的數字並刪除，你可以假設此時隊列不是空的」 小W本來想隨便寫寫交差了事，卻發現 STL 的 queue 壞了！ 再看看題目，原來底下附註一行小字：請用兩個 stack 完成這題。 於是小W希望你能用以下代號寫一張紙條告訴他該怎麼做。 1: 讀入 push X 並將 X 放到堆疊一 2: 讀入 push X 並將 X 放到堆疊二 3: 讀入 pop ，將堆疊一頂端的元素輸出並刪除 4: 讀入 pop ，將堆疊二頂端的元素輸出並刪除 5: 將堆疊一頂端的元素取出並放至堆疊二 6: 將堆疊二頂端的元素取出並放至堆疊一 如果取出元素時堆疊為空或者讀入 push/pop 的順序與輸入測資不符，你會害小W拿到一個WA。 輸入 Input見題目和範例。 輸出 Output輸出一行你要傳給小W的內容。 範例輸入 Sample Inputpush 111 push 222 pop pop 範例輸出 Sample Output範例輸出一: 1234 範例輸出二: 12544 範例輸出三: 1143 範例輸出四: 1313 範例輸出五: 1133 提示 Hint輸入至多 100000 行。 以範例輸入而言，範例輸出一、二會拿到AC。 範例輸出三會拿到WA，因為操作4時堆疊二是空的。 範例輸出四也會拿到WA，因為輸入順序是push-&gt;push-&gt;pop-&gt;pop，但是1313的操作分別為push-&gt;pop-&gt;push-&gt;pop。 範例輸出五的操作過程完全合法，但依據先進先出的原則，111應該比222早離開queue，若以1133的方式操作，222將比111早輸出，所以會拿到WA。 題解 Solution第一篇解題報告書就給這題啦！ Hackerrank 可以找到這個問題（這題就是要強制你使用 Stack）實作 Queue 需要用到兩個 Stack分別命名為$S1$跟$S2$ $S1$用來記錄輸入的東西$S2$就是把$S1$的內容顛倒過來 $push$的時候先放入$S1$裡面$pop$的時候先檢查$S2$有沒有東西 如果有，$S2$的頂端$pop$掉如果沒有，先$S1$所有內容$pop$到$S2$，再讓$S2$的頂端$pop$掉 了解怎麼用 Stack 實作 Queue 就可以回到這題 依照上面的做法，可以使用代號$1,4,5$的組合或$2,3,6$的組合來完成這題並且用$2$個整數紀錄$2$個 Stack 的內容數量分別命名為$x_1$跟$x_2$ 如果要$push$，就輸出$1$，把$x_1+1$如果要$pop$，就先檢查$x_2$是否大於$0$ 如果有，就輸出$4$，把$x_2-1$如果沒有，先輸出$x_1$個$5$，讓$x_2$加上$x_1$，並且把$x_1$歸零，再輸出$4$，把$x_2-1$ 這樣就可以來寫 Code 啦！ 程式碼 Accepted Code#include &lt;bits/stdc++.h&gt; #define _ ios::sync_with_stdio(0);cin.tie(0);cout.tie(0); using namespace std; int main()&#123; _ string enter; int total1=0,total2=0; while(cin&gt;&gt;enter)&#123; if(enter==\"push\")&#123; long long int a; cin&gt;&gt;a; total1++; cout&lt;&lt;1; &#125; else&#123; if(total2)&#123; cout&lt;&lt;4; total2--; &#125; else&#123; for(int i=0;i&lt;total1;i++)&#123; cout&lt;&lt;5; &#125; total2+=total1; if(total2)&#123; cout&lt;&lt;4; total2--; &#125; total1=0; &#125; &#125; &#125; return 0; &#125; 後記 Afterword這題有沒有其他解法？這題是 Special Judge，應該是有吧，但……我沒有想到上面這個解法是算簡單啦如果有更好的解法，我還會再寫上去啦！","categories":[{"name":"解題區","slug":"解題區","permalink":"https://blog.yangjerry.tw/categories/解題區/"},{"name":"解題報告書 - ZeroJudge","slug":"解題區/解題報告書-ZeroJudge","permalink":"https://blog.yangjerry.tw/categories/解題區/解題報告書-ZeroJudge/"}],"tags":[{"name":"Stack","slug":"Stack","permalink":"https://blog.yangjerry.tw/tags/Stack/"},{"name":"Queue","slug":"Queue","permalink":"https://blog.yangjerry.tw/tags/Queue/"},{"name":"Special Judge","slug":"Special-Judge","permalink":"https://blog.yangjerry.tw/tags/Special-Judge/"}]},{"title":"Hello Hexo! Test By Jerry Yang","slug":"hello-world","date":"2018-08-26T06:30:49.123Z","updated":"2018-08-30T14:43:25.866Z","comments":true,"path":"2018/08/26/hello-world/","link":"","permalink":"https://blog.yangjerry.tw/2018/08/26/hello-world/","excerpt":"先恭喜亞運台灣 🇹🇼 奪得金牌網路中文 也很大方的免費讓人註冊.tw","text":"先恭喜亞運台灣 🇹🇼 奪得金牌網路中文 也很大方的免費讓人註冊.tw 於是，這個 Blog 就誕生了第一次用 Hexo 架設用 Markdown 來寫寫看瑣碎事 首頁嘛……晚點再把坑補上寫到這裡就這樣吧！之後再補","categories":[{"name":"Hello World","slug":"Hello-World","permalink":"https://blog.yangjerry.tw/categories/Hello-World/"}],"tags":[]}]}